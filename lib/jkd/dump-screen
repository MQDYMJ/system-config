#!/usr/bin/env perl
use strict;
use v5.10; # for say
use autodie qw(:all);
use IPC::System::Simple qw(system systemx capture capturex);

use Encode;
use JSON;

my $json = JSON->new->utf8(0);

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# s:screen-name ddebug
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $debug = 0;
my $screen_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-d, ';
    printf "%-24s", '--[no]debug';
    if (length('--[no]debug') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-s, ';
    printf "%-24s", '--screen-name=SCREEN-NAME';
    if (length('--screen-name=SCREEN-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'debug|d!' => \$debug,
    'screen-name|s=s' => \$screen_name,
    'help|h!' => \&$handler_help,
);


## end generated code

if (not ${screen_name}) {
    die "You must specify screen name";
}

my $screens_json = $json->decode(scalar capturex("jkd", "rest", "screens"));
my ($screen_id, $screen_description);

my $screen_tabs = [];
my $screen_obj = {
    tabs => ${screen_tabs},
};

for (@$screens_json) {
    if ($_->{name} eq $screen_name) {
        $screen_obj->{name} = $_->{name};
        $screen_obj->{id} = $screen_id = $_->{id};
        $screen_obj->{description} = $_->{description};
        last;
    }
}

say STDERR "screen id is $screen_id" if $debug;

my $tabs_json = $json->decode(scalar capture("jkd rest screens/${screen_id}/tabs"));
my @tab_ids;
my @tab_names;
map {
    push @tab_ids, $_->{id};
    push @tab_names, $_->{name};
} @$tabs_json;

say STDERR "tab ids is @tab_ids" if $debug;

if (@tab_ids != @tab_names) {
    die "#tab ids != #tab names?"
}


for (0 .. (@tab_ids - 1)) {
    my $id = $tab_ids[$_];
    my $name = $tab_names[$_];
    my $fields = $json->decode(scalar capture("jkd rest screens/${screen_id}/tabs/${id}/fields"));

    push @$screen_tabs, {
        id => $id,
        name => $name,
        fields => $fields,
    };
}

@$screen_tabs = sort {$a->{name} cmp $b->{name}} @$screen_tabs;
print JSON->new->utf8(0)->pretty(1)->encode($screen_obj);
