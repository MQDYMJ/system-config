#!/bin/bash
set -e

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}

# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # p:project @json '?"print json format (expand fields of the issuetype)"'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o p:h \
                      --long json,project:,help,no-json \
                      -n $(basename -- $0) -- "$@")
declare json=false
declare project=
eval set -- "$TEMP"
while true; do
    case "$1" in

        --json|--no-json)
            if test "$1" = --no-json; then
                json=false
            else
                json=true
            fi
            shift

            ;;
        -p|--project)
            project=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--[no-]json'
            echo "print json format (expand fields of the issuetype)"
            printf %06s '-p, '
            printf %-24s '--project=PROJECT'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test -z "${project}"; then
    die "Must specify the project"
fi

json_str=$(
    jkd rest "issue/createmeta?projectKeys=${project}&expand=projects.issuetypes.fields"
        )

IFS=$'\n'

issuefields=(
    $(
        echo "$json_str" | jq '.projects|.[]|.issuetypes|.[]|"\(.id): \(.name)"' -r
    )
)

issuetype_id=$(
    select-args -i "$*" \
    "-O" "select-jira-issuetype" "-p" "Which issue type do you want to use?" \
    "${issuefields[@]}" | pn 1 | tr -d ':\n'
            )

if test "${json}" = false; then
    echo -n $issuetype_id
else
    echo "${json_str}" | jq '.projects|.[]|.issuetypes|.[]|if .id == "'${issuetype_id}'" then . else null end|values'
fi
