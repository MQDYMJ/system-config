#!/bin/bash

set -e

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}
jkd rest [-a] ACCESS-POINT [--] [EXTRA_ARGS_TO_CURL...]
# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # a:access-point '?"Specify which rest api to call"' \
    # xxtrace
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o a:xh \
                      --long access-point:,xtrace,help,no-xtrace \
                      -n $(basename -- $0) -- "$@")
declare access_point=
declare xtrace=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -a|--access-point)
            access_point=$2
            shift 2

            ;;
        -x|--xtrace|--no-xtrace)
            if test "$1" = --no-xtrace; then
                xtrace=false
            else
                xtrace=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %06s '-a, '
            printf %-24s '--access-point=ACCESS_POINT'
            echo
            printf "%30s" ""
            echo "Specify which rest api to call"
            printf %06s '-x, '
            printf %-24s '--[no-]xtrace'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "${xtrace}" = true; then
    set -x
fi

if test -z "${access_point}"; then
    access_point=$1
    shift
    if test "$1" = --; then
        shift
    fi
fi

if test -z "${access_point}"; then
    die "Must specify the access ponit!"
fi

if ! [[ $access_point =~ ^rest/ ]]; then
    access_point=rest/api/2/${access_point#/}
fi

if [[ $access_point =~ :// ]]; then
    j_url=$access_point
else
    j_url="${scm_jira_url}${access_point}"
fi

set -o pipefail

curl_args=(-u "${scm_jira_user}:${scm_jira_password}" "$j_url" "$@")
if test "${xtrace}" != true; then
    if curl -f -s "${curl_args[@]}"; then
        exit 0
    else
        log "curl failed on jira rest api, ${j_url}, please add -x to see possible error msgs (and note that error detection won't work)"
    fi
else
    curl "${curl_args[@]}"
fi
