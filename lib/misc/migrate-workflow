#!/bin/bash
set -e

cd "${test_dir}"
workflow_file=workflows/${workflow_name}.xml
workflow_file_with_names=workflows/${workflow_name}.names.xml

save-workflow() {
    local workflow_name=$1
    hint "下面将保存并格式化 workflow: ${workflow_name}"
    jkd export-workflow-as-xml -w "${workflow_name}" -f workflows/${workflow_name}.xml
    git add workflows/${workflow_name}.xml
    if jkd workflow -a id2name -f "${workflow_file}" > "${workflow_file_with_names}"; then
        jkd workflow -a name2id -f "${workflow_file_with_names}" > "${workflow_file}"
        hint "下面将显示 id/name 转换之后 workflow.xml 文件的变化"
        git difftool -t meld -y workflows/${workflow_name}.xml || true

        hint "下面将显示本次 save workflow 之后，跟上次 git 提交之间的变化"
        git difftool -t meld -y HEAD workflows/${workflow_name}.xml || true
    fi
}

save-workflow "${workflow_name}"

cd ${prod_dir}
export scm_jira_url=${prod_jira_url}

while ! jkd  -j "${prod_jira_url}" workflow -a name2id -f ${test_dir}/"${workflow_file_with_names}" > "${workflow_file}"; do
    hint "Migrate workflow (converting ids/names) has failed, please check"
done

if yes-or-no-p -y "把两边的 workflow 做一下对比(Prod Env <> Test Env)？主要看一下两边的 names 差异"; then
    meld ${workflow_file} "${test_dir}"/${workflow_file} || true
fi

if yes-or-no-p -y "在目标上 import workflow xml？（会自动将其与对应的 issuetype 绑定）"; then
    jkd upgrade-workflow -w "${workflow_name}" -f "${workflow_file}"
fi

save-workflow "${workflow_name}.${postfix}"

if yes-or-no-p -y "再把两边的 workflow 用 names 表示，做一下对比(ProdEnv <> TestEnv)？"; then
    meld "${workflow_file_with_names}" "${test_dir}/${workflow_file_with_names}"
fi
