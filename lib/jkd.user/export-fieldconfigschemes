#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);

use Encode;
use JSON;

my $json = JSON->new->utf8(0);

use Mojo::DOM;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# f:html-file
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $html_file = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-f, ';
    printf "%-24s", '--html-file=HTML-FILE';
    if (length('--html-file=HTML-FILE') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'html-file|f=s' => \$html_file,
    'help|h!' => \&$handler_help,
);


## end generated code
use File::Slurp;

my $html_text;

if ($html_file) {
    $html_text = decode_utf8 read_file($html_file);
} else {
    $html_text = decode_utf8 capturex("jkd", "webget", "$ENV{scm_jira_url}secure/admin/ViewFieldLayoutSchemes.jspa");
}


my $dom = Mojo::DOM->new->parse($html_text);

if ($ENV{jkd_verbose}) {
    say STDERR encode_utf8 $html_text;
}
my %fieldconfig_scheme;

$dom->find('strong[data-scheme-field="name"]')->each
    (
        sub {
            my $fcs_name = encode_utf8 $_->text;

            my @projects = map {
                (my $proj_key = $_->attr('href')) =~ s,.*/project-config/(.*?)/.*,$1,;
                my $proj_name = encode_utf8 $_->text;
                {
                    key => encode_utf8 $proj_key,
                    name => $proj_name,
                };
            } $_->parent->parent->parent->find('a[href^="/plugins/servlet/project-config/"]')->each;

            my $config_elem = $_->parent->parent->parent->at('a[id^="configure_"]');
            (my $config_id = $config_elem->attr('id')) =~ s,.*_,,;

            $fieldconfig_scheme{$fcs_name} = {
                id => $config_id,
                projects => \@projects,
            };
        }
    );

print JSON->new->utf8(0)->pretty(1)->encode(\%fieldconfig_scheme);
