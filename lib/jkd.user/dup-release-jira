#!/bin/bash
set -e

## start code-generator "^\\s *#\\s *"
# generate-getopt -P i:old-issue '?"The old jira issue to copy from"' \
    # @:old-jira-url='${scm_jira_url}' '?"The jira url for the old issue, default is \$scm_jira_url"' \
    # r:replace-regexp '?"默认为空，会传给 perl -pe \"$replace_regexp\"，比如 s,0.9.10,0.9.23,"' \
    # j:jq-expression=. '?"传给 jq 的表达式，比如可以用于改变版本号：.customfield_14504 = \"1.0.0\""' \
    # @:force-prod \
    # @debug='(true hint)'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o j:i:r:h \
                      --long debug,force-prod:,jq-expression:,old-issue:,old-jira-url:,replace-regexp:,help,no-debug \
                      -n $(basename -- $0) -- "$@")
declare debug=true
declare force_prod=
declare jq_expression=.
declare old_issue=
declare old_jira_url=${scm_jira_url}
declare replace_regexp=
eval set -- "$TEMP"
while true; do
    case "$1" in

        --debug|--no-debug)
            if test "$1" = --no-debug; then
                debug=true
            else
                debug=hint
            fi
            shift

            ;;
        --force-prod)
            force_prod=$2
            shift 2

            ;;
        -j|--jq-expression)
            jq_expression=$2
            shift 2

            ;;
        -i|--old-issue)
            old_issue=$2
            shift 2

            ;;
        --old-jira-url)
            old_jira_url=$2
            shift 2

            ;;
        -r|--replace-regexp)
            replace_regexp=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--[no-]debug'
            echo
            printf "%06s" " "
            printf %-24s '--force-prod=FORCE_PROD'
            echo
            printf %06s '-j, '
            printf %-24s '--jq-expression=JQ_EXPRESSION'
            echo
            printf "%30s" ""
            echo "传给 jq 的表达式，比如可以用于改变版本号：.customfield_14504 = \"1.0.0\""
            printf %06s '-i, '
            printf %-24s '--old-issue=OLD_ISSUE'
            echo "The old jira issue to copy from"
            printf "%06s" " "
            printf %-24s '--old-jira-url=OLD_JIRA_URL'
            echo
            printf "%30s" ""
            echo "The jira url for the old issue, default is \$scm_jira_url"
            printf %06s '-r, '
            printf %-24s '--replace-regexp=REPLACE_REGEXP'
            echo
            printf "%30s" ""
            echo "默认为空，会传给 perl -pe \"$replace_regexp\"，比如 s,0.9.10,0.9.23,"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


if test "${scm_jira_url}" != "${scm_jira_test_url}" -a "${force_prod}" != yes; then
    die "Can only run in test jira"
fi

if test -z "${old_issue}"; then
    die "Must specify the old jira issue to copy from, for e.g., EF-251"
fi

old_json=$(
    jkd -j ${old_jira_url} print-issue -i ${old_issue} --json --for-clone|jq "${jq_expression}" | perl -pe "${replace_regexp}"
        )
jira_key=$(
    jkd c -p EF -t "【智能与系统-车机】版本发布 Workflow" \
        --fields-json "${old_json}" |
        tee /dev/stderr |
        perl -ne 'print if s,POST response code:201result:,,' | jq .key -r
        )

$debug created jira: $jira_key
if test -z "${jira_key}"; then
    die "Can't create jira issue"
fi

jkd tri -i $jira_key --fields-json "${old_json}" -t "【系统部】发布需求符合要求"
$debug transitioned jira: 1

jkd tri -i $jira_key --fields-json "${old_json}"
$debug transitioned jira: 2

jkd tri -i $jira_key --fields-json "${old_json}"
$debug transitioned jira: 3

echo "jira_key is $jira_key"

firefox "${scm_jira_url}browse/${jira_key}"
