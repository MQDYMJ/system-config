#!/usr/bin/env bash
set -e

default_query="(reporter = baohaojun or assignee = baohaojun) AND status not in (done, Cancelled, 问题挂起) and project = EP"

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}

# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # q:query='$default_query' '?"default is $default_query"' \
    # a:abbrev '?"one of UNASSIGNED，"'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o a:q:h \
                      --long abbrev:,query:,help \
                      -n $(basename -- $0) -- "$@")
declare abbrev=
declare query=$default_query
eval set -- "$TEMP"
while true; do
    case "$1" in

        -a|--abbrev)
            abbrev=$2
            shift 2

            ;;
        -q|--query)
            query=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %06s '-a, '
            printf %-24s '--abbrev=ABBREV'
            echo "one of UNASSIGNED，"
            printf %06s '-q, '
            printf %-24s '--query=QUERY'
            echo "default is $default_query"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "${abbrev}"; then
    case "${abbrev^^}" in
        UNA*)
            query="(assignee = UNASSIGNED) AND status not in (done, Cancelled, 问题挂起) and project = EP"
            ;;
        ALL)
            query=" status not in (done, Cancelled, 问题挂起) and project = EP"
            ;;
        *)
            die "Don't know how to expand $abbrev"
            ;;
    esac
fi

IFS=$'\n'

issues=$(
    jkd q -q "${query}" -p |
        jq '.issues|.[]|.key + ":" + .fields.summary' -r
      )


review-1-isuse() {
    declare -A actions_map=(
        [browse]="在浏览器中打开"
        [transition]="Workflow 流转"
    )
    action=$(
        select-args -p "你想对这个 issue 做什么？" "${actions_map[@]}"
          )
    issue=${1%:*}

    case "$action" in
        ${actions_map[browse]})
            of -w $issue
            ;;
        ${actions_map[transition]})
            jkd tri -i $issue
            ;;
        *)
            die "don't know how to do $action"
            ;;
    esac
}

export -f review-1-isuse

check-list -a "$(quote-args -p "你想检查哪个 issue？")" -f review-1-isuse $issues
