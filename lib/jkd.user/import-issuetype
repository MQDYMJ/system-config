#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);

use Encode;
use JSON;

my $json = JSON->new->utf8(0);

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# f:from-jira-url i:issuetype-name j:from-jira-json
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $from_jira_json = "";
my $from_jira_url = "";
my $issuetype_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-j, ';
    printf "%-24s", '--from-jira-json=FROM-JIRA-JSON';
    if (length('--from-jira-json=FROM-JIRA-JSON') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-f, ';
    printf "%-24s", '--from-jira-url=FROM-JIRA-URL';
    if (length('--from-jira-url=FROM-JIRA-URL') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-i, ';
    printf "%-24s", '--issuetype-name=ISSUETYPE-NAME';
    if (length('--issuetype-name=ISSUETYPE-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'from-jira-json|j=s' => \$from_jira_json,
    'from-jira-url|f=s' => \$from_jira_url,
    'issuetype-name|i=s' => \$issuetype_name,
    'help|h!' => \&$handler_help,
);


## end generated code

if ($from_jira_url) {
    die "Can't specify both from_jira_url and from_jira_json" if $from_jira_json;
    $from_jira_json =
}
