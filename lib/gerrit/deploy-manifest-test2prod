#!/bin/bash
set -e

## start code-generator "^\\s *#\\s *"
# generate-getopt -P m:manifest-branch-name
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o m:h \
                      --long manifest-branch-name:,help \
                      -n $(basename -- $0) -- "$@")
declare manifest_branch_name=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -m|--manifest-branch-name)
            manifest_branch_name=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-m, '
            printf %-24s '--manifest-branch-name=MANIFEST_BRANCH_NAME'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code
rm -rf ~/tmp/sandbox-vendor-android/
mkdir -p ~/tmp/sandbox-vendor-android/
cd ~/tmp/sandbox-vendor-android/

repo init -u ssh://s.t/platform/manifest -b $manifest_branch_name -m default.xml --repo-url ssh://chjscm@192.168.4.101:29418/git-repo
repo sync -j4 -d -q -c --no-tags

my-rfa "$(
cat <<'EOF8b49d6a7b2d0'
# {%sh-mode%}
git push s:$(repo-project) HEAD:refs/heads/$(repo-branch) || exit -1
# {%/sh-mode%}
EOF8b49d6a7b2d0
)"

cd .repo/manifests/
git push s:$(repo-abs-path) HEAD:$manifest_branch_name
