#!/usr/bin/env perl
use strict;

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P q:query u:url ddetails=0 e:extra-output='()'
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $details = 0;
my @extra_output = ();
my $query = "";
my $url = "";

my $handler_help = sub {
  print ;
  print "\n\n选项和参数：\n";
  printf "%6s", '-d, ';
  printf "%-24s", '--[no]details';
  if (length('--[no]details') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-e, ';
  printf "%-24s", '--extra-output=EXTRA-OUTPUT';
  if (length('--extra-output=EXTRA-OUTPUT') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-q, ';
  printf "%-24s", '--query=QUERY';
  if (length('--query=QUERY') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-u, ';
  printf "%-24s", '--url=URL';
  if (length('--url=URL') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";

  exit(0);
};

GetOptions (
            'details|d!' => \$details,
            'extra-output|e=s' => \@extra_output,
            'query|q=s' => \$query,
            'url|u=s' => \$url,
            'help|h!' => \&$handler_help,
           );


## end generated code

if ($url and not $query) {
  $url =~ s,.*//.*?/.*?(\d+).*,$1,;
  $query = "change:$url";
}

use URI::Escape;
$query = uri_escape($query);

use String::ShellQuote;
my @command = ("gr", "rest", "-a", "a/changes/?q=$query");
if (@extra_output) {
  $command[-1] = join("&", $command[-1], map {$_ = "o=$_"} @extra_output);
}

my $command = join " ", shell_quote(@command);
print STDERR "run: $command\n";

use v5.10;
my $json = qx($command);
if (not $details) {
  print $json;
  exit;
}

use JSON;
my $json_obj = decode_json $json;
my @details;
for (@$json_obj) {
  my $number = $_->{_number};
  $command = join " ", shell_quote("gr", "rest", "-a", "a/changes/$number/detail");
  if (@$json_obj == 1) {
    print qx($command);
    exit;
  }

  push @details, decode_json(qx($command));
}

print encode_json(\@details);
