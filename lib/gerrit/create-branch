#!/bin/bash

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P p:project b:branch f:from eempty m:manifest-branch
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o b:ef:m:p:h \
                      --long branch:,empty,from:,manifest-branch:,project:,help,no-empty \
                      -n $(basename -- $0) -- "$@")
declare branch=
declare empty=false
declare from=
declare manifest_branch=
declare project=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -b|--branch)
            branch=$2
            shift 2

            ;;
        -e|--empty|--no-empty)
            if test "$1" = --no-empty; then
                empty=false
            else
                empty=true
            fi
            shift

            ;;
        -f|--from)
            from=$2
            shift 2

            ;;
        -m|--manifest-branch)
            manifest_branch=$2
            shift 2

            ;;
        -p|--project)
            project=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-b, '
            printf %-24s '--branch=BRANCH'
            echo
            printf %06s '-e, '
            printf %-24s '--[no-]empty'
            echo
            printf %06s '-f, '
            printf %-24s '--from=FROM'
            echo
            printf %06s '-m, '
            printf %-24s '--manifest-branch=MANIFEST_BRANCH'
            echo
            printf %06s '-p, '
            printf %-24s '--project=PROJECT'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "$manifest_branch"; then
    if test -z "${project}"; then
        tmpf=/tmp/create-branch.$$.txt
        . atexit rm $tmpf
        jssh ${scm_jenkins_server} \
             --execute "cat ${scm_config_dir}android-branches/${manifest_branch}/manifest.xml" \
             > $tmpf

        project=$(select-output-line cat $tmpf | perl -ne 'print $1 if m,name\s*=\s*"(.*?)",')
        if test -z "$from"; then
            from=$(cat $tmpf| grep "name=.$project." | perl -ne 'print $1 if m,upstream\s*=\s*"(.*?)",' )
        fi
        if test -z "$branch"; then
            branch=$manifest_branch
        fi
        yes-or-no-p -y "project: $project, branch: $branch, from: $from"
    fi

fi

ssh-gerrit create-branch $project $branch $from
