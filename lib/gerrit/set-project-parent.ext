#!/usr/bin/env bash

set -e
## start code-generator "^\\s *#\\s *"
    # generate-getopt -P r:project-regexp '?"需要修改的仓库的正则表达式（所有匹配的仓库都会被修改）"' \
        # p:parent-project '?"也可以只指定一个正则表达式"'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o p:r:h \
                      --long parent-project:,project-regexp:,help \
                      -n $(basename -- $0) -- "$@")
declare parent_project=
declare project_regexp=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -p|--parent-project)
            parent_project=$2
            shift 2

            ;;
        -r|--project-regexp)
            project_regexp=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %6s '-p, '
            printf %-24s '--parent-project=PARENT_PROJECT'
            echo
            printf "%30s" ""
            echo "也可以只指定一个正则表达式"
            printf %6s '-r, '
            printf %-24s '--project-regexp=PROJECT_REGEXP'
            echo
            printf "%30s" ""
            echo "需要修改的仓库的正则表达式（所有匹配的仓库都会被修改）"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if ! [[ $parent_project =~ ^All- ]]; then
    parent_project=$(
        export parent_project
        select-output-line -p "请选择你想要的父项目" 'ssh-gerrit ls-projects --prefix All- | grep "All-.*$parent_project" -i'
                  )
fi

for p in $(
              ssh-gerrit ls-projects | grep -P -e "${project_regexp}"
          ); do
    if yes-or-no-p "work with $p -> $parent_project"; then
        log-run ssh-gerrit set-project-parent $p -p $parent_project
    fi
done
