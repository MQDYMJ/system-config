#!/usr/bin/env perl
use strict;
use v5.10; # for say
use autodie qw(:all);

use String::ShellQuote;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
    # r:repo-name \
    # p:parent-project \
    # d:description \
    # ccontinue-after-error '?"用于之前运行中途出错了的场景"'
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $continue_after_error = 0;
my $description = "";
my $parent_project = "";
my $repo_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-c, ';
    printf "%-24s", '--[no]continue-after-error';
    if (length('--[no]continue-after-error') > 24 and length("用于之前运行中途出错了的场景") > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", "用于之前运行中途出错了的场景";
    print "\n";
    printf "%6s", '-d, ';
    printf "%-24s", '--description=DESCRIPTION';
    if (length('--description=DESCRIPTION') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-p, ';
    printf "%-24s", '--parent-project=PARENT-PROJECT';
    if (length('--parent-project=PARENT-PROJECT') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-r, ';
    printf "%-24s", '--repo-name=REPO-NAME';
    if (length('--repo-name=REPO-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'continue-after-error|c!' => \$continue_after_error,
    'description|d=s' => \$description,
    'parent-project|p=s' => \$parent_project,
    'repo-name|r=s' => \$repo_name,
    'help|h!' => \&$handler_help,
);


## end generated code

my $do_create = 1;

use URI::Escape;

if ("${continue_after_error}") {
    my $escaped_repo = uri_escape($repo_name);
    say STDERR "escaped_repo is ${escaped_repo}";
    if (system("gr rest a/projects/${escaped_repo}") == 0) {
        say STDERR "${repo_name} already exist!";
        $do_create = 0;
    }
}

if ($do_create) {
    my @create_repo_command = (
        "ssh-gerrit", "--admin",
        "create-project", "$repo_name", "--parent", "$parent_project", "--empty-commit", "-d", shell_quote($description)
    );
}
