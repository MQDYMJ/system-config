#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# b:build-url \
# n:param-name '?"只打印指定的参数的值（默认是全打印）"' \

## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $build_url = "";
my $param_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-b, ';
    printf "%-24s", '--build-url=BUILD-URL';
    if (length('--build-url=BUILD-URL') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-n, ';
    printf "%-24s", '--param-name=PARAM-NAME';
    if (length('--param-name=PARAM-NAME') > 24 and length("只打印指定的参数的值（默认是全打印）") > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", "只打印指定的参数的值（默认是全打印）";
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'build-url|b=s' => \$build_url,
    'param-name|n=s' => \$param_name,
    'help|h!' => \&$handler_help,
);


## end generated code

my $api_json =
    $json->decode(scalar capturex("jc", "curl", "${build_url}/api/json"));

use String::ShellQuote;
map {
    if ($_->{_class} eq "hudson.model.ParametersAction") {
        map {
            my $name = $_->{name};
            my $value = $_->{value};
            if ($name eq $param_name) {
                print $value;
            } elsif (not $param_name) {
                printf "%s=%s\n", shell_quote($name), shell_quote($value);
            }
        } @{$_->{parameters}}
    }
} @{$api_json->{actions}}
