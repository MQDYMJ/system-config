#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use JSON;

my $json = JSON->new->utf8->canonical->pretty;


(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# b:build-url d:download-to-dir='"."'
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $build_url = "";
my $download_to_dir = ".";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-b, ';
    printf "%-24s", '--build-url=BUILD-URL';
    if (length('--build-url=BUILD-URL') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-d, ';
    printf "%-24s", '--download-to-dir=DOWNLOAD-TO-DIR';
    if (length('--download-to-dir=DOWNLOAD-TO-DIR') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'build-url|b=s' => \$build_url,
    'download-to-dir|d=s' => \$download_to_dir,
    'help|h!' => \&$handler_help,
);


## end generated code

$build_url =~ s,/*$,,;
my $build_json =
    $json->decode(scalar capture("jc curl ${build_url}/api/json"));
runx(
    "mkdir", "-p", "$download_to_dir"
);

for (@{$build_json->{artifacts}}) {
    my $file_name = $_->{fileName};
    my $target_file = "${download_to_dir}/${file_name}";
    (my $target_dir = $target_file) =~ s,(.*)/.*,$1,;

    runx(
        "mkdir", "-p", "$target_dir"
    );

    runx("debug-run", "jc", "curl", "${build_url}/artifact/${file_name}", "-o", "$target_file");
}
