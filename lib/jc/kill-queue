#!/usr/bin/env perl
use strict;

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl j:job-pattern @dry=1
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("default");



my $dry = 1;
my $job_pattern = "";

my $handler_help = sub {
  print ;
  print "\n\n选项和参数：\n";
  printf "%6s", '';
  printf "%-24s", '--[no]dry';
  if (length('--[no]dry') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-j, ';
  printf "%-24s", '--job-pattern=JOB-PATTERN';
  if (length('--job-pattern=JOB-PATTERN') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";

  exit(0);
};

GetOptions (
            'dry!' => \$dry,
            'job-pattern|j=s' => \$job_pattern,
            'help|h!' => \&$handler_help,
           );


## end generated code

use JSON;

my $q_json = decode_json(qx(jc curl $ENV{scm_jenkins_url}queue/api/json));

use v5.10;
$job_pattern = qr($job_pattern);
for (@{$q_json->{items}}) {
  my $id = $_->{id};
  my $url = $_->{task}{url};
  (my $job = $url) =~ s,.*/([^/]+)/?,$1,;

  if ($job =~ m/$job_pattern/) {

    if (not $dry) {
      say "job matched: $ENV{scm_jenkins_url}queue/item/$id/, killing it...";
      system("jc", "curl", "$ENV{scm_jenkins_url}queue/cancelItem?id=$id", "-X", "POST");
    } else {
      say "job matched: $ENV{scm_jenkins_url}queue/item/$id/, not killed";
    }
  }
}
