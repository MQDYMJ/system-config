#!/usr/bin/env bash

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"Note: When setting current build, need only set -d"' \
    # j:job-name n:build-number \
    # b:build-url '?"如不指定，默认使用当前 BUILD_URL"' \
    # d:description='"@NULL@"' '?"when not specified, print current description (i.e., get)"'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o n:b:d:j:h \
                      --long build-number:,build-url:,description:,job-name:,help \
                      -n $(basename -- $0) -- "$@")
declare build_number=
declare build_url=
declare description="@NULL@"
declare job_name=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -n|--build-number)
            build_number=$2
            shift 2

            ;;
        -b|--build-url)
            build_url=$2
            shift 2

            ;;
        -d|--description)
            description=$2
            shift 2

            ;;
        -j|--job-name)
            job_name=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "Note: When setting current build, need only set -d"
            echo
            echo Options and arguments:
            printf %6s '-n, '
            printf %-24s '--build-number=BUILD_NUMBER'
            echo
            printf %6s '-b, '
            printf %-24s '--build-url=BUILD_URL'
            echo "如不指定，默认使用当前 BUILD_URL"
            printf %6s '-d, '
            printf %-24s '--description=DESCRIPTION'
            echo
            printf "%30s" ""
            echo "when not specified, print current description (i.e., get)"
            printf %6s '-j, '
            printf %-24s '--job-name=JOB_NAME'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "${job_name}" -a "${build_number}"; then
    if test "${build_url}"; then
        die "Can't specify both BUILD_URL and JOB_NAME/BUILD_NUMBER"
    else
        build_url=${scm_jenkins_url}job/${job_name}/${build_number}/
    fi
elif test "${job_name}" -o "${build_number}"; then
    die "Must specify both job_name and build_number"
elif test -z "${build_url}"; then
    if test "${BUILD_URL}"; then
        build_url=${BUILD_URL} # from jenkins env, current build.
    else
        die "Can't decide the build url"
    fi
fi

if test "${description}" = @NULL@; then
    jc curl ${build_url}api/json | jq -r .description
else
    jc curl ${build_url}submitDescription -X POST --data-urlencode "description=$description"
fi
