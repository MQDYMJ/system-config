#!/usr/bin/env perl
use strict;

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl n:node l:labels '?"+xx 表示增加 xx 为 label"'
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("default");



my $labels = "";
my $node = "";

my $handler_help = sub {
  print ;
  print "\n\n选项和参数：\n";
  printf "%6s", '-l, ';
  printf "%-24s", '--labels=LABELS';
  if (length('--labels=LABELS') > 24 and length("+xx 表示增加 xx 为 label") > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", "+xx 表示增加 xx 为 label";
  print "\n";
  printf "%6s", '-n, ';
  printf "%-24s", '--node=NODE';
  if (length('--node=NODE') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";

  exit(0);
};

GetOptions (
            'labels|l=s' => \$labels,
            'node|n=s' => \$node,
            'help|h!' => \&$handler_help,
           );


## end generated code

my $node_xml = qx(jc get-node $node);

use Mojo::DOM;
my $dom = Mojo::DOM->new->parse($node_xml);

if ($dom->at('label')->child_nodes->first) {
  if ($labels =~ m/^\+/) {
    my $old_labels = $dom->at('label')->text;
    $labels =~ s,^\+, ,;
    $labels = $old_labels . $labels;
  }
  $dom->at('label')->child_nodes->first->replace("$labels");
} else {
  $dom->at('label')->append_content("$labels");
}

print $dom;

open(my $update_node, "|jc update-node $node")
  or die "Can't open update-node";

print $update_node $dom;
close $update_node;
