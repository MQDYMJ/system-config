#!/usr/bin/env perl


## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P -p jc u:build-url j:switch-to-job
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $jc_build_url = "";
my $jc_switch_to_job = "";

my $handler_help = sub {
  print ;
  print "\n\n选项和参数：\n";
  printf "%6s", '-u, ';
  printf "%-24s", '--build-url=BUILD-URL';
  if (length('--build-url=BUILD-URL') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-j, ';
  printf "%-24s", '--switch-to-job=SWITCH-TO-JOB';
  if (length('--switch-to-job=SWITCH-TO-JOB') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";

  exit(0);
};

GetOptions (
            'build-url|u=s' => \$jc_build_url,
            'switch-to-job|j=s' => \$jc_switch_to_job,
            'help|h!' => \&$handler_help,
           );


## end generated code

# name=CI
# value=2bded966f16eefbd7fc9ec93c1a779652cdb1093
# name=RE
# value=%2B1
# name=VN
# value=Build-Verified
# Jenkins-Crumb=XXX
# Submit=Rebuild

my $exsample_json = <<~'EOF0dd108dc7891';
# {%json-mode%}
{
  "parameter": [
    {
      "name": "CI",
      "value": "2bded966f16eefbd7fc9ec93c1a779652cdb1093"
    },
    {
      "name": "RE",
      "value": "+1"
    },
    {
      "name": "VN",
      "value": "Build-Verified"
    }
  ],
  "Jenkins-Crumb": "a7f19707ff6aecc7635ff1cc9517383b"
}
# {%/json-mode%}
EOF0dd108dc7891

use Mojo::DOM;
use File::Slurp;
use JSON;


my @parameters;
my @values;

use Encode;

my $json_str = qx(jc curl ${jc_build_url}/api/json);
my $json_obj = decode_json $json_str;

for (@{$json_obj->{actions}}) {
  if ($_->{_class} eq "hudson.model.ParametersAction") {
    for (@{$_->{parameters}}) {
      push @parameters, $_->{name};
      push @values, $_->{value};
    }
  }
}

use JSON;
use v5.10;
use HTTP::Request::Common;
use LWP::UserAgent;
use URI::Escape;

$jc_build_url =~ s,/*$,/,;

my $rebuild_url = "${jc_build_url}rebuild/configSubmit";

my $parameter = "parameters";

if ($jc_switch_to_job) {
  (my $scm_jenkins_url = $rebuild_url) =~ s,(.*?//.*?/).*,$1,;
  $rebuild_url = "${scm_jenkins_url}job/${jc_switch_to_job}/build";
  $parameter = "parameter";
}



system("jc", "curl", $rebuild_url, "-X", "POST", "--data-urlencode", "json=" . encode_json {
                $parameter =>
                  [
                   map {
                     $_ = {
                           name => $parameters[$_],
                           value => $values[$_],
                          };
                   } 0 .. (@parameters -1)
                  ]
                }, "-v"
      );
