#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# d:json-data
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $json_data = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-d, ';
    printf "%-24s", '--json-data=JSON-DATA';
    if (length('--json-data=JSON-DATA') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'json-data|d=s' => \$json_data,
    'help|h!' => \&$handler_help,
);


## end generated code

$json_data = $json->decode(encode_utf8 $json_data);
my $uri = $json_data->{uri};
my $details = decode_utf8($json->encode($json_data->{details}));

runx("debug-run", "artifactory", "my-curl", "-X", "PUT", "$uri", "-d", "$details", "-H", 'Content-Type: application/json');
capture(EXIT_ANY, "c artifactory ls-permissions &>/dev/null");
run ("hint -t 5 '请确认 ldap 域组是否已经在 artifactory 里同步'");
