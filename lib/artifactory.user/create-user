#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(run runx capture capturex $EXITVAL EXIT_ANY);
binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use Encode;
use utf8;
@ARGV = map {decode_utf8 $_} @ARGV;

use Data::Dumper;
use JSON;

my $json = JSON->new->utf8->canonical->pretty;

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}

# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# n:user-name c:copy-from-user '?"从哪个 user 拷贝配置"' \
# e:email \
# p:password

## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $copy_from_user = "";
my $email = "";
my $password = "";
my $user_name = "";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-c, ';
    printf "%-24s", '--copy-from-user=COPY-FROM-USER';
    if (length('--copy-from-user=COPY-FROM-USER') > 24 and length("从哪个 user 拷贝配置") > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", "从哪个 user 拷贝配置";
    print "\n";
    printf "%6s", '-e, ';
    printf "%-24s", '--email=EMAIL';
    if (length('--email=EMAIL') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-p, ';
    printf "%-24s", '--password=PASSWORD';
    if (length('--password=PASSWORD') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-n, ';
    printf "%-24s", '--user-name=USER-NAME';
    if (length('--user-name=USER-NAME') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'copy-from-user|c=s' => \$copy_from_user,
    'email|e=s' => \$email,
    'password|p=s' => \$password,
    'user-name|n=s' => \$user_name,
    'help|h!' => \&$handler_help,
);


## end generated code

my $json_copy =
    $json->decode(scalar capturex("debug-run", "artifactory", "my-curl", "api/security/users/${copy_from_user}"));

$json_copy->{name} = $user_name;
$json_copy->{email} = $email;
$json_copy->{password} = $password;

runx("debug-run", "artifactory", "my-curl", "api/security/users/${user_name}", "-X", "PUT", "-H", 'Content-Type: application/json', "-d",  decode_utf8($json->encode($json_copy)));

# my $password_data = {
#     userName => $user_name,
#     newPassword1 => $password,
#     newPassword2 => $password,
# };

# runx("debug-run", "artifactory", "my-curl", "api/security/users/authorization/changePassword", "-X", "POST", "-H", 'Content-Type: application/json', "-d",  decode_utf8($json->encode($password_data)));
