#!/usr/bin/env bash

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P t:task o:output-file @:extra-save
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o o:t:h \
                      --long extra-save:,output-file:,task:,help \
                      -n $(basename -- $0) -- "$@")
declare extra_save=
declare output_file=
declare task=
eval set -- "$TEMP"
while true; do
    case "$1" in

        --extra-save)
            extra_save=$2
            shift 2

            ;;
        -o|--output-file)
            output_file=$2
            shift 2

            ;;
        -t|--task)
            task=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%6s" " "
            printf %-24s '--extra-save=EXTRA_SAVE'
            echo
            printf %6s '-o, '
            printf %-24s '--output-file=OUTPUT_FILE'
            echo
            printf %6s '-t, '
            printf %-24s '--task=TASK'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test -z "${output_file}"; then
    output_file=$task.xml
fi

jc get-job "$task" > "${task}.from-jc.xml"

export extra_save

jc normalize-xml -f "${task}.from-jc.xml" -t "${output_file}"
