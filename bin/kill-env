#!/bin/bash

# kill all processes with a set environment variable
# usage: kill-env env-name env-value


## start code-generator "^\\s *#\\s *"
# generate-getopt p:process-name-regexp=.
## end code-generator
## start generated code
TEMP=$( getopt -o p:h \
               --long process-name-regexp:,help \
               -n $(basename -- $0) -- "$@")
declare process_name_regexp=.
eval set -- "$TEMP"
while true; do
    case "$1" in

        -p|--process-name-regexp)
            process_name_regexp=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-p, '
            printf %-24s '--process-name-regexp=PROCESS_NAME_REGEXP'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


set -e

env_name=$1
env_value=$2

for x in /proc/*/environ; do
    if ! test -r $x; then
        continue
    fi
    name_val=$(
        cat $x | tr \\0 \\n | grep ^$env_name= || true
            )
    if test "$name_val" = "$env_name=$env_value"; then
        pid=$(basename $(dirname $x))
        if test $pid != $$ && [[ $pid =~ ^[0-9]+$ ]] && ps -o command $pid|grep "$process_name_regexp" -q -P; then
            kill $pid
        fi
    fi
done
