#!/usr/bin/env bash


## start code-generator "^\\s *#\\s *"
# generate-getopt -P -p kill -e @group e:withenv p:path-to-exe s:signal
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o p:s:e:h \
                      --long group,path-to-exe:,signal:,withenv:,help,no-group \
                      -n $(basename -- $0) -- "$@")
declare -x kill_group=${kill_group:-false}
declare -x kill_path_to_exe=${kill_path_to_exe:-}
declare -x kill_signal=${kill_signal:-}
declare -x kill_withenv=${kill_withenv:-}
eval set -- "$TEMP"
while true; do
    case "$1" in

        --group|--no-group)
            if test "$1" = --no-group; then
                kill_group=false
            else
                kill_group=true
            fi
            shift

            ;;
        -p|--path-to-exe)
            kill_path_to_exe=$2
            shift 2

            ;;
        -s|--signal)
            kill_signal=$2
            shift 2

            ;;
        -e|--withenv)
            kill_withenv=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--[no-]group'
            echo
            printf %6s '-p, '
            printf %-24s '--path-to-exe=PATH_TO_EXE'
            echo
            printf %6s '-s, '
            printf %-24s '--signal=SIGNAL'
            echo
            printf %6s '-e, '
            printf %-24s '--withenv=WITHENV'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

export sig=-9
if test "${1:0:1}" = -; then
    sig=$1
    shift
fi

if test "${kill_signal}"; then
    sig=-${kill_signal#-}
fi

match=${1:-xxxxxyyy}
shift
if echo $SHELLOPTS | grep -q xtrace; then
    setx=-x
else
    setx=
fi

export kill_withenv

ps.pl -o pgid $match | grep -v $(basename $0) | tee /dev/stderr |
    if test "$kill_group" = true; then
        pn 4 | sort -u | perl -npe 's/^/-/'
    else
        pn 1
    fi |
    xargs bash $setx -c "$(
cat <<'EOF9edc59e6cef8' | . .replace-%% --
# {%sh-mode%}
for x in $@; do
    if is-ppid $x $$; then
        echo $x is in loop of ppid
        continue
    fi
    if test "<%kill-withenv%>"; then
        if ! cat /proc/$x/environ | tr '\0' '\n' | grep '\Q<%kill-withenv%>\E' -q -P; then
            echo "should not kill $x, env not match: <%kill-withenv%>" 1>&2
            continue
        fi
    fi
    if test "<%kill-path-to-exe%>"; then
        if test "$(readlink -f /proc/$x/exe)" != "<%kill-path-to-exe%>"; then
            echo "Should not kill $x, because path not match"
            continue
        fi
    fi
    if test "$sig" = -9; then
        kill "$x"
        (sleep 1; kill $sig "$x" >/dev/null 2>&1)&
    else
        kill $sig "$x"
    fi
done
# {%/sh-mode%}
EOF9edc59e6cef8

)" true
