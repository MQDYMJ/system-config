#!/bin/bash

if test "$EMACS" = t -a "$RESTARTED_IN_BACKGROUND" != true; then
    unset EMACS
    export RESTARTED_IN_BACKGROUND=true
    sawfish-start-special help firefox >/dev/null 2>&1 </dev/null &
    (cat | EMACS=t $0 "$@" > ~/.cache/system-config/logs/$(basename $0).log 2>&1) &
    exit 0
fi
set -x
function die() {
    echo "$@"
    exit -1
}

function select-output-line() {
    command select-output-line -O $(basename $0).$SELECT_DIST_WORD -m 1000 "$@"
}

if test $# = 0; then
    set -- "$(cat)"
fi

if test $# = 1 -a $(basename $0) != bhj-help-it; then
    set -- $(basename $0|perl -npe 's/bhj-help-//; s/$/-mode/') "$@"
fi


if test $# -lt 2; then
    die "Usage: bhj-help-it major-mode word..."
fi

if echo $SHELLOPTS | grep -q xtrace; then
    true
else
    exec 2> ~/tmp/bhj-help-it.log
fi

set -x
echo "$@"

case $1 in
    php-mode)
        cd /usr/share/doc/php-doc/html;
        if test -e function.$2.html; then
            firefox-open-url-pattern file:///usr/share/doc/php-doc/html/ function.$2.html;
        else
            file=$(select-output-line -- "ls *$2* && echo look-at-the-web" ) || true
            if ! test "$file"; then
                file=$(select-output-line -- "ls *$(echo $2|perl -npe 's/_/-/g; $_ = lc')* && echo look-at-the-web" )
            fi
            if test -e "$file"; then
                firefox-open-url-pattern file:///usr/share/doc/php-doc/html/ $file
            elif php-functions | grep -q -e "$2"; then
                func=$(select-output-line -- "php-functions | grep -e $2 | pn 3")
                firefox-open-url-pattern php.net/manual/en/ \
                    http://www.php.net/manual/en/function.$(echo $func|perl -npe s/_/-/g).php
            else
                file=$(select-output-line -- find ~/src/php-doc* -iname "*$2*")
                if test -e "$file"; then
                    url=$(echo $file | perl -npe 's!.*?src/php-doc.*?/!!; s/\.xml$/.php/; s!^!http://www.php.net/manual/!')
                    firefox-open-url-pattern php.net/manual/en/ \
                        $url
                fi
            fi
        fi
        ;;
    java-mode)
        start=$GTAGS_START_FILE
        if test -z "$start"; then
            start=$1
        fi
        start=$(basename "$start")
        start=${start%.java}
        html=$(select-output-line -- find ~/external/bin/Linux/ext/android-sdk-linux/docs -name "$start.html")
        if test -e "$html"; then
            shift
            anchor=$(perl -ne 'if (m/a\s+name="(.*\b'$1'\b.*?)"/i) {print $1; exit}' "$html")
            firefox-open-url-pattern /android-sdk-linux/ file://"$html#$anchor"
        elif test -z "$html"; then
            word=$2
            java=$(select-output-line -- "grep-beatags -e "$word" -d ~/src/android | grep -P -e '\.java:' | perl -npe 's/java:.*/java/'|sort -u")
            java=$(basename "$java")
            start=$java
            start=${start%.java}
            html=$(select-output-line -- find ~/external/bin/Linux/ext/android-sdk-linux/docs -name "$start.html")
            if test -e "$html"; then
                shift
                anchor=$(perl -ne 'if (m/a\s+name="(.*\b'$1'\b.*?)"/i) {print $1; exit}' "$html")
                firefox-open-url-pattern /android-sdk-linux/ file://"$html#$anchor"
            fi
        fi
        ;;
    qt|qt-mode)
        export SELECT_DIST_WORD=${2,,}
        file=$(
            (
                cd /usr/share/qt5/doc
                beagrep -e 'a name="'$2'(-prop|-enum)?"|<a href="[^"]*">'$2'</a>' -t "a name $2" --grep "-l -P"
                beagrep -e "$2" -f |perl -npe 's/:.*//'
            ) | select-output-line cat
            )
        if test -z "$file" -a "${2:0:3}" = set; then
            file=$(select-output-line -- beagrep -e 'a name="'${2:3}-prop'"' -d /usr/share/qt5/doc --grep -l -i)
            set -- "$1" "$(lc ${2:3:1})${2:4}-prop"
        elif test -z "$file"; then
            search-google "$2" site:doc.qt.io
            exit
        elif grep -P -e 'a name="'$2'(-prop)"' "$file" -q; then
            set -- "$1" "$2-prop"
        elif grep -P -e 'a name="'$2'(-enum)"' "$file" -q; then
            set -- "$1" "$2-enum"
        elif grep -P -e 'a href="[^"]*">'$2'</a>' "$file" -q; then
            match=$(perl -ne 'if (m!a href="([^"]*)">'$2'</a>!) {print $1; exit}' "$file")
            mfile=${match%#*}
            file=${file%/*}/$mfile
            set -- "$1" "${match#*#}"
        fi

        firefox-open-url-pattern usr/share/qt5/doc file://$file#$2
        ;;
    *)
        if [[ "$2" =~ ^android: ]]; then
            file=$(select-output-line -- beagrep -e '#attr_'$2 -d ~/external/bin/Linux/ext/android-sdk-linux/docs --grep -l)
            if test -e "$file"; then
                firefox-open-url-pattern /android-sdk-linux/ "file://$file#attr_$2"
                exit
            fi
            anchor=${2/android:/R.attr.html#}
            if grep -P -e "\Q$anchor\E" ~/external/bin/Linux/ext/android-sdk-linux/docs/reference/android/R.attr.html; then
                firefox-open-url-pattern /android-sdk-linux/ file://$HOME/external/bin/Linux/ext/android-sdk-linux/docs/reference/android/$anchor
            else
                ask-for-input-with-sawfish -P "$2 not found in R.attr.html? "
            fi
        fi
        ;;
esac
