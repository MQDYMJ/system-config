#!/usr/bin/env bash

set -e

if test -z "$DEBUG"; then
    DEBUG=false
fi

if test -L /var/cache/pbuilder -a ! -e /var/cache/pbuilder; then
    sudo mkdir -p $(readlink -m /var/cache/pbuilder)
fi

check-program pbuilder pbuilder

mirror_host=mirrors.aliyun.com
if test -e ~/src/github/smartcm/etc/cowbuilder-get.rc; then
    . ~/src/github/smartcm/etc/cowbuilder-get.rc
fi

scriptd=/usr/share/debootstrap/scripts
systems=$(
    cd /usr/share/debootstrap/scripts;
    for x in *; do
        if echo $x | grep -q "\."; then
            continue
        fi
        if grep -q ubuntu.com $scriptd/$x; then
            echo ubuntu-$x
        else
            echo debian-$x
        fi
    done
)

if echo $SHELLOPTS | grep -q xtrace; then
    bashx='bash -x'
else
    bashx=
fi

if test $# = 0; then
    while true; do
        system=$(select-args -o $systems)
        arch=$(select-args amd64 i386)
        $bashx $0 $system-$arch
        if yes-or-no-p -y installed $system-$arch, exit; then
            exit
        fi
    done
fi


target=$1
system_archs=$(
    for system in $systems; do
        for arch in i386 amd64; do
            if ! echo $system-$arch|grep -q "$target"; then
                continue
            fi
            if echo $system-$arch|grep -q -e '\*'; then
                continue
            fi
            echo $system-$arch
        done
    done
)

echo will generate $system_archs

for system_arch in $system_archs; do
    system=${system_arch%-*}
    arch=${system_arch##*-}
    basepath=~/external/cowbuilder/$system_arch/bare
    if test -e "$basepath/base.tgz" && yes-or-no-p -y "$basepath/base.tgz already exist, exit?"; then
        exit
    fi

    sudo rm $(dirname $basepath)/bare -rf
    mkdir $basepath -p
    components='main contrib non-free'
    gpgpath=/usr/share/keyrings/debian-archive-keyring.gpg

    if echo $system|grep ubuntu; then
        components='main universe multiverse'
        gpgpath=/usr/share/keyrings/ubuntu-archive-keyring.gpg
        if test ! -e "$gpgpath"; then
            sudo apt-get install ubuntu-archive-keyring
        fi
    elif test "$(lsb_release -i -s)" = Ubuntu; then
        if test ! -e "$gpgpath"; then
            sudo apt-get install debian-archive-keyring
        fi
    fi

    extra_args="--keyring $gpgpath --debootstrapopts --keyring=$gpgpath"
    sysname=${system%-*} #debian/ubuntu
    dist=${system#*-} #lucid/testing

    set -o pipefail
    sudo unshare -m -- bash -c "
        if test $DEBUG = true; then
            set -x
        fi
        mkdir -p $basepath/base.cow2
        mount -t tmpfs none $basepath/base.cow2 -o size=2000000k
        othermirror='deb-src http://$mirror_host/$sysname $dist $components'
        if test $dist = lucid; then
            othermirror=\"\$othermirror|deb http://$mirror_host/$sysname $dist-backports $components\"
        fi
        command sudo pbuilder --create --basetgz $basepath/base.tgz \
            --mirror http://$mirror_host/$sysname \
            --othermirror \"\$othermirror\" \
            --distribution $dist \
            --components \"$components\" \
            $extra_args \
            --architecture $arch \
            $var_http_proxy \
            $(if test $DEBUG = true; then echo --debug; fi) \
            --buildplace $basepath/base.cow2 ||
        (
            cp $basepath/base.cow2 $basepath/base.error -av
            exit -1
        )
        echo done
    "
done 2>&1 | grep --line-buffered -i -v 'create hard link.*invalid cross-device link' | time tee ~/.cache/system-config/logs/$(basename $0).log
