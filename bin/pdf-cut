#!/bin/bash

# us letter: 215.9 mm Ã— 279.4 mm
# a4: 210 mm x 297

set -e


function die() {
    echo "$@"
    exit -1
}

function Usage() {
    echo "Usage: $(basename $0) [OPTIONS...] INPUT.pdf"
    echo "      OPTIONS: -h, show this help"
    echo "               -l left, how much *more* to cut off on the left, note that it accumulates!"
    echo "               -r right, see -l"
    echo "               -t top, see -l"
    echo "               -b bot, see -l"
    echo "               -m min, the minimum page number to start cutting"
    echo "               -M max, the maximum page number to start cutting"
}


o_size=a4
where=cust

left=0
right=0
top=0
bot=0
pagespec=
TEMP=$(getopt -o l:b:r:t:p:h: -n $(basename $0) -- "$@")
eval set -- "$TEMP"

function sum() {
    subtract "$1" "$(subtract 0 "$2")"
}

while true; do
    case "$1" in
        -h)
            Usage
            exit 0
            ;;
## start code-generator "^\\s *#"
    # for x in top bot left right; do
        # printf "%s\n"  "-${x:0:1})"
        # printf "%s\n" "$x=\$(sum \$$x \$2)"
        # printf "%s\n" "shift 2"
        # printf "%s\n" ";;"
    # done
## end code-generator
## start generated code
        -t)
            top=$(sum $top $2)
            shift 2
            ;;
        -b)
            bot=$(sum $bot $2)
            shift 2
            ;;
        -l)
            left=$(sum $left $2)
            shift 2
            ;;
        -r)
            right=$(sum $right $2)
            shift 2
            ;;

## end generated code
        -p)
            pagespec=$2
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done

if test $# != 1; then
    die "Error: $(Usage) (remaining args: $@)"
fi

pdf=$1
test -e $pdf || die "Error: $pdf does not exist";
pdf=${pdf%.pdf}

o_width=$(pdf-get-width "$pdf".pdf)
o_height=$(pdf-get-height "$pdf".pdf)

n_width=$o_width
n_height=$o_height

n_width=$(subtract $n_width $left)
n_width=$(subtract $n_width $right)
n_height=$(subtract $n_height $top)
n_height=$(subtract $n_height $bot)


echo pdf-cut -t ${top} -b ${bot} -l ${left} -r ${right} "$pdf".pdf
pdfnup --no-landscape --rotateoversize false  --papersize "{${n_width}pt,${n_height}pt}" \
    --nup 1x1 --trim "${left}pt ${bot}pt ${right}pt ${top}pt" --clip true "$pdf".pdf $pagespec --outfile "$pdf"-cut.pdf

evince "$pdf"-cut.pdf&
