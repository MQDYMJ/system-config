#!/usr/bin/expect -f

# this script will log into bbs automatically, maybe even post an
# article to a specified board.


set host "newsmth.net"
set dport "22"
set user "flonk"
set mode ""
set board "Emacs"
set password ""
set loc "gbk-exec"


for {set i 0} {$i < [llength $argv]} {incr i} {
    if {[string eq [lindex $argv $i] "-l"]} {
        incr i;
        set loc [lindex $argv $i];
    } elseif {[string eq [lindex $argv $i] "-u"]} {
        incr i;
        set user [lindex $argv $i];
    } elseif {[string eq [lindex $argv $i] "-p"]} {
        incr i;
        set password [lindex $argv $i];
    } elseif {[string eq [lindex $argv $i] "-h"]} {
        incr i;
        set host [lindex $argv $i];
    } elseif {[string eq [lindex $argv $i] "-m"]} {
        incr i;
        set mode [lindex $argv $i];
    } elseif {[string eq [lindex $argv $i] "-b"]} {
        incr i;
        set board [lindex $argv $i];
    }
}

# start code-generator "^\\s *#"
# perl -e 'for $x ("A".."Z") { $o = ord($x) - ord("A") + 1; printf "set CTRL$x \\%03o\n", $o }'
# end code-generator
# start generated code
set CTRLA \001
set CTRLB \002
set CTRLC \003
set CTRLD \004
set CTRLE \005
set CTRLF \006
set CTRLG \007
set CTRLH \010
set CTRLI \011
set CTRLJ \012
set CTRLK \013
set CTRLL \014
set CTRLM \015
set CTRLN \016
set CTRLO \017
set CTRLP \020
set CTRLQ \021
set CTRLR \022
set CTRLS \023
set CTRLT \024
set CTRLU \025
set CTRLV \026
set CTRLW \027
set CTRLX \030
set CTRLY \031
set CTRLZ \032

# end generated code
set ESC   \033
set UP    \033\[A
set DOWN  \033\[B
set LEFT  \033\[D
set RIGHT \033\[C
set NEXT  \033\[6~
set PREV  \033\[5~
set HOME  \033\[1~
set END   \033\[4~
set ESCv  \033v
set ESClt \033<
set ESCgt \033>

proc qx cmd {
    set fh [open "|$cmd"]
    set res [read $fh]
    close $fh
    return $res
}

proc same_thread args {
    send [join $args ""]
}

proc send_all args {
    send [join $args ""]
}

proc strcat args {
    return [join $args ""]
}



if [string eq "" $mode] {
    spawn $loc ssh $user@$host
} else {
    spawn $loc ssh1 $mode $user@$host
}

expect -timeout 150 password {
    if [string eq "" $password] {
        set password [qx "get-authinfo $host $user"]
    }
    puts "send password\n";
    send "$password\n"
} "欢迎您使用ssh方式访问。" {
    ;
} timeout {
    puts "timed out\n";
    exp_continue;
}

set timeout 5

expect {
    -re "按.*RETURN.*继续|上次连线时间|按任意键继续|按任何键继续|近期热点" {
        send "\r\n";
        exp_continue;
    }
    "下面还有喔" {
        puts "send space\n";
        send " ";
        exp_continue;
    }
    "请输入编号，回车忽略" {
        puts "send number\n";
        send "1\r\n";
        exp_continue;
    }
    "主选单" {
        if {! [string eq "" $board]} {
            send "s\r\n";
            expect {
                "请输入讨论区" {
                    send "$board\r\n"
                }
            }
        }
    }
    "如何处理以上密码输入错误记录" {
        send "y\r\n";
        exp_continue;
    }
    timeout {
        puts "timed out\n"; puts "timed out\n"; puts "timed out\n";    puts "timed out\n";    puts "timed out\n";
        exp_continue;
    }
}

interact {
    -reset $CTRLZ {exec kill -STOP [pid]}
    $CTRLP {send $UP}
    $CTRLN {send $DOWN}
    $CTRLF {send $RIGHT}
    $CTRLB {send $LEFT}
    $CTRLV {send $NEXT}
    $ESCv  {send $PREV}

    $CTRLS {send /}
    $CTRLR {send ?}

    $ESClt {send $HOME}
    $ESCgt {send $END}

    $CTRLO {send $CTRLM$UP$CTRLE}
    $CTRLY {send [qx getclip]}
    # $CTRLT {send_all {a b c d e}}

    # thread mode when in original list
    [strcat $CTRLC t] {
        same_thread r q $CTRLM & $CTRLG 4 $CTRLM q p
    }

    # next thread when in normal list
    [strcat $CTRLC n] {
        same_thread r q $CTRLM & $CTRLG 4 $CTRLM $DOWN q p
    }
    # F4
    [strcat $ESC O S] {
        same_thread r q $CTRLM & $CTRLG 4 $CTRLM $DOWN q p
    }

    # prev thread when in normal list
    [strcat $CTRLC p] {
        same_thread r q $CTRLM & $CTRLG 4 $CTRLM $UP q p
    }

    #view my replies
    [strcat $CTRLC $CTRLM] {
        send_all $LEFT $LEFT $LEFT "m\r\nl\r\n"
    }

    # F3
    [strcat $ESC O R] {
        same_thread r q $CTRLM & $CTRLG 4 $CTRLM $UP q p
    }

    # start code-generator "^\\s *#"
    # perl -e 'for $x ("A".."Z") { print "\$CTRLX\$CTRL$x {send \$CTRL$x}\n"}'
    # end code-generator
    # start generated code
    $CTRLX$CTRLA {send $CTRLA}
    $CTRLX$CTRLB {send $CTRLB}
    $CTRLX$CTRLC {send $CTRLC}
    $CTRLX$CTRLD {send $CTRLD}
    $CTRLX$CTRLE {send $CTRLE}
    $CTRLX$CTRLF {send $CTRLF}
    $CTRLX$CTRLG {send $CTRLG}
    $CTRLX$CTRLH {send $CTRLH}
    $CTRLX$CTRLI {send $CTRLI}
    $CTRLX$CTRLJ {send $CTRLJ}
    $CTRLX$CTRLK {send $CTRLK}
    $CTRLX$CTRLL {send $CTRLL}
    $CTRLX$CTRLM {send $CTRLM}
    $CTRLX$CTRLN {send $CTRLN}
    $CTRLX$CTRLO {send $CTRLO}
    $CTRLX$CTRLP {send $CTRLP}
    $CTRLX$CTRLQ {send $CTRLQ}
    $CTRLX$CTRLR {send $CTRLR}
    $CTRLX$CTRLS {send $CTRLS}
    $CTRLX$CTRLT {send $CTRLT}
    $CTRLX$CTRLU {send $CTRLU}
    $CTRLX$CTRLV {send $CTRLV}
    $CTRLX$CTRLW {send $CTRLW}
    $CTRLX$CTRLX {send $CTRLX}
    $CTRLX$CTRLY {send $CTRLY}
    $CTRLX$CTRLZ {send $CTRLZ}

    # end generated code
    $CTRLX$ESC   {send $ESC}
    timeout 180 {
        send \000;
        send "\r\n\r\n";
        expect {
            -timeout 1 "您有回复提醒" {
                exec bhj-notify bbs 您有回复提醒 &
            }
        }
    }
}
exit

# Local Variables: #
# mode: tcl #
# End: #
