#!/bin/bash

set -e
if echo $SHELLOPTS | grep -q xtrace; then
    export SHELLOPTS
fi

function die() {
    echo Error: "$@"
    exit -1
}


## start code-generator "^\\s *#\\s *"
# generate-getopt p:partitions
## end code-generator
## start generated code
TEMP=$(getopt -o p: --long "partitions:"  -n $(basename $0) -- "$@")
partitions=
eval set -- "$TEMP"
while true; do
    case "$1" in
        -p|--partitions)
            partitions=$2
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done

## end generated code


if test ! -e rawprogram_unsparse.xml && test ! -e sparse_images/rawprogram_unsparse.xml; then
    die "can't find the rawprogram_unsparse.xml"
fi

xml=rawprogram_unsparse.xml
if test ! -e rawprogram_unsparse.xml; then
    xml=sparse_images/rawprogram_unsparse.xml
fi

if test ! -e boot.img; then
    die "Can't find boot.img"
fi

if pwd -P | grep ~/tmp/root-flash/; then
    outdir=$PWD
else
    workingdir=/home/bhj/smb/baohaojun/tmp/root-flash

    rm -rf $workingdir/$(basename $PWD) ~/tmp/root-flash
    mkdir -p $workingdir/ ~/tmp/root-flash || true
    outdir=~/tmp/root-flash/$(basename $PWD)

    find . -type f | while read file; do
        if ! grep -q -P -e "\Q$(basename $file)\E" $xml; then
            echo do $file
            cp-with-dir-struct $outdir $file
        else
            echo checking $file with $partitions
            for p in $partitions; do
                if [[ $(basename $file) =~ $p.* ]]; then
                    echo do $file
                    cp-with-dir-struct $outdir $file
                    break
                fi
            done
        fi
    done
fi

(
    cd $outdir
    fix-deep-dirs
    # smb-push .

    perl -ne 'print unless m/alterable.bin/' -i $xml


    if yes-or-no-p -y skip update boot.img?; then
        true
    else
        replace-bootimage -b boot.img -- -d
    fi

    export partitions
    perl -ne '
        $skip = 0;
        if (m/filename="/ and not m/filename=""/) {
            @partitions = split(" ", $ENV{partitions});
            $skip = 1;
            for $p (@partitions) {
                if (m/filename="$p/) {
                    $skip = 0;
                }
            }
        }
        print unless $skip == 1;
    ' -i $xml
    do-flashing
)
