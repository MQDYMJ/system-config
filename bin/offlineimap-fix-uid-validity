#!/usr/bin/env bash
set -e


## start code-generator "^\\s *#\\s *"
# generate-getopt fforce ndry-run
## end code-generator
## start generated code
TEMP=$( getopt -o nfh \
               --long dry-run,force,help,no-dry-run,no-force \
               -n $(basename -- $0) -- "$@")
declare dry_run=false
declare force=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -n|--dry-run|--no-dry-run)
            if test "$1" = --no-dry-run; then
                dry_run=false
            else
                dry_run=true
            fi
            shift

            ;;
        -f|--force|--no-force)
            if test "$1" = --no-force; then
                force=false
            else
                force=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %6s '-n, '
            printf %-24s '--[no-]dry-run'
            echo
            printf %6s '-f, '
            printf %-24s '--[no-]force'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code


if test "$#" = 0; then
    set -- ~/.cache/system-config/logs/get-mails.log
fi

declare -A account_to_maildir
account_to_maildir[Smartisan]=smt
account_to_maildir[SmartCM]=smtcm
account_to_maildir[Gmail]=gmail

declare -A repo_to_account
repo_to_account[Smt]=Smartisan
repo_to_account[SmtCm]=SmartCM
repo_to_account[Gmail]=Gmail

if grep '^WARNING:OfflineImap:UID validity problem for folder' "$1" -q; then
    grep '^WARNING:OfflineImap:UID validity problem for folder' "$1" |
        perl -ne 'print if s/WARNING:OfflineImap:UID validity problem for folder (.*?) \(repo Remote-(.*?)\).*/$1 $2/' |
        sort -u |
        while read mailbox repo; do
            if test "$dry_run" = true; then
                echo "$mailbox:$repo"
                continue
            fi
            account=${repo_to_account[$repo]}
            maildir=~/Maildir/${account_to_maildir[$account]}.$mailbox
            if test ! -d $maildir; then
                echo "$maildir not exist"
                # continue
            fi
            cmd=$(cat <<EOF

rm $maildir -rf
rm ~/.offlineimap/Account-$account/LocalStatus-sqlite/$(basename $maildir) -f
rm ~/.offlineimap/Repository-Remote-$repo/FolderValidity/$mailbox -rf

EOF
            )
            echo '****************'
            echo "$cmd"
            echo
            echo '****************'
            for path in $(echo "$cmd" | pn 2); do
                if test ! -e "$path" && test "$force" = false; then
                    hint "$path not exist, press C-c to exit" </dev/tty
                fi
            done
            if test "$force" = true || yes-or-no-p "Run the above commands?" </dev/tty; then
                bash -c "$cmd" </dev/null
            fi
        done
fi
