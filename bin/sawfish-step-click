#!/usr/bin/env bash

me=$(readlink -f $0)
if test ! -e "$me"; then
    me=$(readlink -f "$(which $0)")
    if test ! -e "$me"; then
        die "Can't find out about me"
        exit 1
    fi
fi
b0=$(basename $0)

set -- --xstep 7 --ystep 3 --start-pos "91 1445" --end-pos "993 1688" --skip-last



## start code-generator "^\\s *#\\s *"
# generate-getopt @:xstep @:ystep @:start-pos @:end-pos @skip-last
## end code-generator
## start generated code
TEMP=$(getopt -o h \
              --long xstep:,skip-last,ystep:,end-pos:,start-pos:,help,no-skip-last \
              -n $(basename -- $0) -- "$@")
xstep=
skip_last=false
ystep=
end_pos=
start_pos=
eval set -- "$TEMP"
while true; do
    case "$1" in

        --xstep)
            xstep=$2
            shift 2
            ;;
        --skip-last|--no-skip-last)
            if test "$1" = --no-skip-last; then
                skip_last=false
            else
                skip_last=true
            fi
            shift
            ;;
        --ystep)
            ystep=$2
            shift 2
            ;;
        --end-pos)
            end_pos=$2
            shift 2
            ;;
        --start-pos)
            start_pos=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo
            echo
            echo Options and arguments:
            printf "%6s" " "
            printf %-24s '--end-pos=END_POS'
            echo
            printf "%6s" " "
            printf %-24s '--[no-]skip-last'
            echo
            printf "%6s" " "
            printf %-24s '--start-pos=START_POS'
            echo
            printf "%6s" " "
            printf %-24s '--xstep=XSTEP'
            echo
            printf "%6s" " "
            printf %-24s '--ystep=YSTEP'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if [[ $start_pos =~ " " ]]; then
    x1=${start_pos% *}
    y1=${start_pos#* }
else
    x1=${start_pos%x*}
    y1=${start_pos#*x}
fi

if [[ $end_pos =~ " " ]]; then
    x2=${end_pos% *}
    y2=${end_pos#* }
else
    x2=${end_pos%x*}
    y2=${end_pos#*x}
fi

for ys in $(seq 1 $ystep); do
    for xs in $(seq 1 $xstep); do
        xpos=$(( x1 + (x2 - x1) / (xstep - 1) * (xs - 1)))
        ypos=$(( y1 + (y2 - y1) / (ystep - 1) * (ys - 1)))

        if test "$b0" = adb-step-click; then
            if test "$xs" = $xstep -a "$ys" = $ystep -a $skip_last = true; then
                true
            else
                adb-tap "$xpos" "$ypos"
            fi
        else
            xdotool mousemove $xpos $ypos
            sleep .1
            xdotool click 1
        fi
    done
done
