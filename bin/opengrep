#!/usr/bin/env perl
use strict;

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P p:project e:entry
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $entry = "";
my $project = "";

my $handler_help = sub {
    print ;
    print "\n\n选项和参数：\n";
    printf "%6s", '-e, ';
    printf "%-24s", '--entry=ENTRY';
    if (length('--entry=ENTRY') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '-p, ';
    printf "%-24s", '--project=PROJECT';
    if (length('--project=PROJECT') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    exit(0);
};

GetOptions (
    'entry|e=s' => \$entry,
    'project|p=s' => \$project,
    'help|h!' => \&$handler_help,
);


## end generated code
use JSON;

use URI::Encode qw(uri_encode uri_decode);

$entry = "/$entry/" unless $entry =~ m,^/.*/$,;

$project = uri_encode($project);
$entry = uri_encode($entry);

my $command = "curl -s '$ENV{scm_opengrok_url}api/v1/search?projects=$project&full=$entry&defs=&refs=&path=&hist=&type='";

print STDERR "$command\n";

my $result = qx($command);

$result =~ s,\\uD83D,,g;

my $json = decode_json $result;

use Encode;

for my $file (keys %{$json->{results}}) {
    for (@{$json->{results}{$file}}) {
        my $line = encode_utf8 $_->{line};
        my $lineNumber = $_->{lineNumber};

        print "$file:$lineNumber: $line\n";
    }
}
