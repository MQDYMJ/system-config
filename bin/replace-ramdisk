#!/bin/bash
set -e

mydir=$(dirname $(readlink -f $0))
ramdisk=
root_folder=
debuggable=
userdebug=
do_busybox=
TEMP=$(getopt -o R:bDdur: --long ramdisk: -n $(basename $0) -- "$@")
eval set -- "$TEMP"
while true; do
    case "$1" in
        -D)
            debuggable=false
            shift
            ;;
        -b)
            do_busybox=true
            shift
            ;;
        -u)
            userdebug=true
            shift
            ;;
        -d)
            debuggable=true
            shift
            ;;
        -R)
            root_folder=$2
            if [[ $root_folder =~ ^smb:// ]]; then
                root_folder=~/smb/${root_folder#smb://}
                echo root_folder is $root_folder
            fi
            shift 2
            ;;
        -r|--ramdisk)
            ramdisk=$2
            shift 2
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

set -e

function die() {
    echo Error: "$@"
    exit -1
}

if test ! -e "$ramdisk"; then
    die "ramdisk image $ramdisk not found"
fi
echo ramdisk image is $ramdisk

tdir=${REPLACE_RAMDISK_TMPDIR:-/tmp/$(basename $0).$$}
rm -rf $tdir
mkdir -p $tdir
(
    cd $tdir
    ramdisk_len2dir $ramdisk
)

function ew() {
    if test "$EDITOR"; then
        command "$EDITOR" "$@"
    else
        echo "You have not set EDITOR, using vi by default."
        read -p "Press any key to continue... "
        vi "$@"
    fi
}

function fix-adbd-and-debug() {
    echo ro.DEBUGGABLE=1 >> $tdir/default.prop
    perl -npe 's/u:r:install_recovery:s0/u:r:init:s0/' -i $tdir/init.rc
    if test "$USER" = bhj; then
        perl -npe 's/ro.debuggable=1/ro.debuggable=0/' -i $tdir/default.prop
    fi

    if [[ "$BOOT_IMAGE_PATH" =~ -eng|-userdebug|icesky ]] || test -e $tdir/selinux_version; then
        echo no need to replace the adbd
    else
        echo $BOOT_IMAGE_PATH need to replace adbd
        if test -e ~/src/github/private-config/etc/adbd; then
            cp ~/src/github/private-config/etc/adbd $tdir/sbin/adbd -av
        elif test -e $mydir/root-adbd; then
            cp $mydir/root-adbd $tdir/sbin/adbd -av
        fi
    fi
    perl -npe 's/ro.debuggable/ro.DEBUGGABLE/' -i $tdir/sbin/adbd
    if test -e $tdir/fstab.qcom; then
        perl -npe 's/\bwait,verify\b/wait/' -i $tdir/fstab.qcom
    fi

}

tdir=$tdir/$(basename $ramdisk)-tmp
if test "$debuggable" = true; then
    fix-adbd-and-debug
fi

if test "$userdebug" = true; then
    perl -npe 's/ro.debuggable=0/ro.debuggable=1/' -i $tdir/default.prop
fi

if test "$do_busybox" = true; then
    echo doing busybox
    perl -ne 'print; if (m,export\s+PATH\s+/sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin,) {
                 print "export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin:/systex/sbin:/systex/bin:/systex/xbin\n";
                 print "chmod 0775 /systex/bin/busybox\n";
             }' -i $tdir/init.environ.rc

    cp ~/system-config/etc/android/systex $tdir/. -av
    mv $tdir/systex/bin/busybox $tdir/sbin
    ln -s /sbin/busybox $tdir/systex/bin/busybox
    perl -npe 's,/system/bin/sh,/systex/bin/sh,g' -i $tdir/sbin/adbd
fi

for x in "$@"; do
    target=$(select-output-line find $tdir -name $(basename $x))
    if test ! -e "$target"; then
        die "target for $x not exist: $(find $tdir)"
    else
        echo found $target for your $x
    fi
    if bash -x my-rsync -v $x $target; then
        true;
    else
        ew $target
    fi
done

if test "$root_folder"; then
    rsync "$root_folder"/* $tdir -av
    fix-adbd-and-debug
fi

echo tdir is $tdir
dir2ramdisk $tdir > $ramdisk.2

mv $ramdisk.2 $ramdisk
if echo $SHELLOPTS | grep -q xtrace; then
    true;
else
    rm -rf $(dirname $tdir)
fi
