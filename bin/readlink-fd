#!/usr/bin/env bash
set -e

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}
Given the pid and fd, =readlink -f /proc/$pid/fd/$fd= in linux, and use
procstat in freebsd or macos.
# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # p:pid f:fd
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o f:p:h \
                      --long fd:,pid:,help \
                      -n $(basename -- $0) -- "$@")
declare fd=
declare pid=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -f|--fd)
            fd=$2
            shift 2

            ;;
        -p|--pid)
            pid=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %6s '-f, '
            printf %-24s '--fd=FD'
            echo
            printf %6s '-p, '
            printf %-24s '--pid=PID'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test -z "${pid}" -o -z "${fd}"; then
    die "Must specify both pid and fd"
fi

if test "$(uname)" = Linux; then
    exec readlink -f "/proc/$pid/fd/$fd"
elif type -t procstat &>/dev/null; then
    while read PID COMM FD T V FLAGS REF OFFSET PRO NAME; do
        if test "$PID" != "$pid"; then
            die "Erorr in procstat output format"
        fi

        if test "${FD}" = "$fd"; then
            echo "$NAME"
            exit
        fi
    done <<<"$(
        procstat -f $pid | perl -ne 'print if 2..-1' # get rid of header
    )"

    die "Unknown error in readlink-fd, not found?"
else
    die "Can't readlink-fd, unsupported."
fi
