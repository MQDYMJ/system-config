#!/bin/bash

. aterr bhj-notify -- "$0" "failed to run $0"

# SE means Switch Env：在生产环境和测试环境之间切换
set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P ddefault=@null@
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o dh \
                      --long bash,default,help,no-bash,no-default \
                      -n $(basename -- $0) -- "$@")
declare bash=false
declare default=@null@
eval set -- "$TEMP"
while true; do
    case "$1" in

        --bash|--no-bash)
            if test "$1" = --no-bash; then
                bash=false
            else
                bash=true
            fi
            shift

            ;;
        -d|--default|--no-default)
            if test "$1" = --no-default; then
                default=false
            else
                default=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--[no-]bash'
            echo
            printf %06s '-d, '
            printf %-24s '--[no-]default'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "${default}" = true; then
    if test -e ~/.config/system-config/scm-testing; then
        rm -f ~/.config/system-config/scm-testing
        touch ~/.config/system-config/scm-prod
    else
        rm -f ~/.config/system-config/scm-prod
        touch ~/.config/system-config/scm-testing
    fi
    myscr --bg 'global-setenv'
    myscr bash
    exit
elif test "${default}" = false; then
    export SE_LOCAL=true
    . ~/src/ep-tools/common_utils/etc/global-settings.rc
    tmux rename-window SE
    . atexit tmux rename-window bash
    bash
    exit 0
fi

declare -A url_switch_map

url_switch_map[\$scm_jenkins_prod_url]=:'EMACS=t select-args $scm_jenkins_test_url http://192.168.4.168:8088/'
url_switch_map[\$scm_jenkins_test_url]=$scm_jenkins_prod_url
url_switch_map[http://192.168.4.168:8088/]=${scm_jenkins_prod_url}

url_switch_map[http://hmi-ci.it.chehejia.com/]=$scm_jenkins_test_url

url_switch_map[\$scm_jira_prod_url]=$scm_jira_test_url
url_switch_map[\$scm_jira_test_url]=$scm_jira_prod_url
url_switch_map[\$scm_gerrit_prod_url]=$scm_gerrit_test_url
url_switch_map[\$scm_gerrit_test_url]=$scm_gerrit_prod_url

if test "${default}" != true; then
    top_window=$(sawfish-top-window)
    if [[ $top_window =~ Firefox ]]; then
        current_url=$(get-firefox-tab-url)
        for match_key in "${!url_switch_map[@]}"; do
            if [[ $match_key =~ ^\$ ]]; then
                match_url=$(eval echo $match_key)
            else
                match_url=$match_key
            fi

            if [[ $current_url =~ ^$match_url ]]; then
                if [[ $match_key =~ prod_url ]]; then
                    export SE_LOCAL=true
                    . testing
                fi
                target_site=${url_switch_map[$match_key]}
                if [[ $target_site =~ ^: ]]; then
                    target_site=$(eval "${target_site#:}")
                fi
                target_url=${target_site}${current_url#$match_url}
                firefox "$target_url"
                exit 0
            fi
        done
    fi
fi
exit 1
