#!/usr/bin/env bash

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P u:user c:command
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o c:u:h \
                      --long command:,user:,help \
                      -n $(basename -- $0) -- "$@")
declare command=
declare user=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -c|--command)
            command=$2
            shift 2

            ;;
        -u|--user)
            user=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %6s '-c, '
            printf %-24s '--command=COMMAND'
            echo
            printf %6s '-u, '
            printf %-24s '--user=USER'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

IFS=$'\n'

if test -z "$user"; then
    user=$1
    shift
fi

if test -z "$command"; then
    command=$(string-join " " $(for x in "$@"; do echo "$(printf %q "$x")"; done))
fi

. atexit rm -f ~/tmp/su-ctty.$$
cat > ~/tmp/su-ctty.$$ <<<"$(
cat <<'EOF1f8a49ab2aae'
# {%tcl-mode%}
spawn sudo su - [lindex $argv 0]
expect -re  "\\$" {
    send "[lindex $argv 1]\r\n";
} -re "password for .*:" {
    send_user "Can't send password";
    exit 1
}
interact
# {%/tcl-mode%}
EOF1f8a49ab2aae

)"

en_US expect -f ~/tmp/su-ctty.$$ "$user" "$command"
