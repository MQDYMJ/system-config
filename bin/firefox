#!/bin/bash

if echo $SHELLOPTS | grep -P -e  '\bxtrace\b'; then
    true
else
    exec 2>>~/.logs/firefox.log
fi
if test "$DISPLAY" = :0.0; then
    . ~/.renew-xauth
fi

function debug() {
    echo "$@" 1>&2
}
export -f debug

if test -e ~/external/the-firefox; then
    the_firefox=$(readlink -f ~/external/the-firefox)
else
    the_firefox=$(readlink -f ~/bin/the-firefox)
fi

is_firefox=0
if test $(basename "$the_firefox") = firefox; then
    is_firefox=1
fi

if test "$#" = 1 -a -e "$1" -a "${1##*.}" = pdf; then
    exec firefox-open-url-pattern -e "$(urlp "$1")" "$(urlp "$1")"
fi

function push-url() {
    ring=$1
    shift
    if test "$1" = -new-tab; then
        shift
    fi

    (echo "$@"; cat "$ring" 2>/dev/null)|
    uniq-even-non-ajacent |head -n 50 > "$ring.$$"
    mv "$ring".$$ "$ring"
}

function pop-url() {
    ring=$1
    shift

    perl -ne 'BEGIN{$url = "'"$1"'"} print if m!\Q$url\E!..0' "$ring" | perl -ne 'print if 2..0' > "$ring".$$
    mv "$ring".$$ "$ring"
}

export -f push-url pop-url

if test "$1" = -new-tab; then
    push-url ~/.logs/firefox-tab-ring "$(get-firefox-tab-url)"
fi

function do_it() {
    (
        export ring1=$1
        export ring2=$2
        flock 9
        push-url $ring2 "$(get-firefox-tab-url)"
        cat $ring1 | xargs -d \\n \
            bash -x -c '
                for x in "$@"; do
                    if test "$(get-firefox-tab-url)" = "$x"; then
                        push-url $ring2 "$x"
                        debug "will skip $x"
                        continue;
                    fi

                    list_f=/tmp/firefox-tab-list-failed.$$
                    list=/tmp/firefox-tab-list.$$

                    if (
                        if test -e $list_f; then
                            grep -P -e "\Q$x\E" $list_f && firefox-search-for-tab --tabs 20 "\Q$x\E"
                        else
                            DEBUG=true firefox-search-for-tab --tabs 20 "\Q$x\E" > $list
                        fi
                       ); then
                        echo "will open $x"
                        push-url $ring2 "$x"
                        pop-url $ring1 "$x"
                        rm -f /tmp/firefox-tab-list-failed.$$ /tmp/firefox-tab-list.$$
                        exit
                    else
                        mv /tmp/firefox-tab-list.$$ /tmp/firefox-tab-list-failed.$$ || true
                    fi
               done
               debug will now empty $ring1
               echo -n > $ring1
               rm -f /tmp/firefox-tab-list-failed.$$ /tmp/firefox-tab-list.$$
           ' true
    ) 9<~/.bashrc
}

if test "$1" = pop; then
    FF_POP=true do_it ~/.logs/firefox-tab-ring ~/.logs/firefox-tab-ring.pop
    exit
fi

if test "$1" = push; then
    if test $# -gt 1; then
        shift
        push-url ~/.logs/firefox-tab-ring "$@"
    else
        do_it ~/.logs/firefox-tab-ring.pop ~/.logs/firefox-tab-ring
    fi
    exit

fi

if test $# = 1; then
    set -- -new-tab "$@"
fi

if test $# = 2 -a "$1" =  -remote && echo "$2" | perl -ne 'exit(1) unless (m/^openURL\(.*\)$/ && ! (m/^openURL\(.*,\s*new-tab\)$/))'; then
    set -- -new-tab "$(echo "$2"|perl -npe 's/^openURL\(//; s/\)$//;')"
fi

if test "$1" = -current-tab; then
    if test "$is_firefox" = 1; then
        shift
    elif sawfish-window-exists Chromium; then
        shift
        find-or-exec Chromium
        putclip "$@"
        sawfish-browser-input C-l C-l BS
        sawfish-browser-input C-v
        sleep .1
        sawfish-browser-input RET

        exit 0
    fi
fi

if test "$is_firefox" = 0; then
    set -- --proxy-pac-url=http://localhost:8086/proxy.pac "$@"
fi

if test -x $the_firefox; then
    if test "$(get-pid-env $the_firefox DISPLAY|perl -npe 's/\.0//')" != "DISPLAY=${DISPLAY%.0}"; then
        debug "Won't start firefox $@ because it is running in another display"
        exit -1
    fi
    exec $the_firefox "$@" 2>&1
fi
