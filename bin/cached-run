#!/bin/bash
set -e

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}
This script runs a command, but caches its output.

Next time the same command is run, it will be skipped, only the old cached result is output.

You can set CACHED_RUN_FORCE_CLEAN=true to force run the command, and update the cache.

The output is not cached if the command fails.
# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # d:cache-dir='${CACHED_RUN_SAVE_DIR:-~/.cache/system-config/cached-run}'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o d:h \
                      --long cache-dir:,help \
                      -n $(basename -- $0) -- "$@")
declare cache_dir=${CACHED_RUN_SAVE_DIR:-~/.cache/system-config/cached-run}
eval set -- "$TEMP"
while true; do
    case "$1" in

        -d|--cache-dir)
            cache_dir=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %06s '-d, '
            printf %-24s '--cache-dir=CACHE_DIR'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

cache_dir=$(absp "${cache_dir}")
mkdir -p "$cache_dir"

cmd_md5=$(echo "$*" | md5sum | pn 1)
cmd_md5_file_prefix=${cache_dir}/${cmd_md5:0:2}/${cmd_md5:2}

mkdir -p "${cmd_md5_file_prefix%/*}"

if test -e "${cmd_md5_file_prefix}.cmd" -a -e "${cmd_md5_file_prefix}.out" &&
        test "$(cat "${cmd_md5_file_prefix}.cmd")" = "$(echo -n "$*")"; then
    if test "${CACHED_RUN_FORCE_CLEAN}" != true; then
        cat "${cmd_md5_file_prefix}.out"
        exit
    fi
fi

echo -n "$*" > "${cmd_md5_file_prefix}.cmd"
. atexit rm -f "${cmd_md5_file_prefix}.out.$$"

set -o pipefail
"$@" | tee "${cmd_md5_file_prefix}.out.$$"
mv "${cmd_md5_file_prefix}.out.$$" "${cmd_md5_file_prefix}.out"
