#!/usr/bin/expect


if {[info exists env(JS_TARGET)]} {
    set js_target $env(JS_TARGET); #
} else {
    set js_target 162
}

if {[info exists env(JS_EXECUTE)]} {
    set js_execute $env(JS_EXECUTE);
} else {
    set js_execute {}
}

if [regexp {^\d+$} $js_target] {
    set js_target .4.$js_target
}

# close [open "|bhj-notify hello $js_target '$js_execute'"]

proc qx cmd {
    set fh [open "|$cmd"]
    set res [read $fh]
    close $fh
    return $res
}

set home $env(HOME)

proc log str {
    global home
    set logf [open ${home}/tmp/js-ssh.log a+]
    puts $logf $str
    close $logf
}

set local_ip [qx get-my-ip]

spawn ssh -o ControlMaster=auto -o ControlPath='tramp.%C' -o ControlPersist=no -e none js;
log_user 0
expect "Opt>" {
    # log "Seend Opt>, sending $js_target\n";
    send -- "$js_target\n";
    expect -re "\\$" {
        if {$argc != 0} {
            foreach arg $argv {
                send "$arg "
            }
            send "\n";
            log_user 1
        } else {
            send "REMOTEPROTOCOL=jssh REMOTEIP=$local_ip REMOTEUSER=$env(USER) exec bash -c '. /apps/scm/prod/system-config/bin/sc try'\n";
            log_user 1
            if { $js_execute ne {} } {
                expect -re "\\$" {
                    send "exec $js_execute\n";
                    expect {
                        -re "Opt>" {
                            send "exit\n";
                            wait
                            exit
                        }
                        timeout {
                            exp_continue;
                        }
                    }
                }
            }
        }
    } -re " Would you like to update.*:" {
        send "n\n"
        exp_continue
    } -re " Would you like to check for updates.*:" {
        send "n\n"
        exp_continue
    } -re "Opt>" {
        close [open "|bhj-notify js-ssh Cannot connect, please use strace to debug"]
        log_user 1
        sleep 1
        exit 1
    } -re "提示: 输入资产.*，直接登录资产.*\n:" {
        close [open "|bhj-notify js-ssh Cannot connect, please use strace to debug"]
        sleep 1
        exit 1
    }
}

expect_background "Opt>" {
    send "exit\n";
    wait
    exit
}

interact {
    timeout 1750 {
        set current_hour [clock format [clock seconds] -format %k]
        if { $current_hour > 18 || $current_hour < 9 } {
            exit
        } else {
            send " \010";
        }
    }
};
wait
