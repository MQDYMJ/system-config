#!/bin/bash

TEMP=$(getopt -o u:p:d --long user:pass: -n $(basename $0) -- "$@")
user=$(get-about-me ldap-user)
decode=false
pass=$(get-authinfo -h 127.0.0.1 -u $(get-about-me ldap-user))

eval set -- "$TEMP"
while true; do
    case "$1" in
        -u|--user)
            user=$2
            shift 2
            ;;
        -p|--pass)
            pass=$2
            shift 2
            ;;
        -d)
            decode=true
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

test $# = 0 && { echo "Usage: $(basename $0) match1 [match2] [[--] disp1 disp2 ... ]"; exit; }
matches=()
matches_done=false
disps=()

while test $# != 0; do
    if test ${#matches[@]} = 2 -o "$1" = --; then
        matches_done=true
    fi
    if test $matches_done = false; then
        matches=("${matches[@]}" "$1")
    else
        test "$1" != -- && disps=("${disps[@]}" "$1")
    fi
    shift
done

set -- "${matches[@]}"

if test $# = 1; then
    if [[ "$1" =~ = ]]; then
        query=$1
    else
        query=$(printf '(|(sAMAccountName=%s*)(cn=%s*)(sn=%s*)(mail=%s*))' "$1" "$1" "$1" "$1")
    fi
elif test $# = 2; then
    query='(|'
    f='sn mail givenName'
    for x in $f; do
        for y in $f; do
            test $x = $y && continue;
            query=$(printf '%s(&(%s=%s*)(%s=%s*))' "$query" $x $1 $y $2)
            done
        done
    query=$query')'
fi

function get-display() {
    perl -ne '
BEGIN{
    @f = @ARGV;
    @ARGV=();
    $str = "";
    $mail_str = "";

    sub print_it() {
        if ($mail_str) {
            print "$mail_str";
            if ($str) {
                print ":$str\n";
            }
            print "\n";
        }
    }
}

END {
    print_it;
}

chomp;
if (m/^dn: /) { # restart
    print_it;
    $str = "";
    $mail_str = "";
} elsif (m/^displayName: (.*)$/) {
    $mail_str = "\"$1\" $mail_str";
} elsif (m/^mail: (.*)$/) {
    $mail_str = "$mail_str<$1>";
} else {
    m/(.*?): (.*)/ or next;
    ($key, $val) = ($1, $2);
    for $f (@f) {
        if ($key =~ m/$f/i) {
            $str = "$str\n($key: $val)"
        }
    }
}
' "${disps[@]}"
}

ldapsearch -LLL -b "$(get-about-me ldap-dc)" \
    -P 3 \
    -H "$(get-about-me ldap-url)" \
    -D "$user" \
    -w "$pass" "$query" |
    if test $decode = true; then
        decode-ldap-output
    else
        cat
    fi
