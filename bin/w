#!/bin/bash

exec > ~/tmp/w.log 2>&1

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P rrun-command
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o rh \
                      --long run-command,help,no-run-command \
                      -n $(basename -- $0) -- "$@")
declare run_command=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -r|--run-command|--no-run-command)
            if test "$1" = --no-run-command; then
                run_command=false
            else
                run_command=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-r, '
            printf %-24s '--[no-]run-command'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

set -x
. ~/.profile

if test "${run_command}" = true; then
    while true; do
        if ("$@"); then
            alarm 0m "$* is ok now"
            break
        fi
        sleep 5
    done
    exit
fi

top_window=$(sawfish-top-window)
top_window=${top_window,,}
if [[ ${top_window} =~ firefox ]]; then
    url=$(get-firefox-tab-url)
    url=${url%/}/
    if [[ $url =~ /job/[^/]*/?$ ]]; then
        id=$(
            jc curl ${url}lastBuild/api/json|jq .id -r
          )
        url=${url}${id}
    fi
    if [[ $url =~ /job/.*/[0-9]+(/|$) ]]; then
        url=$(echo $url | perl -pe 's,(/job/.*/[0-9]+(/|$)).*,$1,')
        bhj-notify jc "Waiting for $url"
        global-x jc wait "$url"
        alarm -a "firefox $url" 0m "$url has completed"
        mail-bhj -s "gtd: $url has completed"
        exit 0
    fi
elif [[ $top_window =~ xterm ]]; then
    activated_tmux_window=$(
        tmux list-windows | perl -ne 'print $1 if m,^(\d)+:.*\(active\)$,'
                         )

    tmux-get-window-text() {
        tmux capture-pane -t 5
        tmux save-buffer -
        tmux delete-buffer
    }

    window_text=$(
        tmux-get-window-text
               )

    while true; do
        sleep 30
        if test "${window_text}" != "$(tmux-get-window-text)"; then
            alarm 0m "tmux completed task: $window_text"
            mail-bhj -s "gtd: $url has completed"
            exit 0
        fi
    done
fi

bhj-notify w "Don't know what to do"
