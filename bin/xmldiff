#!/usr/bin/env perl
use strict;
use v5.10.1; # for say and switch
use autodie qw(:all);
use IPC::System::Simple qw(system systemx capture capturex);

(my $comment_doc = <<~'EOFc83131117f09') =~ s,^# .*org-mode.*,,gm;
# {%org-mode%}
Given 2 xml files as argument, normalize their format (for e.g., use <p/> instead of <p></p>).

Then do diff or meld.

Thus, the diff noise is reduced, and it's easier to see the real diff.
# {%/org-mode%}
EOFc83131117f09

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl -P '?"$comment_doc"' \
# d:diff-tool='"meld"' '?"can be diff or meld (for GUI diff)"'
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("posix_default");



my $diff_tool = "meld";

my $handler_help = sub {
    print "$comment_doc";
    print "\n\n选项和参数：\n";
    printf "%6s", '-d, ';
    printf "%-24s", '--diff-tool=DIFF-TOOL';
    if (length('--diff-tool=DIFF-TOOL') > 24 and length("can be diff or meld (for GUI diff)") > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", "can be diff or meld (for GUI diff)";
    print "\n";

    my $exit_value = 0;
    if (@_ && $_[0] ne "help" && $_[1] != 1) {
        $exit_value = shift @_;
        print "@_\n";
    }

    exit($exit_value);
};

GetOptions (
    'diff-tool|d=s' => \$diff_tool,
    'help|h!' => \&$handler_help,
);


## end generated code

say STDERR "running xmldiff @ARGV $ENV{REMOTE}";

use File::Slurp;
my @xml_str = map {scalar read_file $_} @ARGV;

use Mojo::DOM;

my @doms = map {
    $_ = Mojo::DOM->new->parse($_);
    say STDERR "dom is $_";
    $_;
} @xml_str;

use File::Path qw(make_path remove_tree);
my $tmp_dir = "$ENV{HOME}/tmp/xmldiff-$$";
make_path($tmp_dir);
chdir($tmp_dir);

use AtExit;
*clean_tmpdir = sub {
    chdir "/";
    remove_tree $tmp_dir;
};
atexit(\&clean_tmpdir);

@ARGV = map { s,.*/,,; $_} @ARGV;

for (1..@ARGV) {
    $_ -= 1;
    write_file($ARGV[$_], $doms[$_]);
}

say STDERR "running $diff_tool @ARGV";

system($diff_tool, @ARGV);
