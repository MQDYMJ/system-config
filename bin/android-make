#!/bin/bash

cd $(lookup-file .repo/..)
function die() {
    echo Error: "$@"
    exit -1
}

if ! test -d .repo -a -e build/envsetup.sh; then
    die "Not an Android repo?"
fi

top_dir=$(pwd)

set -e

if test -L out -a ! -e out; then
    rm out -rf # in case it's a dangling symlink.
fi
if test "$hourly_build_debug" = true; then
    if test -e .patch_applied; then
        echo "Error: pateches applied"
        exit -1;
    else
        echo "Error: patches not applied"
        exit 0;
    fi
fi

test -d .repo -a -e build/envsetup.sh

if test "$ANDROID_MAKE_JOBS"; then
    jobs=$ANDROID_MAKE_JOBS
else
    jobs=$(cat /proc/cpuinfo |grep '^processor'|wc -l) #default
    jobs=$((jobs * 3 / 2))
fi

verbose=
config=
keep=
make_dir=
. ~/system-config/etc/.fix-java-version
TEMP=$(getopt -o vp:d:kj:c: -n $(basename $0) -- "$@")

eval set -- "$TEMP"
while true; do
    case "$1" in
        -k)
            keep=-k
            shift
            ;;
        -c)
            config=$2
            shift 2
            ;;
        -p)
            PATH=$(readlink -f $2):$PATH
            shift 2
            ;;
        -d)
            cd -
            make_dir=$(readlink -f $2)
            cd -
            shift 2
            ;;
        -j)
            jobs=$2
            shift 2
            ;;
        -v)
            verbose=showcommands
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

unset CLASSPATH
cd $top_dir || exit
. build/envsetup.sh >/dev/null 2>&1

if test -z "$config" -a ! -e buildspec.mk; then
    if test "$TARGET_PRODUCT" -a "$TARGET_BUILD_VARIANT"; then
        product=$TARGET_PRODUCT
        variant=$TARGET_BUILD_VARIANT
    else
        products=$(for x in "${LUNCH_MENU_CHOICES[@]}"; do echo ${x%-*}; done)
        product=$(select-args -p "请选择你要编译的产品" -o -- ${products[@]})
        variant=$(select-args -p "请选择你要编译的选项" -o -- userdebug user eng )
    fi
    config=$product-$variant
fi

if test -z "$config"; then
    config=$(
        cat buildspec.mk|perl -ne 'print $1 if /^\s*TARGET_PRODUCT\s*.?=\s*(.*?)\s*$/')-$(
        cat buildspec.mk|perl -ne 'print $1 if /^\s*TARGET_BUILD_VARIANT\s*.?=\s*(.*?)\s*$/')
    echo set the build for "$config"
fi

variant=${config##*-}

if test "$variant" = user -o "$variant" = userdebug -o "$variant" = eng && lunch "$config"; then
    true
else
    config=$(get_build_var TARGET_PRODUCT)-$(get_build_var TARGET_BUILD_VARIANT)
    echo using old config $config
    lunch $config
fi

. ~/system-config/bin/.android-set-outdir

export CCACHE_DIR=$PWD/.repo/.ccache
rm ~/.ccache >/dev/null 2>&1 || true

android-set-product $TARGET_PRODUCT-$TARGET_BUILD_VARIANT # this is for mm to use

export TARGET_PRODUCT=$TARGET_PRODUCT
export TARGET_BUILD_VARIANT=$TARGET_BUILD_VARIANT

if test "$DEBUG" = true; then
    set -x;
fi

test -e buildspec.mk || { echo no buildspec.mk, will exit now; echo please use android-make -c CONFIG, for e.g., aosp_x86-eng; exit; }

do_nice="schedtool -B -n 1 -e ionice -n 1"
if test "$DONT_DO_NICE" = true; then
    do_nice=
fi

exec 9> $OUT_DIR/.android-full-build.lock
(
    time (
        set -e
        if pwd | grep -P -e '\d+-\d+'; then
            echo looks like a rolling back build dir, do not do code reading in it
        else
            touch .for-code-reading
        fi
        echo 'about to lock at '$(date)
        if ! flock -n 9; then
            echo 你的当前安卓代码下已经有其他android-make进程在运行，不可以再次启动一个编译
            echo "你可以用 fuser $OUT_DIR/.android-full-build.lock | xargs ps 命令查看相关进程情况"
            echo "也可以用 fuser -k $OUT_DIR/.android-full-build.lock 命令杀死相关进程"
            echo "接下来将等待 $OUT_DIR/.android-full-build.lock 文件锁被其他进程释放，你可以按下 Ctrl-C 以退出"
            flock 9
        fi
        echo 'lock success! at '$(date)

        result=''
        export PATH=$PWD/$OUT_DIR/host/linux-x86/bin/:$PATH
        echo CLASSPATH is \'$CLASSPATH\'

        if test -e vendor/qcom/proprietary/mm-still/ipl/Android.mk; then
            perl -npe 's,^(\s+\Q$(CPU)\E)$,$1 \\,; s,^(\s+\Q-D__alignx\(x\)=__attribute__\(\(__aligned__\(x\)\)\)\E)$,$1 \\,' -i vendor/qcom/proprietary/mm-still/ipl/Android.mk
        fi

        # need do it again because android-set-product has changed PATH
        . ~/system-config/etc/.fix-java-version

        echo make starts here
        export REALLY_DOING_BUILD=true
        if test $# != 0; then
            if test $# = 1 -a -e ~/system-config/etc/android-make/"$1"; then
                . ~/system-config/etc/android-make/"$1"
            else
                $do_nice make -j$jobs $keep $* $verbose
            fi
        else
            echo PATH is $PATH
            if test "$make_dir"; then
                mmma "$(relative-path "$make_dir" .)" -j$jobs $verbose
            else
                $do_nice make -j$jobs $keep $verbose
            fi

        fi && result=$result'all ok; ' && echo build is successful || true
        echo
        echo "full build result is $result"
        echo
    )
) 2>&1 | tee $OUT_DIR_LONG/build.log
if test $# = 0; then
    cp $OUT_DIR_LONG/build.log $OUT_DIR_LONG/full-build.log
fi

relative-link $OUT_DIR_LONG out || true
if grep -Hn -e 'full build result is' $OUT_DIR_LONG/build.log | grep -e "all ok"; then
    exit 0
else
    cp $OUT_DIR_LONG/build.log $OUT_DIR_LONG/full-build.log.fail
    exit 1
fi
