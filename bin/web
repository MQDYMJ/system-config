#!/usr/bin/env bash
set -e
export EMACS=t

declare comment_doc=$(
    cat <<'EOFe9576f8668e0' | grep -v '#.*org-mode%'
# {%org-mode%}

# {%/org-mode%}
EOFe9576f8668e0
        )

## start code-generator "^\\s *#\\s *"
# generate-getopt -P '?"${comment_doc}"' \
    # pprint-only mmatch-history
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o mph \
                      --long match-history,print-only,help,no-match-history,no-print-only \
                      -n $(basename -- $0) -- "$@")
declare match_history=false
declare print_only=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -m|--match-history|--no-match-history)
            if test "$1" = --no-match-history; then
                match_history=false
            else
                match_history=true
            fi
            shift

            ;;
        -p|--print-only|--no-print-only)
            if test "$1" = --no-print-only; then
                print_only=false
            else
                print_only=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e "${comment_doc}"
            echo
            echo Options and arguments:
            printf %6s '-m, '
            printf %-24s '--[no-]match-history'
            echo
            printf %6s '-p, '
            printf %-24s '--[no-]print-only'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test $# != 0; then
    if test "$1" = +; then
        . .firefox.env
        desc=$(
            input-lock -l "input.web.desc" \
                       select-args --ask-for-input -1 --select-from-history-too -o -p "Please describe $current_url"
            )
        echo "$desc $current_url" >> ~/.cache/system-config/bhj/select-output-line/abbrev.WEB.hist.${UID}
        exit
    fi

    cmd=$(
        perl -e 'use String::ShellQuote;
@ARGV = shell_quote (@ARGV);

$, = " ";
print @ARGV;
' "$@"
       )
else
    cmd=$(select-args --select-from-history-too -m 1000 -O abbrev.WEB)
fi
if test "${print_only}" = true; then
    if test "${match_history}" = true; then
        cmd=$(
            select-output-line -i "${cmd}" -p 'Which old cmd do you want?' --use-file \
                               ~/.cache/system-config/bhj/select-output-line/abbrev.WEB.hist.${UID}
           )
    fi

    echo "${cmd}"
else
    unset EMACS
    echo "${cmd}" >> ~/.cache/system-config/bhj/select-output-line/abbrev.WEB.hist.${UID}
    set -- $cmd
    while test $# -gt 1; do
        shift
    done

    firefox "$1"
fi
