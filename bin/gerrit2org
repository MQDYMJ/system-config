#!/usr/bin/env perl

use strict;

sub debug(@) {
    print STDERR "@_\n";
}

if (system("timeout 1 ping -c 1 172.16.0.9") != 0) {
    exit 0;
}

open(my $gerrit_pipe, "-|", "gerrit -h s query owner:baohaojun is:open; gerrit -h s query reviewer:baohaojun is:open")
    or die "Can't open gerrit pipe";


open(my $gerrit_org, ">", glob("~/src/github/projects/gerrit.org.$$"))
    or die "Can't open gerrit org";

my ($gerrit_id, $gerrit_url, $gerrit_subject, %gerrit_map, %gerrit_id_map);
while (<$gerrit_pipe>) {
    chomp;
    if (s/^\s*subject:\s*//) {
        $gerrit_subject = $_;
        next;
    }

    if (s/^\s*id:\s*//) {
        $gerrit_id = $_;
        next;
    }

    if (s/^\s*url:\s*//) {
        $gerrit_url = $_;
        $gerrit_map{$gerrit_url} = $gerrit_subject;
        $gerrit_id_map{$gerrit_url} = $gerrit_id;
        next;
    }
}

my $ignore_dir = "$ENV{HOME}/.config/system-config/ignored-gerrit-id";
for $gerrit_url (sort keys %gerrit_map) {
    $gerrit_subject = $gerrit_map{$gerrit_url};
    $gerrit_id = $gerrit_id_map{$gerrit_url};

    next if -e "$ignore_dir/$gerrit_id";

    print $gerrit_org <<EOF;
* TODO [#A] $gerrit_subject
  :PROPERTIES:
  :FROM:     $gerrit_url
  :ID:       $gerrit_id
  :END:

EOF

}
close $gerrit_org;

# if (system("diff ~/src/github/projects/mantis.org.$$ ~/src/github/projects/mantis.org -q") != 0) {
#     rename(glob("~/src/github/projects/mantis.org.$$"), glob("~/src/github/projects/mantis.org"));
# } else {
#     debug "No update to mantis.org";
#     unlink("$ENV{HOME}/src/github/projects/mantis.org.$$");
# }

if (system("diff ~/src/github/projects/gerrit.org.$$ ~/src/github/projects/gerrit.org -q") != 0) {
    rename("$ENV{HOME}/src/github/projects/gerrit.org.$$", "$ENV{HOME}/src/github/projects/gerrit.org");
    if (-s "$ENV{HOME}/src/github/projects/gerrit.org") {
        system("bhj-notify gerrit \"You've have got gerrit review requests\"");
    }
} else {
    debug "No update to gerrit";
    unlink "$ENV{HOME}/src/github/projects/gerrit.org.$$";
}
