#!/bin/bash
set -x
set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P uextract-url
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o uh \
                      --long extract-url,help,no-extract-url \
                      -n $(basename -- $0) -- "$@")
declare extract_url=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -u|--extract-url|--no-extract-url)
            if test "$1" = --no-extract-url; then
                extract_url=false
            else
                extract_url=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-u, '
            printf %-24s '--[no-]extract-url'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

exec 2>~/tmp/emacs-get-android-clipboard.log
if test $(basename $0) = emacs-get-android-clipboard; then
    getclip-android|putclip
else
    putclip "$(getphone-android|perl -npe 's/\+86//')"
fi

if test "${extract_url}" = true || [[ "$(sawfish-top-window)" =~ Firefox ]]; then
    old_text=$(getclip)

    new_text=$(extract-urls-from-text "${old_text}" | grep . || true)
    if test "${new_text}"; then
        putclip "${new_text}"
    fi
fi

sawfish-client -e '(call-command (lookup-event-binding (lookup-event "Super-v")))'
