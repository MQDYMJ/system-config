#!/bin/bash


## start code-generator "^\\s *#\\s *"
# generate-getopt s:size ccontinue-transfer
## end code-generator
## start generated code
TEMP=$(getopt -o s:c --long "size:,continue-transfer"  -n $(basename $0) -- "$@")
size=
continue_transfer=false
eval set -- "$TEMP"
while true; do
    case "$1" in
        -s|--size)
            size=$2
            shift 2
            ;;
        -c|--continue-transfer)
            continue_transfer=true
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

## end generated code

if test ! "$size"; then
    size=$(curl -L -I "$1" 2>&1 | grep Content-Length: | pn 2 |tr -d '\r')
    whole_size=$size
    size=$(( (size + 10) / 10 ))
fi

size=$(pretty $size | pn 2)

(
    for x in $(seq 1 10); do
        s=$((size * (x - 1)))
        e=$((size * x - 1))
        if test $((e + 1)) -gt $whole_size; then
            e=$((whole_size - 1))
        fi
        if test "$continue_transfer" = true; then
            touch $(basename $1).$x
            final_size=$(( e + 1 - s ))
            current_size=$(stat -c %s $(basename $1).$x)
            if test "$final_size" != "$current_size"; then
                curl $1 -L -r $((s + current_size))-$e -o - >> $(basename $1).$x&
            fi
        else
            curl $1 -L -r $s-$e -o $(basename $1).$x&
        fi
    done
) 9>~/.cache/system-config/logs/$(basename $0).lock.$$

(
    while true; do
        echo
        if fuser ~/.cache/system-config/logs/$(basename $0).lock.$$; then
            sleep 1
        else
            break
        fi
    done
    for x in $(seq 1 10); do
        cat $(basename $1).$x
        rm $(basename $1).$x >/dev/null 2>&1
    done > $(basename $1)
)

rm ~/.cache/system-config/logs/$(basename $0).lock.$$
