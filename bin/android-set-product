#!/bin/bash

set -e
if test "$SC_DEBUG" = true; then
    set -x
fi
cd $(lookup-file .repo/..)
if test $# != 0; then
    if test "$1" != "${TARGET_PRODUCT}"-"${TARGET_BUILD_VARIANT}"; then
        . build/envsetup.sh
        lunch "$1"
    fi
else
    . build/envsetup.sh >/dev/null 2>&1
    products=$(for x in "${LUNCH_MENU_CHOICES[@]}"; do echo ${x%-*}; done)
    product=$(select-args -p "请选择你要编译的产品" -o -- ${products[@]})
    variant=$(select-args -p "请选择你要编译的选项" -o -- userdebug user eng )
    config=$product-$variant
    lunch "$config"
fi
ccache -M 100G

. ~/system-config/bin/.android-set-outdir
for x in `echo '$TARGET_BUILD_APPS $TARGET_BUILD_TYPE $OUT_DIR $TARGET_BUILD_VARIANT $TARGET_PRODUCT $TARGET_SIMULATOR'|sed -e 's/\\$//g'`; do xval=`eval echo \\$$x`; if test "$xval" != ""; then echo $x\?=`eval echo \\$$x`; fi; done >buildspec.mk.$$
echo "export ANDROID_BUILD_TOP := $PWD" >>buildspec.mk.$$
echo "export TARGET_PRODUCT" >>buildspec.mk.$$
echo 'export KERNEL_HELPER_BHJ:=yes' >> buildspec.mk.$$

if diff buildspec.mk.$$ buildspec.mk -q; then
    rm buildspec.mk.$$
else
    mv buildspec.mk.$$ buildspec.mk
fi

for x in $(echo "
    ANDROID_HOST_OUT
    ANDROID_PRODUCT_OUT
    ANDROID_BUILD_TOP
"
); do
    printf "export %s=%s\n" $x "$(eval echo -n \$$x)"
done | grep -v '=$' > .buildenv.sh.$$

cat <<EOF >> .buildenv.sh.$$
export PATH=$PATH
export ARCH=arm
EOF

mv .buildenv.sh.$$ $OUT_DIR/.buildenv.sh
reset-env
