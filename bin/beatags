#!/bin/bash

set -e
function die() {
    echo Error: "$@"
    exit -1
}


# When called, we must be at the top of the beagrep indexed source folder.

export source_dir=$(readlink -f .)
export db_dir=~/.cache/system-config/for-code-reading/$source_dir

for x in $db_dir/.java-fallback.*; do
    if test "$DOING_FALLBACKS" = true; then
        break;
    fi
    if test -d "$x"; then
        (
            cd -P "$x"
            db_dir=$PWD
            source_dir=${db_dir#*/.cache/for-code-reading}
            cd $source_dir >/dev/null 2>&1
            export DOING_FALLBACKS=true
            beatags "$@" | perl -npe 's,(.*?\s+\S+\s+\d+\s+)(\S+),$1'"$source_dir"'/$2,'
        )
    fi
done

md5sum=$(
    for x in "$@"; do
        echo "$x"
    done | md5sum | pn 1
      )
md5dir=$db_dir/.beatags-cache/${md5sum:0:1}/${md5sum:1:1}
md5file=$md5dir/${md5sum:2}

if test -e "$md5file" -a -z "$UPDATE_TAG_CACHE"; then
    cat "$md5file";
    (
        set -x
        trap '' SIGHUP
        UPDATE_TAG_CACHE=true bash -x beatags "$@"
    ) > ~/.cache/system-config/logs/update-beatags.log 2>&1 &
    exit
fi

## start code-generator "^\\s *#\\s *"
# generate-getopts e:entry iignore_case p:path_pat v:path_reverse w:working_file t:type
## end code-generator
## start generated code
entry=
ignore_case=false
path_pat=
path_reverse=
working_file=
type=
OPTIND=1
while getopts 'e:ip:v:w:t:' opt; do
    case "$opt" in
        e)    entry=$OPTARG;;
        i)    ignore_case=true;;
        p)    path_pat=$OPTARG;;
        v)    path_reverse=$OPTARG;;
        w)    working_file=$OPTARG;;
        t)    type=$OPTARG;;
        *)    echo Usage Error;;
    esac
done
shift $(($OPTIND - 1))

## end generated code


if test ! "$entry"; then
    die "Usage: beatags -e ENTRY [-i]"
fi

quote=-q
if [[ "$entry" =~ \* ]]; then
    quote=
fi

if test -e "$working_file"; then
    echo "$working_file"
else
    beagrep-files -t $quote -s -- "$entry"
fi| grep -v -P -e '[ \t]' |
    if test "$path_pat"; then
        grep -P -e "$path_pat" -i
    else
        cat
    fi|
    if test "$path_reverse"; then
        grep -v -P -e "$path_pat" -i
    elif test -e "$db_dir/.beatags-v"; then
        bash "$db_dir/.beatags-v"
    else
        grep -v dalvik/dx/tests/089-dex-define-object
    fi|
    beatags-timestamp |
    perl -ne '
        BEGIN{
            $source_dir = $ENV{source_dir};
            $source_dir_len = length($source_dir);
        }
        chomp;
        open($tag, "<", $_) or next;
        $file = $_;
        $file =~ s,.*/.cache/for-code-reading/*,/,;
        $file =~ s,.tag$,,;
        if (substr($file, 0, $source_dir_len + 1) eq "$source_dir/") {
            $file = substr($file, $source_dir_len + 1);
        }

        while (<$tag>) {
            s/üìÅ/$file/;
            print;
        }
        close $tag;
    '|
    grep $(if test $ignore_case = true; then echo -i; fi) -P -e "^\\S*?\\b$entry\\s+" |
    if test "$type"; then
        grep -P -e "^\S+\s+($type)\s+\d+"
    else
        cat
    fi | (
        mkdir -p $md5dir
        tee $md5file.$$
        mv $md5file.$$ $md5file
    )
