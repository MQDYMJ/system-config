#!/bin/bash
set -e

mkdir -p ~/src/github
cd ~/src/github

if test -d ~/system-config/.emacs_d/elpa; then
    mkdir -p ~/.emacs.d/
    rsync -av ~/system-config/.emacs_d/elpa ~/.emacs.d/
    (
        cd ~/.emacs.d/elpa
        git init .
        git add .
        git commit -m 'init elpa'
    )
fi || true

need_regenerate_el=false

git_server_prefix=http://github.com/
github_branch=master
if test "$SYSTEM_CONFIG_LOCAL_GIT_PREFIX"; then
    git_server_prefix=${SYSTEM_CONFIG_LOCAL_GIT_PREFIX}
fi

if test "$SYSTEM_CONFIG_LOCAL_BRANCH"; then
    github_branch=${$SYSTEM_CONFIG_LOCAL_BRANCH}
fi

if test -d ~/system-config/src/github/twittering-mode; then
    mkdir -p ~/src/github
    for x in ~/system-config/src/github/*; do
        if test ! -e ~/src/github/$(basename $x); then
            ln -sf $x ~/src/github
            need_regenerate_el=true
        fi
    done
    ln -s ~/src/github/emacs.d/site-lisp ~/.emacs.d/ || true
else
    . ~/system-config/etc/github-projects

    for x in "${github_projects[@]}"; do
        if test ! -e "$x/.git"; then
            git clone ${git_server_prefix}baohaojun/$x -b ${github_branch} $(if test "$SYSTEM_CONFIG_LOCAL_REF"; then echo --reference "$SYSTEM_CONFIG_LOCAL_REF"/$x; fi)
            need_regenerate_el=true
        fi
    done

    for p in "${extra_projects[@]}"; do
        x=$(basename $p)
        if test ! -e "$x/.git"; then
            git clone $p $(if test "$SYSTEM_CONFIG_LOCAL_REF"; then echo --reference "$SYSTEM_CONFIG_LOCAL_REF"/$x; fi)
        fi
    done
    if ! test -d ~/.emacs.d/site-lisp; then
        relative-link emacs.d/site-lisp ~/.emacs.d/
    fi

    if ! test -d ~/.emacs.d/emojis/emojione-v2.2.6-22; then
        mkdir -p ~/.emacs.d/emojis
        relative-link ~/src/github/Wrench/release/emojis/emojione-v2.2.6-22 ~/.emacs.d/emojis -f
    fi
fi

if test "$need_regenerate_el" = true; then
    cd ~/src/github
    cat <<EOF > ~/.config/system-config/emacs.gen.el
(setq load-path
      (nconc (list
$(
for x in */; do
    if test "$(echo $x/*.el)" != "$x/*.el"; then
        printf '"%s"\n' $(up $x)
    fi
done
)
)
             load-path))
EOF
fi

echo OK.
