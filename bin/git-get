#!/bin/bash
set -e
saved_args=("$@")
atexit() {
    ret=$?
    if test $? != 0 && is-jenkins; then
        echo "${saved_args[@]}" | mail-cms -i "git-get failed in $(jenkins-info)"
    fi
    exit $ret
}

trap atexit 0

## start code-generator "^\\s *#\\s *"
# generate-getopt d:dir u:url b:branch r:reference
## end code-generator
## start generated code
TEMP=$(getopt -o u:b:r:d:h \
              --long url:,branch:,reference:,dir:,help \
              -n $(basename -- $0) -- "$@")
url=
branch=
reference=
dir=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -u|--url)
            url=$2
            shift 2
            ;;
        -b|--branch)
            branch=$2
            shift 2
            ;;
        -r|--reference)
            reference=$2
            shift 2
            ;;
        -d|--dir)
            dir=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo
            echo
            echo Options and arguments:
            printf %06s '-b, '
            printf %-24s '--branch=BRANCH'
            echo
            printf %06s '-d, '
            printf %-24s '--dir=DIR'
            echo
            printf %06s '-r, '
            printf %-24s '--reference=REFERENCE'
            echo
            printf %06s '-u, '
            printf %-24s '--url=URL'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done


## end generated code

branch=${branch:-master}


if test -z "$dir" -o -z "$url"; then
    die "Error: Usage $(basename $0) -d LOCAL_DIR -u REMOTE_GIT_URL"
fi

if test ! -d $dir/.git; then
    rm -f $dir
    mkdir -p $dir
    (
        cd $dir
        if ! git clone --single-branch -b $branch $url . $(if test "$reference"; then echo --reference "$reference"; fi); then
            git init .
            git commit -m 'init commit' --allow-empty --author 'qualcomm <someone@qualcomm.com>'
            git push $url HEAD:refs/heads/$branch
            rm .git -rf
            git clone --single-branch -b $branch $url .
        fi
    )
else
    (
        cd $dir
        git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
        git fetch -v origin
        git reset --hard || true
        git clean -xfd || true
        git checkout -B $branch origin/$branch
    )
fi
