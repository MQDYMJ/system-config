#!/bin/bash

if test -z "$GTK_IM_MODULE" -a "$SAVED_GTK_IM_MODULE"; then
    export GTK_IM_MODULE=$SAVED_GTK_IM_MODULE
    export XMODIFIERS=$SAVED_XMODIFIERS
    export XIM=$SAVED_XIM
fi


## start code-generator "^\\s *#\\s *"
# generate-getopt @last c:command w:web '?"jira, GG(gerrit group), GP(gerrit project)"'
## end code-generator
## start generated code
TEMP=$( getopt -o c:w:h \
               --long command:,last,web:,help,no-last \
               -n $(basename -- $0) -- "$@")
declare command=
declare last=false
declare web=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -c|--command)
            command=$2
            shift 2

            ;;
        --last|--no-last)
            if test "$1" = --no-last; then
                last=false
            else
                last=true
            fi
            shift

            ;;
        -w|--web)
            web=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-c, '
            printf %-24s '--command=COMMAND'
            echo
            printf "%06s" " "
            printf %-24s '--[no-]last'
            echo
            printf %06s '-w, '
            printf %-24s '--web=WEB'
            echo "jira, GG(gerrit group), GP(gerrit project)"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if echo $SHELLOPTS | grep -q xtrace; then
    export SHELLOPTS
else
    exec > ~/.cache/system-config/logs/of.log 2>&1
fi

case "$web" in
    jira|JIRA)
        of ${scm_jira_url}browse/$1
        exit
        ;;
    GP|gerrit-project)
        if test -z "$1"; then
            set -- $(repo-project)
        fi
        of ${scm_gerrit_url}#/admin/projects/$1
        exit
        ;;
    GG|gerrit-group)
        of ${scm_gerrit_url}#/admin/groups/$1
        exit
        ;;
    *)
        if [[ $web =~ ^[A-Za-z0-9]+-[0-9]+$ ]]; then
            of ${scm_jira_url}browse/$web
            exit
        fi
        die "Don't know how to do it"
        ;;
    '')
        ;;
esac

if test "$last" = true -a "$1"; then
    (
        cd $(dirname "$1")
        set -- $(basename -- "$1")
        find . -maxdepth 1 -name "*$1*" | xargs stat -c '%Y %n' |
            sort -n|tail -n 1|perl -npe 's/^\d+\s+//'|
            (
                x=$(cat)
                putclip "$(up "$x")" >/dev/null 2>&1&
                echo "$x"
            ) |
            xargs -d \\n ${command:-of}
    )
    exit
fi

set -x

if test $# = 0; then
    set -- "$(xclip -o -selection primary)"
elif test $# = 1; then
    if test -e "$1"; then
        set -- "$(readlink -f "$1")"
    elif [[ $1 =~ ^file:/// ]]; then
        true
    elif test -e "$(lookup-file "$@")"; then
        res=$(lookup-file "$@")
        if test "${res:0:${#PWD}+1}" != "$PWD/" && yes-or-no-p -n "Open $(lookup-file "$@")"; then
            set -- "$(lookup-file "$@")";
        else
            set -- "$(f "$@")"
        fi
    elif ! echo "$@" | grep :// -q; then
        res="$(f "$@")"
        if test -e "$res"; then
            set -- "$res"
        fi
    fi
elif test -e "$1" && [[ $1 =~ \.(png|jpg)$ ]]; then
    for x in "$@"; do ls -l $x; done > /dev/tty
    convert "$@" -append ~/tmp/of.png
    exec of ~/tmp/of.png
else
    set -- "$(f "$@")"
fi

if test "$EMACS"; then
    setsid=setsid
else
    setsid=
fi

if test $# = 1 && echo "${1}" | grep -q -i -P -e "^https?://"; then
    $setsid firefox "$1"&
    exit
fi

if test "${1##*.}" = chm; then
    $setsid ffchm "$@"
elif readlink -m "$1" | grep -P '/Maildir/.*/(cur|new)/'; then
    exec maildir-icedove-view "$(readlink -m "$1")"
    find-or-exec emacs
    $setsid emacsclient -e "(org-open-link-from-string \"$(maildir-get-id "$(readlink -f "$1")")\")"&
else
    $setsid xdg-open "$@"
fi
