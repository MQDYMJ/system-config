#!/bin/bash

set -e

if test -e jc.conf; then
    . jc.conf
fi

me=$(readlink -f $0)
if test ! -e "$me"; then
    me=$(readlink -f "$(which $0)")
    if test ! -e "$me"; then
        die "Can't find out about me"
        exit 1
    fi
fi

abs0=$0
if ! [[ $abs0 =~ ^/ ]]; then
    if [[ $abs0 =~ / ]] && test -e $PWD/$abs0; then
        abs0=$PWD/$abs0
    elif test -e "$(which $0)"; then
        abs0=$(which $0)
    else
        die "Can't find abs path for $0"
    fi
fi

b0=$(basename $0)

if test "${EMACS}" -a $# = 0; then
    nohup setsid bash -c 'set -x; xml=$(emacs-current-file); out-of-emacs bash -x '${b0}' ${xml%.xml} < ${xml}' true </dev/null > ~/tmp/$b0.log 2>&1&
    exit
fi


function jc-create-job() {
    task_name=${1%.xml}

    if [[ $task_name =~ jobs/.*/config$ ]]; then
        task_name=$(basename $(dirname "$task_name"))
    fi

    if test -e $task_name.xml; then
        xml=$task_name.xml
    elif test -e jobs/$task_name/config.xml; then
        xml=jobs/$task_name/config.xml
    else
        die "can't find $task_name.xml"
    fi

    if cat $xml | jc update-job $(basename $task_name) >/dev/null 2>&1; then
        (
            of ${scm_jenkins_url}job/$(basename ${task_name}) >/dev/null 2>&1
        )&
        exit
    else
        for n in $(seq 1 10); do
            cat $xml | jc create-job $(basename $task_name) && exit || true
            cat $xml | jc update-job $(basename $task_name) && exit || true
            sleep 1
        done
    fi
}
echo jc-create-or-update "$1"
jc-create-job "$1"
