#!/bin/bash

set -e


## start code-generator "^\\s *#\\s *"
# generate-getopt @:jenkins-server
## end code-generator
## start generated code
TEMP=$( getopt -o h \
               --long jenkins-server:,help \
               -n $(basename -- $0) -- "$@")
jenkins_server=
eval set -- "$TEMP"
while true; do
    case "$1" in

        --jenkins-server)
            jenkins_server=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--jenkins-server=JENKINS_SERVER'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done


## end generated code

function jc() {
    command jc --jenkins-server "$jenkins_server" "$@"
}


function jc-create-job() {
    task_name=${1%.xml}

    if [[ $task_name =~ jobs/.*/config$ ]]; then
        task_name=$(basename $(dirname "$task_name"))
    fi

    if test -e $task_name.xml; then
        xml=$task_name.xml
    elif test -e jobs/$task_name/config.xml; then
        xml=jobs/$task_name/config.xml
    else
        die "can't find $task_name.xml"
    fi

    if cat $xml | jc update-job $(basename $task_name) >/dev/null 2>&1; then
        exit
    else
        for n in $(seq 1 10); do
            cat $xml | jc create-job $(basename $task_name) && exit || true
            cat $xml | jc update-job $(basename $task_name) && exit || true
            sleep 1
        done
    fi
}
echo jc-create-or-update "$1"
jc-create-job "$1"
