#!/bin/bash

set -e

if test -e jc.conf; then
    . jc.conf
fi

me=$(readlink -f $0)
if test ! -e "$me"; then
    me=$(readlink -f "$(which $0)")
    if test ! -e "$me"; then
        die "Can't find out about me"
        exit 1
    fi
fi

abs0=$0
if ! [[ $abs0 =~ ^/ ]]; then
    if [[ $abs0 =~ / ]] && test -e $PWD/$abs0; then
        abs0=$PWD/$abs0
    elif test -e "$(which $0)"; then
        abs0=$(which $0)
    else
        die "Can't find abs path for $0"
    fi
fi

b0=$(basename $0)

if test "${EMACS}" -a $# = 0; then
    nohup setsid bash -c 'set -x; xml=$(emacs-current-file); out-of-emacs bash -x '${b0}' ${xml%.xml} < ${xml}' true </dev/null > ~/tmp/$b0.log 2>&1&
    exit
fi


function jc-create-job() {
    cd "$(dirname "$1")"

    local task=${1%.xml}
    task=$(basename "$task")


    rm $task.before-update.xml -f
    if ! jc get-job-for-edit -t $task -o $task.before-update.xml 2>&1; then
        bhj-notify jc "Can't get-job: $task"
        exit 1
    fi

    if ! diff -w $task.before-update.xml $task.before-edit.xml; then
        meld $task.before-update.xml $task.before-edit.xml
        if EMACS=t yes-or-no-p "Do you want to merge with meld?"; then
            meld $task.xml $task.before-update.xml
            if ! EMACS=t yes-or-no-p "Is the xml correctly updated?"; then
                bhj-notify jc "Can't update the xml, please retry"
                exit 1
            fi
        fi
    fi

    (
        if cat $task.xml | jc update-job $task >/dev/null 2>&1; then
            exit
        else
            cat $task.xml | jc create-job $task
        fi
    )
    (
        nohup firefox ${scm_jenkins_url}job/${task} >/dev/null 2>&1
    )&
    jc get-job-for-edit -t "$task" --extra-save "$task.before-edit.xml"
}
echo jc-create-or-update "$1"
jc-create-job "$1"
