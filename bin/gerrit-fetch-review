#!/bin/bash
set -e


## start code-generator "^\\s *#\\s *"
# generate-getopt r:remote h:GERRIT-HOST
## end code-generator
## start generated code
TEMP=$(getopt -o h:r:h \
              --long GERRIT-HOST:,remote:,help \
              -n $(basename -- $0) -- "$@")
GERRIT_HOST=
remote=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -h|--GERRIT-HOST)
            GERRIT_HOST=$2
            shift 2
            ;;
        -r|--remote)
            remote=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo
            echo
            echo Options and arguments:
            printf %06s '-h, '
            printf %-24s '--GERRIT-HOST=GERRIT_HOST'
            echo
            printf %06s '-r, '
            printf %-24s '--remote=REMOTE'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

## end generated code

export GERRIT_HOST

export REPO_REMOTE=$remote

tmpf=/tmp/$(basename $0).$$
if test $# = 1 -a "${1:0:4}" = http; then
    if echo "$1" |grep -q "/\d+/\d+$" -P; then
        set -- $(echo "$1"|perl -npe 's,.*/(\d+)/\d+$,$1,')
    else
        set -- "$(basename "$1")"
    fi
fi


gerrit query "$@" --current-patch-set > $tmpf

function die() {
    echo "$@"
    exit -1
}


export PROJECT=$(cat $tmpf|grep 'project: '|pn 2)

git_dir=$(my-rfa 'if [[ $PROJECT =~ $(repo-project)$ ]]; then pwd; fi')

if test -n "$git_dir"; then
    cd $(lookup-file .repo/..) || die repo not found.
    cd $git_dir || die "$git_dir: cd failed"
fi
ref=$(cat $tmpf|grep 'ref: '|pn 2|tail -n 1)
git fetch $(repo-remote-url $remote) $ref
if test $(basename $0) = gerrit-checkout-review; then
    git checkout FETCH_HEAD
fi
