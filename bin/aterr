#!/bin/bash

set -e
set -o errtrace
if test "$#" = 0; then
    trap - ERR
    return
fi

## start code-generator "^\\s *#\\s *"
# generate-getopt -p aterr -P i:ignored-errno=0 '?"设置某些错误代码不处理。在多重 aterr 时慎用"' \
    # @die=true '?"允许用 --no-die 设置不要抛出异常。在多重 aterr 时慎用。"'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o i:h \
                      --long die,ignored-errno:,help,no-die \
                      -n $(basename -- $0) -- "$@")
declare aterr_die=true
declare aterr_ignored_errno=0
eval set -- "$TEMP"
while true; do
    case "$1" in

        --die|--no-die)
            if test "$1" = --no-die; then
                aterr_die=false
            else
                aterr_die=true
            fi
            shift

            ;;
        -i|--ignored-errno)
            aterr_ignored_errno=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--[no-]die'
            echo "允许用 --no-die 设置不要抛出异常。在多重 aterr 时慎用。"
            printf %06s '-i, '
            printf %-24s '--ignored-errno=IGNORED_ERRNO'
            echo
            printf "%30s" ""
            echo "设置某些错误代码不处理。在多重 aterr 时慎用"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code
export aterr_ignored_errno
export aterr_die

sc_aterr_number=${sc_aterr_number:-0}
((sc_aterr_number++)) || true

function aterr_non_0_exit() {
    return $?
}

. atexit aterr_non_0_exit

function setup-aterr() {
    aterr_args=(
        "$@"
    )

    eval "$(
cat <<'EOF26ed439643f8' | . .replace-%% --
# {%sh-mode%}
sc_aterr_args_[%sc_aterr_number%]=(
    "$@"
)

sc_aterr_die_[%sc_aterr_number%]=[%aterr_die%]
sc_aterr_ignored_errno_[%sc_aterr_number%]=[%aterr_ignored_errno%]

function sc_aterr_[%sc_aterr_number%]() {
    local aterr_ret=${aterr_ret:-$?}
    if test "$aterr_ret" = 0; then
        return 0
    fi

    if test "$aterr_ret" != "${sc_aterr_ignored_errno_[%sc_aterr_number%]}"; then
        (
            # use () so that we don't change aterr_ret
            "${sc_aterr_args_[%sc_aterr_number%][@]}" ||
                true # don't exit early for --no-die
        )
    fi

    local sc_n=[%sc_aterr_number%]
    if test "${sc_n}" -gt 1; then
        ((sc_n--)) || true
        eval sc_aterr_${sc_n} || true
    fi

    if test "${sc_aterr_die_[%sc_aterr_number%]}" = true; then
        return $aterr_ret
    else
        exit 0
    fi
}


trap sc_aterr_[%sc_aterr_number%] ERR
# {%/sh-mode%}
EOF26ed439643f8
)"

}

setup-aterr "$@"
