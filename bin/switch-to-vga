#!/bin/bash


## start code-generator "^\\s *#\\s *"
# generate-getopt r:res v:vga @:hdmi
## end code-generator
## start generated code
TEMP=$(getopt -o r:v:h \
              --long hdmi:,res:,vga:,help \
              -n $(basename -- $0) -- "$@")
hdmi=
res=
vga=
eval set -- "$TEMP"
while true; do
    case "$1" in

        --hdmi)
            hdmi=$2
            shift 2
            ;;
        -r|--res)
            res=$2
            shift 2
            ;;
        -v|--vga)
            vga=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo
            echo
            echo Options and arguments:
            printf "%06s" " "
            printf %-24s '--hdmi=HDMI'
            echo
            printf %06s '-r, '
            printf %-24s '--res=RES'
            echo
            printf %06s '-v, '
            printf %-24s '--vga=VGA'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done


## end generated code


xrandr_out=$(xrandr | grep -v ' disconnected ')
lvds=$(echo "$xrandr_out" | grep '^LVDS' | pn 1)
if test -z "$lvds"; then
    lvds=$(echo "$xrandr_out" | grep -P '^eDP-?1' | pn 1)
fi

if test -z "$vga"; then
    vga=$(echo "$xrandr_out" | grep '^VGA' | pn 1)
fi
if test -z "$hdmi"; then
    hdmi=$(echo "$xrandr_out" | grep '^HDMI' | pn 1)
fi
if test -z "$hdmi"; then
    hdmi=$(echo "$xrandr_out" | grep '^DP-?1' -P | pn 1)
fi
if echo "$xrandr_out" | grep '^VGA\S* disconnected' -P || test -z "$vga"; then
    vga=$hdmi
fi

if test $(basename $0) = switch-to-vga; then
    xrandr --output $lvds --auto --below $vga
    xrandr --output $vga --auto
elif test $(basename $0) = switch-to-vga-alone; then
    xrandr --output $lvds --off
    xrandr --output $hdmi --off
    xrandr --output $vga --auto
elif test $(basename $0) = switch-to-hdmi-and-laptop; then
    touch /tmp/bhj-notify-not-working
    xrandr --output $lvds --auto --below $hdmi
    xrandr --output $hdmi --auto
    xrandr --output $lvds --auto --below $hdmi
    xrandr --output $hdmi --auto
elif test $(basename $0) = switch-to-hdmi; then
    xrandr --output $lvds --off
    xrandr --output $vga --off
    xrandr --output $hdmi --auto
elif test $(basename $0) = switch-to-laptop; then
    xrandr --output $lvds --auto
    xrandr --output $hdmi --off
    xrandr --output $vga --off
else # both display

    (
        set +x
        newmode=$(cvt 1360 768 | perl -ne 's/"//g; print $'\'' if m/^Modeline /')
        xrandr --newmode $newmode
        xrandr --addmode "$hdmi" ${newmode%% *}
        xrandr --addmode "$vga" ${newmode%% *}
    )

    res=$(
        xrandr |
            pn 1 |
            uniq |
            grep -P '^\d'|
            sort -n  -r |
            perl -e '
            @x = <>;
            $last = 0;
            for $res (@x) {
                $res =~ s/_.*//;
                if ($res eq $last) {
                    print $last;
                    last;
                }
                $last = $res
            }'
       )

    xrandr --output $lvds --mode $(xrandr |perl -ne "print if m/\Q$lvds\E.*connected/ .. (m/connected/ and not m/\Q$lvds\E/)" |pn 1 | grep $res|head -n 1) --same-as $vga
    xrandr --output $vga --mode $(xrandr |perl -ne "print if m/\Q$vga\E.*connected/ .. (m/connected/ and not m/\Q$vga\E/)" |pn 1 | grep $res|head -n 1)
fi

if test $(basename $0) = switch-to-both-display; then
    sawfish-client -e '(bind-keys window-keymap "Super-F1" '\''(system "sawfish-force-maximize&"))'
else
    sawfish-client -e '(bind-keys window-keymap "Super-F1" '\''maximize-window-toggle)'
fi >/dev/null 2>&1

sawfish-re-maximize >/dev/null 2>&1
