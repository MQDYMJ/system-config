#!/bin/bash

set -e

function die() {
    echo Error: "$@"
    exit -1
}

if test ! "$ANDROID_SERIAL"; then
    export ANDROID_SERIAL=$(select-output-line my-adb devices?|pn 1)
fi


xml=rawprogram_unsparse.xml
if test ! -e "$xml"; then
    if test -e "sparse_images/$xml"; then
        xml=sparse_images/$xml
    else
        die "can't find $xml"
    fi
fi

my-adb -r id | grep 'uid=0\b'
ssh-to-phone echo hello

function update-partition() {
    size=$(stat -c %s $file)
    echo $file $size
    my-adb "dd if=\$(echo /dev/block/platform/*/by-name/$part) of=/data/$file.x"
    my-adb pull /data/$file.x ~/tmp
    bindiff.py ~/tmp/$file.x $file
}

function update-partition() {
    if test $(basename $file) = boot.img; then
        if test $(my-adb getprop ro.debuggable) = 0; then
            adb-push -d $file /data
        else
            adb-push $file /data
        fi
    else
        my-adb push $file /data
    fi

    my-adb "dd if=/data/$file of=\$(echo /dev/block/platform/*/by-name/$part) && echo yes$$" | grep yes$$
}

xmlstarlet sel -t -m //program -v \@filename -o ' ' -v @label -n $xml|grep -v '^ ' |grep -v '_\d+' -P|perl -npe 'END{print "done done\n"}'|
    while read file part; do
        if test $part = PrimaryGPT -o $part = BackupGPT -o $part = udisk; then
            continue
        fi
        if test $part = done; then
            break
        fi
        # update-partition $file $part || exit 5
    done&


export tmpPostfix=$$
sparse-unsparse.xml -p system -o ~/tmp/system-$tmpPostfix.img.2

mv ~/tmp/system-$tmpPostfix.img.2 ~/tmp/system-$tmpPostfix.img
mkdir -p ~/tmp/system-$tmpPostfix/system
cd ~/tmp/system-$tmpPostfix
sudo umount system >/dev/null 2>&1 || true
sudo umount SYSTEM >/dev/null 2>&1 || true
sudo mount -o loop ../system-$tmpPostfix.img system

cd system
echo doing rsync in $(pwd)
my-adb remount
my-adb stop

sudo rsync . root@phone:/system -av --delete-before --exclude media/app --delete-excluded
if test -d media/app; then
    my-adb push media/app /system/media/app
fi
sudo find ../system -type l -prune -o -print |sort |sudo xargs ls -Zd |grep -v 'u:object_r:system_file:s0'|perl -npe 's/^/chcon /' |tee ../system.chcon
my-adb push ../system.chcon /data/
my-adb 'cd /system; bash -x /data/system.chcon'
cd ..
sudo umount system
oldpwd=$PWD
cd ..
rm $oldpwd -rf
set -x
wait
echo ok
