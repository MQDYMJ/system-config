#!/bin/bash

set -e

function die() {
    echo Error: "$@"
    exit -1
}

if test ! "$ANDROID_SERIAL"; then
    export ANDROID_SERIAL=$(select-output-line my-adb devices?|pn 1)
fi

## start code-generator "^\\s *#\\s *"
# generate-getopts  Sno_system
## end code-generator
## start generated code
no_system=false
OPTIND=1
while getopts 'S' opt; do
    case "$opt" in
        S)    no_system=true;;
        *)    echo Usage Error; exit 2;;
    esac
done
shift $(($OPTIND - 1))

## end generated code


xml=rawprogram_unsparse.xml
if test ! -e "$xml"; then
    if test -e rawprogram0_unsparse.xml; then
        xml=rawprogram0_unsparse.xml
    elif test -e "sparse_images/$xml"; then
        xml=sparse_images/$xml
    else
        die "can't find $xml"
    fi
fi

my-adb -r id | grep 'uid=0\b'

if test $no_system = false; then
    if ! my-adb 'test -d /data/debian/ && echo -n hello && echo '$$ | grep hello$$ -q; then
        die "Debian not found on this phone, can't use rsync"
    fi
    ssh-to-phone echo hello$$ | grep hello$$
fi

# this is for debugging
function update-partition() {
    size=$(stat -c %s $file)
    echo $file $size
    my-adb "dd if=\$(echo /dev/block/platform/*/by-name/$part) of=/data/$file.x"
    my-adb pull /data/$file.x ~/tmp
    bindiff.py ~/tmp/$file.x $file
}

function update-partition() {
    if test $(basename $file) = boot.img; then
        adb-push -d $file /data
    else
        my-adb push $file /data
    fi

    my-adb "dd if=/data/$file of=\$(echo /dev/block/platform/*/by-name/$part) && echo yes$$" | grep yes$$
}

if test $(basename $0) = android-rsync-phone-diff; then
    function update-partition() {
        md5sum=$(md5sum $file | pn 1)
        size=$(stat -c %s $file)
        remote_md5sum=$(my-adb "dd if=\$(echo /dev/block/platform/*/by-name/$part) bs=$size count=1 2>/dev/null | md5sum" | pn 1)
        if test "$md5sum" != $remote_md5sum; then
            die "Not the same md5 for $file on $part: $remote_md5sum"
        fi
    }
fi

function update-non-system-partitions() {
    xmlstarlet sel -t -m //program -v \@filename -o ' ' -v @label -n $xml|grep -v '^ ' |grep -v '_\d+' -P|perl -npe 'END{print "done done\n"}'|
        while read file part; do
            do_continue=false;
            for part_comp in PrimaryGPT BackupGPT udisk alterable modemst1 modemst2 persist fsg; do
                if test $part = $part_comp; then
                    do_continue=true
                    break
                fi
            done
            if test $do_continue = true; then
                continue
            fi
            if test $part = done; then
                break
            fi
            echo doing $file to $part
            update-partition $file $part || exit 5
        done
}

if test $(basename $0) = android-rsync-phone-diff; then
    update-non-system-partitions
elif test $no_system = false; then
    update-non-system-partitions&
else
    update-non-system-partitions
    exit
fi

export tmpPostfix=$$
sparse-unsparse.xml -p system -o ~/tmp/system-$tmpPostfix.img.2 $(readlink -f $xml)

mv ~/tmp/system-$tmpPostfix.img.2 ~/tmp/system-$tmpPostfix.img
mkdir -p ~/tmp/system-$tmpPostfix/system
cd ~/tmp/system-$tmpPostfix
sudo umount system >/dev/null 2>&1 || true
sudo umount SYSTEM >/dev/null 2>&1 || true
sudo mount -o loop ../system-$tmpPostfix.img system

if test $(basename $0) = android-rsync-phone-diff; then
    sudo find system -type f | xargs sudo md5sum | sort > local.txt
    my-adb 'cd /; find system -type f | xargs md5sum | sort > data/adb.txt'
    adb pull /data/adb.txt
    diff adb.txt local.txt || true
    exit
fi

cd system
echo doing rsync in $(pwd)
my-adb remount
my-adb stop
if my-adb "test -e /system/framework/com.google.android.maps.jar && echo -n yes && echo $$" | grep yes$$ -q; then
    for x in $(find ~/src/github/private-config/bin/gapps-system/ -type f); do
        dest=${x#*/gapps-system/}
        sudo cp $x $dest
    done
fi
sudo rsync . root@phone:/system -av --delete-before --exclude media/app --delete-excluded
sudo find ../system -type l -prune -o -print |sort |sudo xargs ls -Zd |grep -v 'u:object_r:system_file:s0\|\?'|perl -npe 's/^/chcon /' |tee ../system.chcon
my-adb push ../system.chcon /data/
my-adb 'cd /system; bash -x /data/system.chcon'
cd ..
sudo umount system
cd ..
sudo rm -rf ~/tmp/system-$tmpPostfix.img ~/tmp/system-$tmpPostfix
set -x
wait
echo ok
