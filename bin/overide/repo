#!/bin/bash
set -e
if test "$SYSTEM_CONFIG_INITED" != true; then
    . ~/system-config/.bashrc
fi

if [[ $PWD =~ /\.repo($|/) ]]; then
    cd $(lookup-file .repo)/..
fi

if test "$1" = init; then
    if is-jenkins; then
        set -- "$@" -g all
    fi
    if test -e .repo/manifest.xml; then
        xmlstarlet sel -t -m //copyfile -v @dest -n .repo/manifest.xml|xargs rm -f
    fi || true
    if test -e .repo -a ! -e .repo/manifest.xml; then
        rm -f .repo/manifest.xml
    fi
    saved_args=()
    should_cd=false
    build_dir=
    while test "$1"; do
        if [[ "$1" =~ ^\!.*\! ]]; then
            build_dir=$HOME/jw/$(echo "$1" | perl -npe 's/!(.*)!.*/$1/')
            should_cd=true
        fi
        saved_args=("${saved_args[@]}" "${1#\!*\!}")
        shift
    done
    set -- "${saved_args[@]}"
    if test "$should_cd" = true; then
        mkdir -p $build_dir
        rm -f ./.true_build_dir .repo
        relative-link $build_dir ./.true_build_dir
        relative-link $build_dir/.repo ./
        cd $build_dir
    fi
elif test -d ./.true_build_dir; then
    cd "$(readlink -f ./.true_build_dir)"
fi

if is-jenkins; then
    set -x
    if test "$1" = init; then
        scm check-df
    fi
    if test "$1" = init -a -d .repo/manifests/.git; then
        (
            cd .repo/manifests/
            if test "$(git config repo.depth)" = 1; then
                die "Can't do repo with depth=1 in jenkins task, will lock up gerrit"
            fi
        )
        my-rfa "git clean -xfd; git reset --hard" || true
        echo "will now do repo init, but no sync yet." > .repo/grep-errors.txt
        (
            cd .repo/manifests
            git reset --hard
            git clean -xfd
            find . -type f -name '*.xml'|xargs touch /dev/null
        )
        if (
            cd .repo/manifests/
            git tag 2>&1 | grep -q 'does not point to a valid object'
        ); then
            mail-cms "Your repo manifest has 'does not point to a valid object' errors: $(jenkins-info)"
            rm .repo/manifests .repo/manifests.git .repo/manifest.xml -rf
        fi
    fi
fi

if test "$1" = init; then
    (
        if test -d .repo; then
            cd .repo
            rm repo-paths repo_info.pl -f
        fi
    ) || true
fi

if test "$1" = sync -a "$(arg1-arg2 -- -h "$@")" = -h -a "$(arg1-arg2 -- --help "$@")" = --help; then
    set -- "$@" --no-tags
    if grep -e --force-sync .repo/repo/subcmds/sync.py >/dev/null 2>&1; then
        set -- "$@" --force-sync
    fi

    if is-jenkins && test -e ~/src/github/smartcm/scm-helpers/.maybe-remove-oem-release; then
        . ~/src/github/smartcm/scm-helpers/.maybe-remove-oem-release
    fi

    if time ~/system-config/bin/repo "$@"; then
        if option-included -n "$@"; then
            true
        elif is-jenkins; then
            (my-rfa 'git config remote.$(repo-remote).tagopt --no-tags')
        else
            (my-rfa 'git config remote.$(repo-remote).tagopt --no-tags' >/dev/null 2>&1&)
        fi || true
    elif is-jenkins && test "$REDO_REPO_SYNC" != true; then
        export REDO_REPO_SYNC=true
        (
            (
                cd $(lookup-file -e .repo/manifests)
                if test "$(git config repo.mirror)" = true; then
                    mail-cms "Jenkins mirror repo sync failed for $(jenkins-info)"
                    exit 1
                fi
            )
            cd $(lookup-file -e .repo/..)
            rm * -rf
            (
                cd .repo
                rm project-objects/ projects/ -rf
            )
            mail-cms "Jenkins repo sync failed for $JOB_NAME, will remove all and try again"
            ~/system-config/bin/repo "$@"
        )
    fi
    if is-jenkins; then
        echo "repo sync completed" >> .repo/grep-errors.txt
        (
            cd .repo/project-objects
            du=$(
                du -s . | pn 1
              )
            if test "$du" -gt 10000000; then
                mail-cms "jenkins repo space is a bit too large $du(K), check mirror setting: $(jenkins-info)"
            fi
        )&
    fi
    exit
else
    if ~/system-config/bin/repo "$@"; then
        exit 0
    else
        ret=$?
        if test "$1" = init -a -e ".repo/local_manifests"; then
            echo 1>&2 "Warning: you have local_manifest set, might cause error"
        fi
        exit $ret
    fi
fi
