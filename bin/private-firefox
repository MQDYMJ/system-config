#!/bin/bash

## start code-generator "^\\s *#\\s *"
# generate-getopt -P rrsync i:private-instance=1
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o i:rh \
                      --long private-instance:,rsync,help,no-rsync \
                      -n $(basename -- $0) -- "$@")
declare private_instance=1
declare rsync=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -i|--private-instance)
            private_instance=$2
            shift 2

            ;;
        -r|--rsync|--no-rsync)
            if test "$1" = --no-rsync; then
                rsync=false
            else
                rsync=true
            fi
            shift

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-i, '
            printf %-24s '--private-instance=PRIVATE_INSTANCE'
            echo
            printf %06s '-r, '
            printf %-24s '--[no-]rsync'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

private_dir=~/.cache/private-firefox-${private_instance}
mkdir -p ${private_dir} ${private_dir}/.cache/system-config/logs/ ${private_dir}/external

if test ! -d ${private_dir}/.mozilla -o "$rsync" = true; then
    rsync ~/.mozilla ${private_dir} -av --delete
    rsync ~/external/firefox ${private_dir}/external -av --delete
    rsync ~/.local-config/etc/firefox-icons/* ${private_dir}/external/firefox/browser/chrome/icons/default -av
fi

export HOME=${private_dir}

. nobrew --

cd $HOME
dbus_pid=$(get-pid-env -p dbus.daemon -e "^HOME=$PWD" | pn 1 | head -n 1)
if test "$dbus_pid"; then
    dbus_env=$(
        get-pid-env -p $dbus_pid -e "^DBUS_SESSION_BUS_ADDRESS=" | pn 2
            )
    bhj-notify dbus "Got dbus $dbus_env from $dbus_pid"
else
    dbus_env=$(
        dbus-launch > /tmp/private-firefox.$$
        cat /tmp/private-firefox.$$
        rm -f /tmp/private-firefox.$$
            )
    bhj-notify dbus "No running dbus!"
fi

if test "$dbus_env"; then
    eval "$dbus_env"
fi
export DBUS_SESSION_BUS_ADDRESS

if test $# != 0; then
    log running $* in $HOME
    "$@"
    exit
fi

for pid in $(
                sawfish-client -e "$(
cat <<'EOF9cacf490bebf'
; {%sawfish-mode%}
(mapcar
 (lambda (w)
   (let ((class (bhj-window-class w)))
     (when (or (string-equal class "Firefox")
               (string-equal class "Firefox-esr"))
       (window-pid w))))
 (managed-windows))
; {%/sawfish-mode%}
EOF9cacf490bebf

)" | tr -d '()' | tr ' ' '\n' | sort -u

            ); do
    log "checking $pid"
    if [[ $pid =~ ^[0-9]+$ ]] && cat /proc/$pid/environ|tr '\0' '\n' | grep "^HOME=${private_dir}" -q; then
        wanted_pid=$pid
        log "We want to activate $wanted_pid"
        sawfish-client -e "$(
cat <<'EOFd56e460f1481' | . .replace-%% --
; {%sawfish-mode%}
(let ((first nil))
  (mapc
   (lambda (w)
     (when (and (not first)
                (= (window-pid w) [%wanted-pid%]))
       (bhj-activate-window w)
       (setq first t)))
   (managed-windows)))
; {%/sawfish-mode%}
EOFd56e460f1481

)"
        exit
    fi
done

(
    ibus-daemon -x -d
    sleep 3
    firefox --ProfileManager -new-instance
)&
