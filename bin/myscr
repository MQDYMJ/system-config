#!/bin/bash

## start code-generator "^\\s *#\\s *"
# generate-getopts wwait-exit n:window-name s:session-name S:start-cmd ddebug
## end code-generator
## start generated code

session_name=
start_cmd=
wait_exit=false
debug=false
window_name=
OPTIND=1
while getopts "s:S:wdn:h" opt; do
    case "$opt" in

        s) session_name=$OPTARG ;;
        S) start_cmd=$OPTARG ;;
        w) wait_exit=true ;;
        d) debug=true ;;
        n) window_name=$OPTARG ;;
        h)
            echo
            echo
            printf %06s%s '-d ' 'debug'
            printf %-24s ''
            echo ''
            printf %06s%s '-s ' 'session-name'
            printf %-24s 'SESSION_NAME'
            echo ''
            printf %06s%s '-S ' 'start-cmd'
            printf %-24s 'START_CMD'
            echo ''
            printf %06s%s '-w ' 'wait-exit'
            printf %-24s ''
            echo ''
            printf %06s%s '-n ' 'window-name'
            printf %-24s 'WINDOW_NAME'
            echo ''
            shift
            exit 0
            ;;
        *)
            echo
            echo
            printf %06s%s '-d ' 'debug'
            printf %-24s ''
            echo ''
            printf %06s%s '-s ' 'session-name'
            printf %-24s 'SESSION_NAME'
            echo ''
            printf %06s%s '-S ' 'start-cmd'
            printf %-24s 'START_CMD'
            echo ''
            printf %06s%s '-w ' 'wait-exit'
            printf %-24s ''
            echo ''
            printf %06s%s '-n ' 'window-name'
            printf %-24s 'WINDOW_NAME'
            echo ''
            exit 2
            ;;
    esac
done

shift $((OPTIND - 1))

## end generated code

if test "$window_name"; then
    export SCREEN_TITLE=$window_name
fi

oldpwd=$PWD
cd

unset ANDROID_SERIAL
export SCREEN_SESSION_PID=$$

echo shell is $SHELL > ~/.cache/system-config/logs/myscr.log
if test -z "$SHELL" -o "$SHELL" = /bin/sh && test -e /bin/bash; then
    export SHELL=/bin/bash
fi

if test "$USER" = bhj && test $# = 0 || test $# = 1 -a "$1" = first; then
    . ~/system-config/.bashrc-ssh-agent
fi

if test -x /opt/local/bin/bash; then
    export SHELL=/opt/local/bin/bash;
fi

. ~/system-config/.profile
#. /etc/bash_completion

if test -z "$session_name"; then
    if test "$1" != first; then
        set -- first "$@"
    fi
    session_name=$1
    shift
fi

screen -wipe
if screen -list|grep $session_name; then
    if test "$#" = 1 && [[ $1 =~ " " ]]; then
        set -- bash -c "$1"
    fi

    if test $# != 0; then
        (
            if echo $SHELLOPTS | grep -q xtrace; then
                echo 'set -x;'
            fi

            if test "$debug" = false; then
                if test "$wait_exit" = true; then
                    echo . atexit rm /tmp/screen-exec.$$
                else
                    echo rm /tmp/screen-exec.$$
                fi
            fi

            echo . ~/system-config/bin/set-ssh-agent
            printf "cd %q;" "$oldpwd"
            echo export SCREEN_TITLE=$SCREEN_TITLE
            for x in "$@"; do
                printf "%q " "$x"
            done
        ) > /tmp/screen-exec.$$

        find-or-exec konsole >/dev/null 2>&1 || true
        if test -z "$SCREEN_TITLE"; then
            SCREEN_TITLE=bash
        fi
        screen -X -S $session_name screen -t "$SCREEN_TITLE" bash /tmp/screen-exec.$$ >/dev/null 2>&1&
        if test "$wait_exit" = true; then
            while test -e /tmp/screen-exec.$$; do
                sleep 2
            done
        fi
        exit
    fi
    exec screen -h 100000 -x -r $session_name -t $session_name -s $SHELL $start_cmd "$@"
else
    exec screen -h 100000 -S $session_name -t $session_name -s $SHELL $start_cmd "$@"
fi
