#!/bin/bash

set -e
function die() {
    echo Error: "$@"
    exit -1
}

if echo $SHELLOPTS | grep -q xtrace; then
    export SHELLOPTS
fi

if test $# = 0 || test "$#" = 2 -a "$1" = -F -a "$2" = -T; then
    if test "$#" = 0; then
        function remove-remotes() {
            perl -npe 's!remotes/.*?/!!'
        }
    else
        function remove-remotes() {
            perl -npe 's!remotes/!!'
        }
    fi

    set -- -f $(if test -d bionic; then cd bionic; fi; git-choose-branch -p from|remove-remotes) -t \
        $(if test -d bionic; then cd bionic; fi; git-choose-branch -p to|remove-remotes) "$@"
fi


local_from=false
local_to=false
TEMP=$(getopt -o TFf:t:r: --long from:to:remote: -n $(basename $0) -- "$@")
remote=
eval set -- "$TEMP"
while true; do
    case "$1" in
        -f|--from)
            from=$2
            shift 2
            ;;
        -t|--to)
            to=$2
            shift 2
            ;;
        -r|--remote)
            remote=$2
            shift 2
            ;;
        -F)
            local_from=true;
            shift
            ;;
        -T)
            local_to=true;
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

if test -z "$from" -o -z "$to"; then
    if test -e .git; then
        export from=$(git-choose-branch -p from)
        export to=$(git-choose-branch -p to)
        local_from=true
        local_to=true
    else
        die "Error: Usage $(basename $0) -f FROM -t TO"
    fi
fi

if test $local_from = false -a "$remote"; then
    from=$remote/$from
fi

if test $local_to = false -a "$remote"; then
    to=$remote/$to
fi
export from
export to
export remote
export local_from
export local_to

my-rfa '
    if test "$DEBUG" = true; then
        set -x
    fi
    TOP=$ANDROID_TOP;
    log=$TOP/out/diff/$(repo-path|perl -npe "s,/,%,g").log;
    mkdir -p $(dirname $log);
    if test ! "$remote" -a $local_from = false ; then
        from=$(repo-remote)/$from
    fi
    if test ! "$remote" -a $local_to = false ; then
        to=$(repo-remote)/$to
    fi
    git-change-id-ffable $from $to > $log 2>/dev/null;
    if test $(stat -c %s $log) = 0; then
        rm $log;
    fi;
    pwd
'
