#!/bin/bash

if test $# = 0; then
    cd ~/system-config/
    for x in code3 rem build build2 pub; do
        psync $x .&
    done
    exit
fi >/dev/null 2>&1

TEMP=$(getopt -o t:SrdcL --long target-dir:,git-st,reverse,delete,checksum -n $(basename $0) -- "$@")
reverse=false
symlink=
git_st=
target_dir=$(up .)
delete=
checksum=
eval set -- "$TEMP"
while true; do
    case "$1" in
        -r|--reverse)
            reverse=true
            shift 1
            ;;
        -L)
            symlink=-L
            shift 1
            ;;
        -S|--git-st)
            git_st='--files-from=-'
            shift 1
            ;;
        -t|--target-dir)
            target_dir=$(up $2)
            shift 2
            ;;
        -d|--delete)
            delete=--delete
            shift 1
            ;;
        -c|--checksum)
            checksum=--checksum
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done

if test "$1" = -r; then
    reverse=true
    shift
fi

function die() {
    echo Error: "$@"
    exit -1
}

host=$1
shift

ssh $host mkdir -p "$(up .)"
if test -e psync-exclude.rc -a -z "$delete"; then
    local_exclude='--exclude-from psync-exclude.rc'
else
    local_exclude=
fi

if test "$git_st"; then
    cd $(dirname $(lookup-file -e .git))
fi
if test "$git_st"; then
    . .gitx
    (git st -S | grep . ||getclip) | cut -b 4-
fi |
if test "$reverse" = true; then
    for x in "$@"; do
        my-rsync $git_st $symlink $checksum -av $host:$target_dir/$x $(dirname $x) --exclude .git --exclude .gitmodules --exclude "*#*" --exclude ".#*" $local_exclude |grep -v '/$' -P
    done
else
    my-rsync $git_st $symlink $checksum -av "$@" $host:$target_dir --exclude .git --exclude "*#*" --exclude ".#*" $delete $local_exclude |grep -v '/$' -P
fi
