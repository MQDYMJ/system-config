#!/usr/bin/env perl

my $debug;
my $logfile = $0;
$logfile =~ s!.*/!!;
if ($ENV{DEBUG} eq 'true') {
    $debug = *STDERR;
} else {
    open($debug, ">", glob("~/.cache/system-config/logs/$logfile.log"))
        or die "Can not open debug log file ~/.cache/system-config/logs/$logfile.log";
}
sub debug(@) {
    print $debug "@_\n";
}

use Getopt::Long;
use String::Approx 'adistr';
my $pre;
GetOptions(
    "pre=s" => \$pre,
    );

if ($pre) {
    $pre_re = qr/^\Q$pre\E/;
}

my $str = $ARGV[0];
shift @ARGV;

while (<>)
{
    if (not exists $file{$_}) {
        $file{$_} = 1;
        push @file, $_;

        if ($pre and m/$pre_re/) {
            $file_pre{$_} = 1;
            push @file_pre, $_;
        }
    }
}

if ($pre) {
    for (@file_pre) {
        print $_;
    }
}

debug "sort with $str";

my %basenames;

map {
    (my $base = $_) =~ s,.*/,,;
    $basenames{$_} = $base;
} @file;

@file = sort {abs(adistr($basenames{$a}, $str)) <=> abs(adistr($basenames{$b}, $str))} @file;

for (@file) {
    next if ($pre and exists $file{$pre . $_} or exists $file_pre{$_});
    print $_;
}
