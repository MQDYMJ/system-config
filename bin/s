#!/bin/bash

if is-tty-io; then
    s_how=tty
elif is-in-emacs; then
    s_how=emacs
fi

if echo $SHELLOPTS | grep -q xtrace; then
    exec > ~/tmp/$(basename $0).txt 2>&1
elif ! is-tty-io; then
    set -x
fi

if test $# = 1 -a "$1" = '' || test $# = 0; then
    set -- "$(xclip -o)"
fi

double_click=false

if test "$DESKTOP_SESSION" = sawfish; then
    if test "$SAWFISH_CLICK" = t; then
        exec 9> ~/.cache/system-config/logs/s-sawfish-click.lock
        flock -n 9 || exit
        exec 2>~/tmp/s.txt

        declare -a start_events
        max_try=8

        for x in $(seq 1 $max_try ); do
            start_event=$(sawfish-client -e '(event-name (last-event))'|tr -d \")
            if [[ ${start_event/-Off/-Click} =~ -Click[0-9] ]]; then # double click
                double_click=true
                break
            fi

            start_events[$x]=$start_event
            if echo "${start_events[@]}"|grep -q -e '-Off.*-Click'; then
                double_click=true
                break
            fi
            sleep .05
            if test $x = $max_try; then
                start_event=${start_events[1]}
            fi
        done
    fi

    if test "$start_event" = '"F2"'; then
        start_event=super-button2
    elif test "$start_event" = '"F3"'; then
        start_event=super-button3
    fi

    if [[ $start_event =~ Super-Button ]]; then
        s_how=$(echo ${start_event,,} | grep -o -P -e 'button\d+' -i)
        last_search=~/.cache/system-config/logs/last-search.$s_how
        start_event=${start_event/-Off/-Click}
    fi
fi

last_search=~/.cache/system-config/logs/last-search.$s_how
set +x
search_engines=$(
    (
        if test -e $last_search; then
            cat $last_search;
        fi;
        cd ~/system-config/bin;
        (
            for x in search-* gerrit-browser-review; do
                echo $x;
            done
        )|sort -u
    ) | uniq-even-non-ajacent | grep .
              )

engine1=$(echo "$search_engines" | perl -ne 'print if 1..1' )

if test "$double_click" = true; then
    engineX=$engine1
else
    engineX=$(select-args -p "Which search engine for $s_how?" $search_engines)
fi

exec 9>/dev/null

function update-engine-order() {
    (
        for x in "$@"; do
            echo "$x"
        done
        cat $last_search
    ) | uniq-even-non-ajacent > $last_search.$$
    mv $last_search.$$ $last_search
}

if test -x ~/system-config/bin/"$engineX"; then
    update-engine-order "$engineX"
fi&

if test ! -x ~/system-config/bin/"$engineX" -a "${engineX:0:2}" = "s "; then
    s "${engineX:2}"
    exit
fi

"$engineX" "$@"
