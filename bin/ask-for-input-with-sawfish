#!/bin/bash

set -e

## start code-generator "^\\s *#\\s *"
# generate-getopt p:prompt='"> "' ssecret kdo-kill
## end code-generator
## start generated code
TEMP=$(getopt -o ksp:h \
              --long do-kill,secret,prompt:,help,no-do-kill,no-secret \
              -n $(basename -- $0) -- "$@")
do_kill=false
secret=false
prompt="> "
eval set -- "$TEMP"
while true; do
    case "$1" in

        -k|--do-kill|--no-do-kill)
            if test "$1" = --no-do-kill; then
                do_kill=false
            else
                do_kill=true
            fi
            shift
            ;;
        -s|--secret|--no-secret)
            if test "$1" = --no-secret; then
                secret=false
            else
                secret=true
            fi
            shift
            ;;
        -p|--prompt)
            prompt=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo
            echo
            echo Options and arguments:
            printf %06s '-k, '
            printf %-24s '--[no-]do-kill'
            echo
            printf %06s '-p, '
            printf %-24s '--prompt=PROMPT'
            echo
            printf %06s '-s, '
            printf %-24s '--[no-]secret'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test "$do_kill" = true; then
    fuser ~/.cache/system-config/logs/$(basename $0).lock2|xargs ps 1
    fuser -k ~/.cache/system-config/logs/$(basename $0).lock2
    exit 0
fi

exec 9> ~/.cache/system-config/logs/$(basename $0).lock2
flock 9

if ! is-sawfish; then
    title=$(echo "$prompt" | tail -n 1)
    text=$prompt
    (
        for x in $(seq 1 10); do
            sleep .$x;
            find-or-exec -e zenity && exit
        done
    )&

    if test "$secret" = true; then
        ztype=--password
    else
        ztype=--entry
    fi
    zenity $ztype --text="$text" --title="$title"
    exit
fi

tmpf=/tmp/$(basename $0).$$

echo -n "$prompt " > $tmpf

read_file=$(cat <<EOF
(progn
  (let* ((file (open-file "$tmpf" 'read))
         (str "")
         (line ""))
    (while (setq line (read-line file))
      (setq str (concat str line)))
    (close-file file)
    str))
EOF
)

sawfish_script=$(cat <<EOF
(let* ((bhj-prompt-completion-fun (lambda ()))
       (bhj-prompt-window-position
        (cons 200 200))
      $(if test $secret = true; then
          echo '(bhj-prompt-display-fun (lambda (s) (make-string (length s) ?*)))';
          echo '(bhj-prompt-history (make-ring 16))';
      fi))
   (bhj-prompt $read_file nil))
EOF
)
x=$(sawfish-client -e "$sawfish_script" | perl -npe 's/^"|"$//g' | tr -d '\r\n'|perl -npe 's,\\([0-7]{3}),chr(oct($1)),eg')
if test "$x" = $'\003'; then
    exit 1
fi
echo "$x"

rm $tmpf
