#!/usr/bin/perl

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl @ask-to-whom @:send-to @:extra-send-text @:image
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("default");



my $ask_to_whom = 0;
my $extra_send_text = "";
my $image = "";
my $send_to = "";

my $handler_help = sub {
    print ;
    print "\n\n选项和参数：\n";
    printf "%6s", '';
    printf "%-24s", '--[no]ask-to-whom';
    if (length('--[no]ask-to-whom') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '';
    printf "%-24s", '--extra-send-text=EXTRA-SEND-TEXT';
    if (length('--extra-send-text=EXTRA-SEND-TEXT') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '';
    printf "%-24s", '--image=IMAGE';
    if (length('--image=IMAGE') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";
    printf "%6s", '';
    printf "%-24s", '--send-to=SEND-TO';
    if (length('--send-to=SEND-TO') > 24 and length() > 0) {
        print "\n";
        printf "%30s", "";
    }
    printf "%s", ;
    print "\n";

    exit(0);
};

GetOptions (
    'ask-to-whom!' => \$ask_to_whom,
    'extra-send-text=s' => \$extra_send_text,
    'image=s' => \$image,
    'send-to=s' => \$send_to,
    'help|h!' => \&$handler_help,
);


## end generated code
use String::ShellQuote;

sub quote_lua_str($) {
    my @command = ("str.quote.lua", "$_[0]");
    my $command = join(" ", shell_quote(@command));
    return scalar qx($command);
}

if (not $image) {
    if ($ARGV[0] =~ m/^image:(\S+)/) {
        $image = $1;
    }
}

if ($image) {
    my $post_text = sprintf("wrench_picture(%s)", quote_lua_str($image));
    say STDERR "sending image: $post_text";

    system("Wrench.sh", $post_text);

    exit 0;
}

my $text;
if (@ARGV) {
    $text = join(" ", @ARGV);
} else {
    $text = join("", <>);
}

$text =~ s,\s*$,,;              # get rid of empty lines at the end.

use File::Slurp;

append_file("$ENV{HOME}/.cache/system-config/Wrench-post.history",
            <<EOF
----------------------------------------------------------------
$text


EOF
        );

if ($ask_to_whom or $send_to) {
  my $whom;
  if ($send_to) {
    $whom = $send_to
  } else {
    chomp($whom = qx(input-lock -l Wrench-post select-args -a pengyouquan\@\@wx -a 朋友圈\@\@wx --ask-for-input -1 --select-from-history-too -o -p "你想给谁发送消息"));
  }

  if ($whom eq 'pengyouquan@@wx' or $whom eq '朋友圈@@wx' ) {
      my $post_text = sprintf("wrench_share_to_weixin(%s)", quote_lua_str($text));
      system("Wrench.sh", $post_text);
      exit 0;
  }

  my $call_text = sprintf("wrench_call(%s)", quote_lua_str($whom));
  system("log-run", "Wrench.sh", $call_text);

  if (system("yes-or-no-p '已经找到你想发送消息的人了么？'") != 0) {
    system("bhj-notify", "Wrench-post", "Can't find $whom to post, please fix it");
    exit 1;
  }
}

my @cur_at_end;

my $at_someone_regexp = qr(\@\@(\S+?)( | |$|\n));

my $how_to_post = 'nil';
if ($text =~ m/$at_someone_regexp/ and qx(adb-top-activity) =~ m,com.alibaba.android.rimet/,) {
    while ($text =~ s,$at_someone_regexp,,) {
        my $pre = $`;
        my $post = $';
        my $at_whom = $1;

        if ($pre) {
            my $post_text = sprintf("wrench_post(%s, %s)", quote_lua_str($`), '"no-post"');
            system("Wrench.sh", $post_text);
        }


        my $command = sprintf("wrench_cue(%s)", quote_lua_str($at_whom));
        system("Wrench.sh", $command);
        $text = $post;
    }
}

my $post_text = sprintf("wrench_post(%s, %s)", quote_lua_str($text), 'nil');

system("Wrench.sh", $post_text);

if ($extra_send_text) {
  system("Wrench-post", "--", "$extra_send_text");
}
