#!/bin/bash
set -e

help-find-what() {
    cat <<EOF | indent-stdin -n 30 -s
要查找什么信息？仅供 CM 在服务器上使用，默认为空--只打印
http://172.16.2.18/vmlinux.html 网页返回的结果。

第 2 个参数可以是：
  - flash :: 代表刷机包共享目录地址，只能在服务器上使用
  - ota :: 代表全包下载地址，只能在服务器上使用
  - base :: 代表 base 包下载地址，只能在服务器上使用
  - manifest :: 代表这个版本编译时的代码快照 manifest.xml 的下载地址
                这个参数可以给所有工程师使用

EOF
}

## start code-generator "^\\s *#\\s *"
# generate-getopt -P u:utc b:base o:ota-version @:find-what '?"$(help-find-what)"'
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o b:o:u:h \
                      --long base:,find-what:,ota-version:,utc:,help \
                      -n $(basename -- $0) -- "$@")
declare base=
declare find_what=
declare ota_version=
declare utc=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -b|--base)
            base=$2
            shift 2

            ;;
        --find-what)
            find_what=$2
            shift 2

            ;;
        -o|--ota-version)
            ota_version=$2
            shift 2

            ;;
        -u|--utc)
            utc=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-b, '
            printf %-24s '--base=BASE'
            echo
            printf "%06s" " "
            printf %-24s '--find-what=FIND_WHAT'
            echo "$(help-find-what)"
            printf %06s '-o, '
            printf %-24s '--ota-version=OTA_VERSION'
            echo
            printf %06s '-u, '
            printf %-24s '--utc=UTC'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

if test -z "$utc" -a -z "$base" -a -z "$ota_version"; then
    utc=$(my-adb getprop ro.build.date.utc)
fi

vmversion=

if test -e DDRCS0.BIN; then
    vmversion=$(strings DDRCS0.BIN |grep --line-buffered 'Linux version' |perl -ne 'print; exit')
    vmversion=$(echo -n "$vmversion"|urlify|perl -npe 's/ /+/g')
fi

vmlinux=$(curl -s "http://172.16.2.18/cgi-bin/vmlinux-lookup.cgi?version=$vmversion&base_build=${base//\%/\%25}&utc_date=$utc&ota_version=$ota_version")
if test -z "$find_what"; then
    echo "$vmlinux"
else
    flashing_file_dir=$(
        echo "$vmlinux" | grep 'Flashing binary' -A 1 | perl -ne 'print if s,\s*smb://172.16.2.240,/mnt,'
                     )
    if test ! -e "$flashing_file_dir"; then
        if test "$find_what" = manifest; then
            echo http://172.16.2.18/$(echo mnt/flash/.smartcm/released-manifests/${flashing_file_dir}/manifest.xml|perl -npe 's,/+,/,g')
            exit
        fi
        # maybe it's been backed up!
        lunch_config=$(scm get-lunch-config-from-flashing-dir $flashing_file_dir)
        backup_dir=$(
            echo /mnt/flash/backup/auto-backup/$lunch_config/*$(basename $flashing_file_dir)
                  )
        if test ! -e "$backup_dir"; then
            die "Can't find it in backup dir!"
        fi
        if test "$find_what" = flash; then
            prefix="$backup_dir/flashing-files"
        else
            prefix="$backup_dir/ota-zips"
        fi
    else
        prefix=
    fi

    if test "$find_what" = flash; then
        echo $prefix$flashing_file_dir|perl -npe 's,/*$,,'
    elif test "$find_what" = ota; then
        echo $prefix$(
            echo "$vmlinux"|grep 'no base'|pn 2 :|perl -npe 's,//.*?/,/mnt/,'
             )
    elif test "$find_what" = base; then
        echo $prefix$(
            echo "$vmlinux"|grep 'http://.*This is the ota base'|pn 2 :|perl -npe 's,//.*?/,/,'
             )
    elif test "$find_what" = manifest; then
        echo http://172.16.2.18/$(echo mnt/flash/.smartcm/released-manifests/${flashing_file_dir}/manifest.xml|perl -npe 's,/+,/,g')
    elif test "$find_what" = ota-all; then
        echo $prefix$(
           echo "$vmlinux"|grep '\.zip'|grep -v 'This is the ota base'|pn 2 :|perl -npe 's,//.*?/,/mnt/,'
            )
    else
        die "Don't know this FIND_WHAT parameter: $find_what"
    fi

fi
