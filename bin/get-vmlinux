#!/bin/bash
set -e

## start code-generator "^\\s *#\\s *"
# generate-getopts  u:utc b:base o:ota-version
## end code-generator
## start generated code

utc=
base=
ota_version=
OPTIND=1
while getopts "u:b:o:h" opt; do
    case "$opt" in

        u) utc=$OPTARG ;;
        b) base=$OPTARG ;;
        o) ota_version=$OPTARG ;;
        h)
            echo
            echo
            printf %06s%s '-b ' 'base'
            printf %-24s 'BASE'
            echo ''
            printf %06s%s '-o ' 'ota-version'
            printf %-24s 'OTA_VERSION'
            echo ''
            printf %06s%s '-u ' 'utc'
            printf %-24s 'UTC'
            echo ''
            shift
            exit 0
            ;;
        *)
            echo
            echo
            printf %06s%s '-b ' 'base'
            printf %-24s 'BASE'
            echo ''
            printf %06s%s '-o ' 'ota-version'
            printf %-24s 'OTA_VERSION'
            echo ''
            printf %06s%s '-u ' 'utc'
            printf %-24s 'UTC'
            echo ''
            exit 2
            ;;
    esac
done

shift $((OPTIND - 1))

## end generated code

if test -z "$utc" -a -z "$base" -a -z "$ota_version"; then
    utc=$(my-adb getprop ro.build.date.utc)
fi

vmversion=

if test -e DDRCS0.BIN; then
    vmversion=$(strings DDRCS0.BIN |grep --line-buffered 'Linux version' |perl -ne 'print; exit')
    vmversion=$(echo -n "$vmversion"|urlify|perl -npe 's/ /+/g')
fi

vmlinux=$(curl -s "http://172.16.2.18/cgi-bin/vmlinux-lookup.cgi?version=$vmversion&base_build=$base&utc_date=$utc&ota_version=$ota_version")
echo "$vmlinux"
