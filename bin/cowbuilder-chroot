#!/bin/bash

if test "$UNSHARE" != true; then
    if echo $SHELLOPTS | grep -q xtrace; then
        bashx='bash -x'
    fi

    sudo unshare -m -- env PATH=$PATH HOME=$HOME USER=$USER UIDX=$UID bash -c "UNSHARE=true $bashx $0 $*"
    exit
fi


## start code-generator "^\\s *#\\s *"
# generate-getopts  c:cow
## end code-generator
## start generated code
cow=
OPTIND=1
while getopts 'c:' opt; do
    case "$opt" in
        c)    cow=$OPTARG;;
        *)    echo Usage Error; exit 2;;
    esac
done
shift $(($OPTIND - 1))

## end generated code

if test -z "$cow"; then
    cow=$(select-output-line -o -- find ~/external/cowbuilder -maxdepth 1 -type d -name '*-*')
fi

if test -d "$cow/home/bhj"; then
    chroot=$cow
else
    if test ! -d "$cow"/chroot; then
        base="$cow"/bare/base.tgz
        if test ! -e "$base"; then
            die "base not found: $base"
        fi
        mkdir -p "$cow"/chroot
        sudo tar zxfv "$base" -C "$cow"/chroot
    fi

    chroot="$cow"/chroot
fi
cat /proc/self/mounts | grep "$chroot" |while read what where x; do
    sudo umount "$where"
done

cat /proc/self/mounts | while read what where x; do
    if echo $where | grep '^/(sys|proc|dev)' -P -q; then
        sudo mount $where "$chroot"/$where -o bind
    fi
done

sudo mkdir "$chroot"/$HOME/.ssh -p
sudo chown $USER\. "$chroot"/$HOME -R

(
    cd
    system_config=system-config
    if test -d ~/src/system-config; then
        system_config=src/system-config
    fi

    for x in $system_config .ssh; do
        rsync $x "$chroot"/$HOME/ -av >/dev/null 2>&1
    done&
    sudo cp ~/system-config/bin/cowbuilder-chroot.prepare "$chroot"/root/
    sudo perl -npe "s/bhj/$USER/; s/adduser/adduser --uid $UIDX/" -i "$chroot"/root/cowbuilder-chroot.prepare
)

sudo chroot "$chroot" "$@"

