#!/bin/bash

set -e
function die() {
    echo Error: "$@"
    exit -1
}

LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8

md5sum=$(
    (
        for x in "$@"; do
            echo "$x"
        done
        if test "$FIND_FILE_ONLY"; then
            echo " "
        fi
    ) | md5sum | awk '{print $1}'
      )
md5dir=.cache/${md5sum:0:1}/${md5sum:1:1}
md5file=$md5dir/${md5sum:2}

## start code-generator "^\\s *#\\s *"
# generate-getopts llocal_index qquote xxdebug ttags sshort
## end code-generator
## start generated code
local_index=false
quote=false
xdebug=false
tags=false
short=false
OPTIND=1
while getopts 'lqxts' opt; do
    case "$opt" in
        l)    local_index=true;;
        q)    quote=true;;
        x)    xdebug=true;;
        t)    tags=true;;
        s)    short=true;;
        *)    echo Usage Error;;
    esac
done
shift $(($OPTIND - 1))

## end generated code


start_dir=~/.cache/system-config/for-code-reading/"$(readlink -f "$PWD")"
# echo Starting at $start_dir 1>&2
while test ! -d "$start_dir"/.beagrep -a "$start_dir" != / -a "$start_dir"
do
    start_dir=${start_dir%/*}
done

if test "$start_dir" = / -o "$start_dir" = $HOME -o -z "$start_dir"
then
    start_dir=`readlink -f ~/.gtags-dir`
fi

if test ! -d "$start_dir"; then
    die "Can not find beagrep database"
fi

export source_dir=${start_dir#*for-code-reading/}
export beagrep_dir=$start_dir/.beagrep
if test "$tags" = true; then
    beagrep_dir=$start_dir/.beatags
    export SOURCECODETAGSMODE=true
fi

# echo Beagrep index found at "$beagrep_dir" 1>&2

function wlp() {
    case $(uname) in
        CYGWIN*)
            cygpath -alm "$1"
            ;;
        *)
            readlink -m "$1"
            ;;
    esac
}

tokens_str=$1
shift
additional_tokens=$(echo "$@")

tokens=`beagrep-get-tokens "$tokens_str"`
if test ${0##*/} = beagrep-glob-files; then
    tokens=$(echo -n "$tokens" | perl -npe 's/(\S{2,})/filename:*$1*/g')
fi

if test "$FIND_FILE_ONLY"; then
    tokens=$(echo -n " $tokens" | perl -npe 's/\s+/ filename:/g; s/(^ *| filename:\s*$)//g')
    mkdir -p ~/.cache/system-config/logs
    echo $tokens > ~/.cache/system-config/logs/$(basename $0).log
fi

tokens="$tokens $additional_tokens"

if test "$quote" = true; then
    tokens=$(echo $tokens | perl -npe 's/^\s*/"/; s/\s*$/"/')
else
    tokens=${tokens//\"/}
fi

if test -e "$beagrep_dir"/../.beagrep-abc && test "$local_index" != true; then
    if test $tags = true; then
        tags=-t
    else
        tags=
    fi

    if test $quote = true; then
        quote=-q
    else
        quote=
    fi
    bash "$beagrep_dir"/../.beagrep-abc $tags $quote "$tokens"|rm-last-nl|if test $short = true; then cat; else perl -npe "s,^,$source_dir/,"; fi

else
    if test "$beagrep_dir/../$md5file" -nt "$beagrep_dir"/FileAttributesStore.db; then
        cat "$beagrep_dir/../$md5file"
    else
        . aterr rm -f "$beagrep_dir/../$md5file.$$"
        set -o pipefail
        beagrep-static-query \
            --add-static-backend "$(wlp "$beagrep_dir")" \
            --backend none --max-hits 100000 "$tokens" |
            beagrep-unurl-and-filter.pl|grep -v '#' |
            sort -u | (
            mkdir -p "$beagrep_dir/../$md5dir";
            tee "$beagrep_dir/../$md5file.$$";
        )

        mv "$beagrep_dir/../$md5file.$$" "$beagrep_dir/../$md5file"

    fi
fi | if test "$short" = true; then
         perl -npe "s,^$source_dir/,,"
     else
         cat
     fi

if test ${0##*/} != beagrep-glob-files; then
    echo /dev/null
fi
