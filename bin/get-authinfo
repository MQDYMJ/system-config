#!/usr/bin/perl
use strict;

sub debug(@) {
    print STDERR "@_\n";
  }

## start code-generator "^\\s *#\\s *"
# generate-getopt -s perl @:host \
# @:port \
# u:user \
# o:output='password' \
# p:prompt="Password: "
## end code-generator
## start generated code
use Getopt::Long;

Getopt::Long::Configure("default");



my $host = "";
my $output = "password";
my $port = "";
my $prompt = "Password: ";
my $user = "";

my $handler_help = sub {
  print ;
  print "\n\n选项和参数：\n";
  printf "%6s", '';
  printf "%-24s", '--host=HOST';
  if (length('--host=HOST') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-o, ';
  printf "%-24s", '--output=OUTPUT';
  if (length('--output=OUTPUT') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '';
  printf "%-24s", '--port=PORT';
  if (length('--port=PORT') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-p, ';
  printf "%-24s", '--prompt=PROMPT';
  if (length('--prompt=PROMPT') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";
  printf "%6s", '-u, ';
  printf "%-24s", '--user=USER';
  if (length('--user=USER') > 24 and length() > 0) {
    print "\n";
    printf "%30s", "";
  }
  printf "%s", ;
  print "\n";

  exit(0);
};

GetOptions (
            'host=s' => \$host,
            'output|o=s' => \$output,
            'port=s' => \$port,
            'prompt|p=s' => \$prompt,
            'user|u=s' => \$user,
            'help|h!' => \&$handler_help,
           );


## end generated code

if (not $host and @ARGV) {
    $host = shift @ARGV;
}

if (not $user and @ARGV) {
    $user = shift @ARGV;
}

if (not $port and @ARGV) {
    $port = shift @ARGV;
}

my $got_pass=0;
open(my $auth, "<", glob("~/.authinfo")) or die "No .authinfo in your HOME";
while (<$auth>) {
    my @fields = split;
    my ($machine, $authuser, $pass, $authport) = @fields[1, 3, 5, 7];
    if ($host eq $machine) {
        if ($user eq "?") {
            print $authuser;
            exit;
        } elsif ($user eq $authuser or not $user) {
            if ($port eq $authport or not $port) {
                print $pass;
                $got_pass = 1;
                last;
            }
        }
    }
}

if (not $got_pass and $user ne '?') {
    use String::ShellQuote;
    $prompt = shell_quote($prompt);
  system("ask-for-input -s -p $prompt");
}
