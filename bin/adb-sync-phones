#!/bin/bash

set -e

me=$(readlink -f $0)
if test ! -e "$me"; then
    me=$(readlink -f "$(which $0)")
    if test ! -e "$me"; then
        die "Can't find out about me"
        exit 1
    fi
fi
b0=$(basename $0)

my-echo() {
    builtin echo "$(date): $@" | tee -a $b0.echo
}

if ! ps.pl "adb-agree-to-install"; then
    hint "发现你没有在运行 adb-agree-to-install 进程，这样的话在 user 版本上用 adb install apk 的时候，手机会不停的提示警告 apk 来源不可信"
    hint "这样的话这个脚本基本上是没法使用的，所以请一定要运行 adb-agree-to-install 命令。"
fi

export -f my-echo

## start code-generator "^\\s *#\\s *"
        # generate-getopt -e f:from-adb t:to-adb p:package-regexp='".*"' \
            # @only-missing=true '?只安装还没有安装的 App，不要重装已安装的 App' \
            # x:exclude-regexp="'smartisan|com.android|^android'" '?不要装匹配这个正则表达式的包'\
            # ndry-run '?干跑一下摸个底，不要真跑' \
            # @:install-only-regexp="'com.google'" '?匹配这个表达式的话，只安装，不同步数据'
## end code-generator
## start generated code
TEMP=$( getopt -o x:f:p:t:h \
               --long exclude-regexp:,from-adb:,install-only-regexp:,only-missing,package-regexp:,to-adb:,help,no-only-missing \
               -n $(basename -- $0) -- "$@")
exclude_regexp=${exclude_regexp:-'smartisan|com.android|^android'}
from_adb=${from_adb:-}
install_only_regexp=${install_only_regexp:-'com.google'}
only_missing=${only_missing:-true}
package_regexp=${package_regexp:-".*"}
to_adb=${to_adb:-}
eval set -- "$TEMP"
while true; do
    case "$1" in

        -x|--exclude-regexp)
            exclude_regexp=$2
            shift 2
            ;;
        -f|--from-adb)
            from_adb=$2
            shift 2
            ;;
        --install-only-regexp)
            install_only_regexp=$2
            shift 2
            ;;
        --only-missing|--no-only-missing)
            if test "$1" = --no-only-missing; then
                only_missing=false
            else
                only_missing=true
            fi
            shift
            ;;
        -p|--package-regexp)
            package_regexp=$2
            shift 2
            ;;
        -t|--to-adb)
            to_adb=$2
            shift 2
            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-x, '
            printf %-24s '--exclude-regexp=EXCLUDE_REGEXP'
            echo
            printf "%30s" ""
            echo '干跑一下摸个底，不要真跑'
            printf %06s '-f, '
            printf %-24s '--from-adb=FROM_ADB'
            echo
            printf "%06s" " "
            printf %-24s '--install-only-regexp=INSTALL_ONLY_REGEXP'
            echo
            printf "%30s" ""
            echo '匹配这个表达式的话，只安装，不同步数据'
            printf "%06s" " "
            printf %-24s '--[no-]only-missing'
            echo '只安装还没有安装的 App，不要重装已安装的 App'
            printf %06s '-p, '
            printf %-24s '--package-regexp=PACKAGE_REGEXP'
            echo
            printf %06s '-t, '
            printf %-24s '--to-adb=TO_ADB'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done


export exclude_regexp
export from_adb
export install_only_regexp
export only_missing
export package_regexp
export to_adb

## end generated code

from_apk=$(
    export ANDROID_SERIAL=$from_adb
    my-adb shell find /data/app -name '*.apk' | perl -npe 's,/data/app/,,'
        )

ANDROID_SERIAL=$from_adb adb-fix-busybox
ANDROID_SERIAL=$to_adb adb-fix-busybox

to_apk=$(
    export ANDROID_SERIAL=$to_adb
    my-adb shell find /data/app -name '*.apk' | perl -npe 's,/data/app/,,'
      )

declare -A from_packages
declare -A to_packages

get-pkg-from-apk-path() {
    local apk_path=$1
    echo "$apk_path" | perl -npe 's,(.*?)[-/].*,$1,'
}

for apk in $from_apk; do
    pkg=$(get-pkg-from-apk-path $apk)
    if [[ $pkg =~ $package_regexp ]]; then
        echo source phone: $pkg
        from_packages[$pkg]=$apk
    fi

done

for apk in $to_apk; do
    pkg=$(get-pkg-from-apk-path $apk)
    if [[ $pkg =~ $package_regexp ]]; then
        echo target phone: $pkg
        to_packages[$pkg]=$apk
    fi

done

if test "$dry_run" = true; then
    exit 0
fi

mkdir -p ~/tmp/$b0
cd ~/tmp/$b0

declare -p from_packages to_packages > pkgs.info

(
    ANDROID_SERIAL=$to_adb adb shell mkdir -p /sdcard/MobileOrg
)&

function do-1-pkg() {
    set -e
    . pkgs.info
    p=$1
    exec </dev/null

    if [[ $p =~ $exclude_regexp ]]; then
        echo skip $p, because it is excluded
        exit
    fi

    echo working with $p

    f_path=/data/app/${from_packages[$p]}
    if test -v to_packages[$p] -a "$only_missing" = true; then
        my-echo "$p already installed, skip" | tee -a install.skip
        exit 0
    fi

    if test ! -v to_packages[$p]; then
        ANDROID_SERIAL=$from_adb adb pull $f_path $p.apk
        (
            ANDROID_SERIAL=$to_adb adb-multi-install $p.apk
        ) || {
            my-echo failed to install $p | tee -a install.err
            exit 0
        }
    fi

    if [[ $p =~ $install_only_regexp ]]; then
        echo "$p is install only, should skip"
        exit
    fi

    to_uid=$(
        ANDROID_SERIAL=$to_adb my-adb shell "cat /data/system/packages.list|grep $p" | pn 2
          )

    (
        ANDROID_SERIAL=$from_adb my-adb sc-shell "cd /data/data; tar czf /data/data/$p.tgz $p"
        ANDROID_SERIAL=$from_adb adb pull /data/data/$p.tgz
        ANDROID_SERIAL=$from_adb my-adb rm -f /data/data/$p.tgz
        ANDROID_SERIAL=$to_adb adb push $p.tgz /data/data ;
        ANDROID_SERIAL=$to_adb my-adb sc-shell "cd /data/data; rm -rf $p; tar xzf $p.tgz; chown -R $to_uid.$to_uid $p; restorecon -D -R -v $p"
    ) > $p.log 2>&1

}

export -f do-1-pkg
for x in "${!from_packages[@]}"; do
    echo "$x"
done | sort | time xargs -P 5 -n 1 bash -c 'do-1-pkg $1' true
