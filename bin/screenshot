#!/bin/bash
if test $(basename $0) = screenshot; then
    sleep 1
fi

function die() {
    echo Error: "$@"
    exit -1
}


## start code-generator "^\\s *#\\s *"
# generate-getopt ffull sselected ddelay wcurrent eedit
## end code-generator
## start generated code
TEMP=$(getopt -o fesdwh \
              --long full,edit,selected,delay,current,help,no-full,no-edit,no-selected,no-delay,no-current \
              -n $(basename -- $0) -- "$@")
full=false
edit=false
selected=false
delay=false
current=false
eval set -- "$TEMP"
while true; do
    case "$1" in

        -f|--full|--no-full)
            if test "$1" = --no-full; then
                full=false
            else
                full=true
            fi
            shift
            ;;
        -e|--edit|--no-edit)
            if test "$1" = --no-edit; then
                edit=false
            else
                edit=true
            fi
            shift
            ;;
        -s|--selected|--no-selected)
            if test "$1" = --no-selected; then
                selected=false
            else
                selected=true
            fi
            shift
            ;;
        -d|--delay|--no-delay)
            if test "$1" = --no-delay; then
                delay=false
            else
                delay=true
            fi
            shift
            ;;
        -w|--current|--no-current)
            if test "$1" = --no-current; then
                current=false
            else
                current=true
            fi
            shift
            ;;
        -h|--help)
            set +x
            echo
            echo
            echo Options and arguments:
            printf %06s '-w, '
            printf %-24s '--[no-]current'
            echo
            printf %06s '-d, '
            printf %-24s '--[no-]delay'
            echo
            printf %06s '-e, '
            printf %-24s '--[no-]edit'
            echo
            printf %06s '-f, '
            printf %-24s '--[no-]full'
            echo
            printf %06s '-s, '
            printf %-24s '--[no-]selected'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error"
            ;;
    esac
done


## end generated code

select=-s

if test "$full" = true; then
    select=-m
elif test "$current" = true; then
    select=-u
elif test "$selected" = true; then
    select=-s
fi


out=$1

if test ! "$out"; then
    now=`now|perl -npe 's/:/./g'`
    mkdir -p ~/shots
    now=shots/"$now"
    out=~/"$now".png
fi

if test "$delay" = true; then
    select=-m
    edit=true
    bhj-notify screenshot 'Move your mouse to the left edge of the screen after you are ready'
    sawfish-wait-for-start
    bhj-notify screenshot
fi

while true; do
    scrot $select "$out"
    if test -e "$out"; then
        if test "$(basename $0)" = screenshot-edit -o "$edit" = true; then
            gimp -n "$out" >/dev/null 2>&1
        else
            eog "$out" >/dev/null 2>&1
        fi
        mp "$out"
        mp "$out" | putclip
        exit 0
    fi
    sleep 1
done
