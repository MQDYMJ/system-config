#!/bin/bash

# [[file:~/src/github/private-config/knuth-mode/org2html.org::*%E6%9C%80%E7%BB%88%E7%9A%84%E7%89%88%E6%9C%AC%EF%BC%9A][the-ultimate-script]]

set -e

git-interactive-add

if [[ $1 =~ .org$ ]]; then
    org_file=$1
    html_file=${1%.org}.html
elif [[ $1 =~ .html$ ]]; then
    org_file="no-such-file"
    html_file=$1
fi

emacsclient -e "$(cat <<'EOF6405e5bce1d2' | perl -npe "s,%file%,${1},g"
(let ((org-file "%file%")
      (my-loaded-themes custom-enabled-themes)
      (html-file (replace-regexp-in-string "\\.org$" ".html" "%file%")))
  (package-initialize)
  (require 'ox-html)
  (require 'emojis)
  (when (string-match ".org$" org-file)
    (when custom-enabled-themes
      (dolist (theme custom-enabled-themes)
        (disable-theme theme)))
    (find-file org-file)
    (org-html-export-to-html)
    (when my-loaded-themes
      (dolist (theme my-loaded-themes)
        (load-theme theme))))
  (with-temp-buffer
    (insert-file html-file)
    (org2html-emojify)
    (goto-char (point-min))
    (write-file html-file)))
EOF6405e5bce1d2
)"

perl -npe "$(cat <<'EOFf0ea35142ce4'
     # class='emoji' src='/home/bhj/src/github/Wrench/release/emojis/iphone-new/RING.png'
     while (m,class='emoji' src='(.*?)',g) {
         $png_file = $1;
         ($png_file_basename = $png_file) =~ s,.*/,,;
     
         system("mkdir -p emojis") unless -d "emojis";
         system "cp", "$png_file", "emojis/$png_file_basename" unless -e "emojis/$png_file_basename";
     
         $png_file_map{$png_file} = "emojis/$png_file_basename";
     }
     
     s|class='emoji' src='(.*?)'|class='emoji' src='$png_file_map{$1}'|g;
     
EOFf0ea35142ce4
)" -i "$html_file"

if [[ $org_file =~ .org$ ]]; then # else, we are called from org-export?
    css-inline "$html_file" > "$html_file".$$
    mv "$html_file".$$ "$html_file"
    of "$html_file"
fi

# Local Variables: #
# eval: (read-only-mode 1) #
# End: #

# the-ultimate-script ends here
