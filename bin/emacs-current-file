#!/usr/bin/env bash

set -e

me=$(readlink -f $0)
if test ! -e "$me"; then
    me=$(readlink -f "$(which $0)")
    if test ! -e "$me"; then
        die "Can't find out about me"
        exit 1
    fi
fi

abs0=$0
if ! [[ $abs0 =~ ^/ ]]; then
    if [[ $abs0 =~ / ]] && test -e $PWD/$abs0; then
        abs0=$PWD/$abs0
    elif test -e "$(which $0)"; then
        abs0=$(which $0)
    else
        die "Can't find abs path for $0"
    fi
fi

b0=$(basename $0)


## start code-generator "^\\s *#\\s *"
# generate-getopt s:save-to-buffer=nil \
    # b:which-buffer '?"要获取的是哪个 Buffer，默认是当前 Buffer"' \
    # v:variable-name '?"要打印出哪个变量的值？"' \

## end code-generator
## start generated code
TEMP=$( getopt -o s:v:b:h \
               --long save-to-buffer:,variable-name:,which-buffer:,help \
               -n $(basename -- $0) -- "$@")
declare save_to_buffer=nil
declare variable_name=
declare which_buffer=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -s|--save-to-buffer)
            save_to_buffer=$2
            shift 2

            ;;
        -v|--variable-name)
            variable_name=$2
            shift 2

            ;;
        -b|--which-buffer)
            which_buffer=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %6s '-s, '
            printf %-24s '--save-to-buffer=SAVE_TO_BUFFER'
            echo
            printf %6s '-v, '
            printf %-24s '--variable-name=VARIABLE_NAME'
            echo
            printf "%30s" ""
            echo "要打印出哪个变量的值？"
            printf %6s '-b, '
            printf %-24s '--which-buffer=WHICH_BUFFER'
            echo
            printf "%30s" ""
            echo "要获取的是哪个 Buffer，默认是当前 Buffer"
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

tmp_file=/tmp/$b0.$$
. atexit rm -f "$tmp_file"

emacsclient -e "$(
cat <<'EOF16e1379802c6' | . .replace-%%
; {%emacs-lisp-mode%}
;;;;  real script start here
(let ((buffers (buffer-list))
      buf
      text)
  (cond
   ((not (string= "<%which_buffer%>" ""))
    (setq buf (get-buffer "<%which_buffer%>")))
   ((string= "<%b0%>" "emacs-current-file")
    (while buffers
      (setq buf (car buffers)
            buffers (cdr buffers))
      (when (buffer-file-name buf)
        (setq buffers nil))))
   (t
    (setq buf (window-buffer (selected-window)))))
  (when (not (null '<%save_to_buffer%>))
    (setq <%save_to_buffer%> buf))
  (message "current-file %s" (buffer-name buf))
  (setq text (or (and
                  (string= "<%b0%>" "emacs-current-file")
                  (buffer-file-name buf))
                 (and
                  (string= "<%b0%>" "emacs-current-text")
                  (with-current-buffer buf
                    (buffer-substring-no-properties (point-min) (point-max))))
                 (and
                  (string= "<%b0%>" "emacs-current-selection")
                  (with-current-buffer buf
                    (buffer-substring-no-properties (point) (mark))))
                 (and
                  (string= "<%b0%>" "emacs-current-buffer")
                  (buffer-name buf))
                 (and
                  (string= "<%b0%>" "emacs-current-mode")
                  (with-current-buffer buf
                    (symbol-name major-mode)))
                 (and
                  (string= "<%b0%>" "emacs-current-var")
                  (with-current-buffer buf
                    (format "%s" [%variable_name%]))))
        )
  (with-temp-buffer
    (insert text)
    (write-file "[%tmp_file%]")
    (kill-buffer)))
; {%/emacs-lisp-mode%}
EOF16e1379802c6

)" > ~/tmp/emacs-current-file.log 2>&1

(
    cat $tmp_file
)
