#!/bin/bash

set -e
## start code-generator "^\\s *#\\s *"
# generate-getopt -P a:abbrev
## end code-generator
## start generated code
TEMP=$(POSIXLY_CORRECT=true getopt -o a:h \
                      --long abbrev:,help \
                      -n $(basename -- $0) -- "$@")
declare abbrev=
eval set -- "$TEMP"
while true; do
    case "$1" in

        -a|--abbrev)
            abbrev=$2
            shift 2

            ;;
        -h|--help)
            set +x
            echo -e
            echo
            echo Options and arguments:
            printf %06s '-a, '
            printf %-24s '--abbrev=ABBREV'
            echo
            exit
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            die "internal error: $(. bt; echo; bt | indent-stdin)"
            ;;
    esac
done


## end generated code

exec &> ~/tmp/abbrevs.log
set -x

export SELECT_HISTORY_ORDER=true

sawfish-window mark -t abbrevs -s
. atexit sawfish-window mark -t abbrevs -r

config_dirs=(
    ~/.local-config/etc/abbrevs/
    ~/system-config/etc/abbrevs/
)

if test -z "$abbrev" -a "$1"; then
    if test "$#" -gt 1; then
        die "Don't take more than 1 argument"
    else
        abbrev=$1
    fi
elif test "$abbrev" -a "$1"; then
    die "Must specify ABBREV with either -a ABBREV or \$1, can't use both"
elif test -z "${abbrev}"; then
    abbrev=$(EMACS=t input-lock -l "Please input your abbrev. Or simply ? for help" \
                        select-args --ask-for-input -1 --select-from-history-too -o -p "Please input your abbrev. Or simply ? for help")
fi

get-abbrev-file() {
    local abbrev=$1
    EMACS=t select-output-line -i "${abbrev}" -o find "${config_dirs[@]}" -iname "*$(set -- $abbrev; echo -n $1)*" \( -type f -o -type l \) || true
}

if test "${abbrev}" = '?'; then
    EMACS=t hint "You can use + to add a new abbrev, like this: +NEW_ABBREV

You can use > to edit an existing abbrev, like thin: >OLD_ABBREV"

    exit
elif test "${abbrev:0:1}" = +; then
    touch "${config_dirs[0]}/${abbrev:1}"
    sawfish-window mark -t abbrevs --with-mark ew "${config_dirs[0]}/${abbrev:1}"
    exit
elif test "${abbrev:0:1}" = '>'; then
    if abbrev_file=$(get-abbrev-file "${abbrev:1}"); then
        ew "${abbrev_file}"
        exec bhj-notify abbrevs "Done editing ${abbrev_file##*/}"
    else
        EMACS=t hint "Maybe you mean +$abbrev?"
    fi
fi

abbrev_file=$(get-abbrev-file "${abbrev}")

if test ! -e "${abbrev_file}"; then
    if test "${abbrev_file:0:1}" = +; then
        exec bash -x abbrevs -a "${abbrev_file}" &> ~/tmp/abbrevs.recur
    fi
    if EMACS=t yes-or-no-p -y "abbrev file for $abbrev not found, create?"; then
        exec bash -x abbrevs -a "+${abbrev}" &> ~/tmp/abbrevs.recur
    fi
    bhj-notify abbrevs "There is no matching file for $abbrev, use +$abbrev to create a new abbrev"
    exit 1
fi
expand_text=$(
    if test -x "${abbrev_file}"; then
        "$abbrev_file"
    else
        cat "$abbrev_file"
    fi
           )
sawfish-window mark -t abbrevs -r
sawfish-window paste "${expand_text}"
