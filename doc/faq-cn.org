* 如何更改其他软件版本

可以参考一下 [[http://baohaojun.github.io/blog/2016/04/13/0-system-config-how-does-it-work-and-how-to-use-it.html][system-config 原理与使用的简要说明]] 。

system-config 会修改你的系统的一些环境变量，其中最重要的一个是 PATH，在 ubuntu/debian 自带的 PATH 变量前面，加上一些 system-config 自己的 PATH 路径，比如 =~/system-config/bin= 等。所以像系统 java 版本的问题，因为 system-config 会在 =~/external/bin/Linux/ext/jdk/bin= 下放一个 oracle 的 1.6 版 java，并且这个路径在 PATH 变量里排在 =/usr/bin/= 前面，所以不管你怎么用 =update-alternatives= 修改 =/usr/bin/java= 的版本，你在命令行输入 =java -version= 看到的永远是 1.6 。

所以，要修改你的 java 版本，有两种办法：

1. 临时修改一下 PATH 环境变量，比如在命令行上执行 ~PATH=/usr/bin:$PATH~ ，然后再执行 =java= 。

2. 在 =~/system-config/bin/overide= 创建指向一个 =/usr/bin/java= 的软链接。

以下是一些查看各种程序版本的一些有用的命令：

#+BEGIN_SRC sh
which java # 显示 java 程序在 PATH 变量里找到的第一个路径
type java # 与上面类似，但如果 java 被定义成一个 alias、function，也可以有显示
type -a java # 显示 java 的所以版本（alias、function、在 PATH 变量里能找到的所有版本）
#+END_SRC

注意如果要永久修改自己的 =PATH= 环境变量的话，一定要在 =~/.bashrc= 的末尾处修改，这样能保证 system-config 对 =PATH= 变量的修改已经完成。如果放在 system-config 之前修改 PATH 的话，system-config 再修改的时候，你的修改会被冲掉。

* 我的 adb（或其他应用程序）好像被 system-config 改出问题来了，怎么办？

还是请先参考一下 [[http://baohaojun.github.io/blog/2016/04/13/0-system-config-how-does-it-work-and-how-to-use-it.html][system-config 原理与使用的简要说明]] ，里面有一些关于 Bash 的原理介绍。

一般来说，你可以先用 =type -a adb= （或 type -a 其他你认为有问题的程序）看一下我做了什么样的修改。这里你可以看到 adb 被我别名到 my-adb 了，所以你可以用这个办法绕过去：

在 adb 的前面加一个 Bash Builtin 命令， =command= 。比如你认为 adb logcat 有问题，那你可以用 =command adb logcat= 把这个问题绕过去。

又比如 =cd= 命令，如果你认为我改的有问题，你也可以用 =type -a cd= 看一下，然后发现它被我别名了，本身原来是一个 Bash Builtin。所以你可以在 cd 的前面加另一个 Bash Builtin 命令， =builtin= ，把问题绕过去： =builtin cd args...= 。

* <<canceled-backports>> 第一次配 system-config 或 system-config-update 时提示安装包冲突

很多情况下是因为在 ubuntu 的系统软件和升级设置里改了升级源引起的。默认情况下，IT 给装的机器把所有升级都给配上了，比如 security 升级、backports 升级。一旦你自己把它取消掉的话，以后很多包就无法再安装了，每次都会提示版本冲突。

[[./images/software-updates.png]]

这种情况下，解决的方法就是把上面的那些✓全部都勾回去，然后运行一下 =sudo apt-get update= 再重新配置、更新 system-config。

注意，千万不要随便升级到 Ubuntu 16.04。可以考虑把上面图中最后一个开关改成不提醒 Ubuntu 系统版本更新。
