#!/bin/bash
set -e

function push-all-projects() {
    (

        projects=$(
            . ~/system-config/etc/github-projects
            echo ~/system-config
            for x in ${github_projects[*]} ${smartcm_projects[*]}; do
                echo ~/src/github/$x
            done
                )

        for p in $projects; do
            (
                cd $p

                if ! git remote add s s:baohaojun/$(basename $PWD) >/dev/null 2>&1; then
                    true
                fi
                git push s HEAD:refs/heads/dev || { bhj-notify system-config "$PWD failed to push to s"; sleep 5; } || true
            )
        done
    )&
}

if test -d ~/src/system-config/; then
    push-all-projects >/dev/null 2>&1&

    (
        for x in ~/src/github/*/.after-push-hook; do
            cd "$(dirname "$x")"
            en_US bash "$x"&
        done
    ) >/dev/null 2>&1
    cd ~/system-config
    rsync . ~/src/system-config/ --exclude .git/ -a --delete --exclude src
    mkdir -p ~/src/system-config/src/github
    (
        cd ~/src/github/
        . ~/system-config/etc/github-projects
        for x in ${github_projects[*]} ${smartcm_projects[*]}; do
            (
                cd $x
                mkdir ~/src/system-config/src/github/$x/ -p
                rsync . ~/src/system-config/src/github/$x/ --exclude .git/ -a --delete
            )&
        done
        wait
    )

    cd ~/src/system-config/
    rm -f .gitmodules
    if git-any-changes; then
        git add .
        git commit -m "auto commit from system-config:$(cd ~/system-config; git log --pretty=%H -1)"
    fi
    if ! git push -f; then
        bhj-notify $PWD "push to s failed"
    fi
    git push github HEAD:system-config >/dev/null 2>&1&
    if test -d ~/external/local/.git/; then
        (
            cd ~/external/local
            if ! git push s:baohaojun/ext-local HEAD:master >/dev/null 2>&1; then
                bhj-notify $PWD "$PWD push failed"
            fi
        )
    fi&
fi
