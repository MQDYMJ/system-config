* 在 shell脚本里使用Abstract Factory的设计模式

在不同的平台下，我需要定义一族函数， ~of~ ，其作用是在命令行下用各自系
统定义的图形程序打开某个文件或URL（ ~of~ 是 “open file”之意）。

比如， ~of~ 在Windows平台下应该用Explorer打开当前目录，而在Linux平台下
应该用nautilus打开当前目录。

我需要一个工厂虚类，其实就是文件。在linux下，这个工厂有一个实类，同时也
有一个对象，那就是我的.bashrc-linux；而在Windows下呢，那就是我
的.bashrc-windows。（我在Windows下在用的是Cygwin。所以也可以使用bash）。

在.bashrc-linux这个工厂里，我们这样创建它的版本的 ~of~ （我们把
~of-linux~ 这个名字省略了，直接就叫 ~of~ ，严格按照design pattern来的话，
你肯定会看到 ~of-linux~，最后看见它被赋给一个 ~of~ 的指针或者引用） ：

#+begin_src sh
function of() {
    gnome-open "$@" > /dev/null 2>&1
}
#+end_src
而在.bashrc-windows这个工厂里，我们这样创建 ~of~ ：

#+begin_src sh
function of() {
     cygstart "$@" > /dev/null 2>&1
}
#+end_src

在.bashrc里，我们这样决定要用哪个工厂：

#+begin_src sh
if test `uname` = Linux; then
    factory=~/.bashrc-linux
else
    factory=~/.bashrc-windows
fi
#+end_src

然后，我们让工厂开工去创建我们想要的对象：

#+begin_src sh
. $factory
#+end_src

哈哈，设计模式有何难哉！（如果你是设计模式高手并且认为我是在瞎扯，那就
对了，我认为设计模式是好的，我们其实一直在默默地用着，但把它拎出来大吹
大擂就容易过了:-）
